[{"content":"🙃缘起: *进坑Hugo这么久了,是时候也开一篇记录一下建站过程了.*本教程是面向小白而写的,所以可能有些东西写的很罗嗦,所以大佬手下留情.本文稍微有点长,所以请保持耐心.😅\n写这篇的一个主要原因有三:\n记录并回顾此站从新建文件夹到诞生的主要过程 帮助一些小白入坑hugo 使文章数加一(doge 📢声明: 由于本人人菜瘾大,技术十分之有限,写的代码非常之烂,都是本着能用就行写的,所以请大佬手下留情.\n📑本篇教程编写环境: 操作系统:\tWindows 11 专业版 22H2\nMicrosoft Edge版本 107.0.1418.62 (正式版本) (64 位)\nMarkdown编辑器: Typora\n博客配置编辑器: VS Code\n命令行工具:Git、Terminal\nHugo版本:hugo extended0.107.0_windows-amd64\nHugo主题:hugo-theme-stack\n使用的主要路径: 桌面、D盘\n基本上就这些了\u0026hellip;.\n🧀Hugo环境搭建 使用hugo之前,必须配置hugo环境,这跟hexo要安装node和npm差不多. 下载的操作建议按照先安装VScode再安装GIt的顺序操作,因为后面的Git有个设置选项需要先有VScode编辑器\n🎈安装VScode 从官网获取VScode的安装包\nVScode官网: https://code.visualstudio.com/Download\n打开安装包并安装,选择I accept the agreement,然后选择Next\n全部打勾勾后选择下一步,这个很重要!\n选择install开始安装,等待安装完成后选择Finish\n至此,VScode就安装完成了,接下来安装Git\n🎈安装Git 从官网下载Git的安装包\nGit官网下载地址: https://git-scm.com/download/win\n打开下载好的安装包进行安装\n直接默认安装路径然后选中下一步\n直接下一步\n这里很重要,如果之前没有安装vscode,这里就选不了该选项\n后面的就全部默认就行,一直选next直到完成安装\n至此,git安装完成,接下来进行hugo的安装\n🎈安装hugo 从hugo官方github仓库下载hugo,记得必须使用带有extended的版本\nhugo官方下载地址: https://github.com/gohugoio/hugo/releases\n在D盘下创建文件夹名为hugo,进入hugo文件夹下并创建名为bin的文件夹,将下载下来的zip文件解压到bin里面\n完整的路径即为: D:\\hugo\\bin\n接下来设置hugo环境变量,依次打开设置,然后选择系统,滑到下面选择系统信息,打开高级系统设置\n打开环境变量\n分别进入一下选项中进行添加D:\\hugo\\bin\\\n检查一下hugo是否安装成功,打开cmd或终端输入hugo version,如果输出一下内容则证明配置成功\n🎈小结 恭喜!到这里,基本就都配置完毕了,现在可以开始博客的搭建了\n🎊Hugo博客搭建 🎈初始化博客 在桌面右键,选择在终端打开,然后输入以下命令\n1 hugo new site blog 然后桌面会出现一个名为blog的文件夹,可以用VScode打开文件夹并打开终端进行后续操作\n🎈hugo-theme-stack安装 删掉默认的配置文件config.toml\n打开终端输入以下命令\n1 2 3 4 5 #进入themes目录 cd themes #获取主题文件 git clone https://github.com/CaiJimmy/hugo-theme-stack.git 将获取到的主题文件中的exampleSite中的config.yaml拷贝到blog根目录中\n并进行配置,根据自己需要进行配置,这里我贴出自己的配置图共参考\n官方配置文档: https://stack.jimmycai.com/config/\nbaseurl: https://blog.linsnow.cn languageCode: zh-cn theme: hugo-theme-stack paginate: 6 title: L1nSn0w\u0026#39;s Blog languages: zh-cn: languageName: 中文 title: L1nSn0w\u0026#39;s Blog description: 无限进步.✍️ weight: 1 en: languageName: English title: L1nSn0w\u0026#39;s Blog description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. weight: 2 # Change it to your Disqus shortname before using disqusShortname: hugo-theme-stack # GA Tracking ID googleAnalytics: # Theme i18n support # Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw DefaultContentLanguage: zh-cn # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage: true permalinks: post: /p/:slug/ page: /:slug/ params: mainSections: - post featuredImageField: image rssFullContent: true favicon: /img/favicon.ico # e.g.: favicon placed in `static/favicon.ico` of your site folder, then set this field to `/favicon.ico` (`/` is necessary) footer: since: 2020 customText: Powered by GitHub.Pages dateFormat: published: Jan 02, 2006 lastUpdated: Jan 02, 2006 15:04 MST sidebar: emoji: 🍥 subtitle: 无限进步.✍️ avatar: enabled: true local: true src: img/avatar.png article: math: false toc: true readingTime: true license: enabled: true default: Licensed under CC BY-NC-SA 4.0 comments: enabled: true provider: waline disqusjs: shortname: apiUrl: apiKey: admin: adminLabel: utterances: repo: issueTerm: pathname label: remark42: host: site: locale: vssue: platform: owner: repo: clientId: clientSecret: autoCreateIssue: false # Waline client configuration see: https://waline.js.org/en/reference/component.html waline: serverURL: lang: reaction: [ \u0026#39;/feeling/good.svg\u0026#39;, \u0026#39;/feeling/common.svg\u0026#39;, \u0026#39;/feeling/bad.svg\u0026#39;, ] pageview: true emoji: - https://cdn.jsdelivr.net/npm/sticker-heo@2022.7.5/Sticker-100/ requiredMeta: - name - email locale: admin: 👻屑博主 placeholder: 🎉不用登陆也可以畅所欲言哦.... twikoo: envId: region: path: lang: # See https://cactus.chat/docs/reference/web-client/#configuration for description of the various options cactus: defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34; serverName: \u0026#34;cactus.chat\u0026#34; siteName: \u0026#34;\u0026#34; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site) giscus: repo: repoID: category: categoryID: mapping: pathname lightTheme: darkTheme: reactionsEnabled: 1 emitMetadata: 0 inputposition: top gitalk: owner: admin: repo: clientID: clientSecret: cusdis: host: id: widgets: homepage: - type: search - type: archives params: limit: 3 - type: categories params: limit: 10 - type: tag-cloud params: limit: 15 page: - type: toc opengraph: twitter: # Your Twitter username site: l1nsn0wleo # Available values: summary, summary_large_image card: summary_large_image defaultImage: opengraph: enabled: false local: false src: colorScheme: # Display toggle toggle: true # Available values: auto, light, dark default: light imageProcessing: cover: enabled: true content: enabled: true ### Custom menu ### See https://docs.stack.jimmycai.com/configuration/custom-menu.html ### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter menu: main: [] social: - identifier: log name: bLog url: /log params: newTab: false icon: clock - identifier: rss name: cRSS url: /index.xml params: newTab: true icon: rss - identifier: github name: dGitHub url: https://github.com/lin-snow params: newTab: true icon: brand-github - identifier: twitter name: eTwitter url: https://twitter.com/l1nsn0wleo params: newTab: true icon: brand-twitter - identifier: facebook name: Facebook url: https://www.facebook.com/l1nsn0w/ params: newTab: true icon: facebook - identifier: instagram name: Instagram url: https://www.instagram.com/l1nsn0w/ params: newTab: true icon: instagram related: includeNewer: true threshold: 60 toLower: false indices: - name: tags weight: 100 - name: categories weight: 200 markup: goldmark: renderer: ## Set to true if you have HTML content inside Markdown unsafe: true tableOfContents: endLevel: 4 ordered: true startLevel: 2 highlight: noClasses: false codeFences: true guessSyntax: true lineNoStart: 1 lineNos: true lineNumbersInTable: true tabWidth: 4 将~themes/hugo-theme-stack/exampleSite里的content整个文件夹复制到根目录中,然后即可在根目录的content中创建md文件进行blog了\n🎈配置博客各个页面 这部分的配置在官方文档中很详细,就不重复造轮子了,直接给出官方文档\nhttps://stack.jimmycai.com/config/menu\n🎈开始创作 博客文章主要都存放在content中,这里可以参考一下我的content文件夹布局,例如我现在想要创建一篇文章,我们可以在blog根目录下打开终端输入hugo new post/2022/XXXX.md这条命令的意思是在conent/post/2022里创建一个名为XXXX.md的文件\n官方写作文档: https://stack.jimmycai.com/writing/markdown\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ├───categories │ ├───blog │ ├───css │ ├───html │ ├───ios │ ├───jailbreak │ ├───javascript │ ├───软件 │ └───随笔 ├───page │ ├───about │ ├───archives │ ├───home │ ├───links │ ├───log │ └───search └───post ├───2021 ├───2022 │ ├───android-tv │ ├───app-store-good-things │ ├───join-hugo-and-stack │ ├───keykey │ ├───m73-hackintosh │ ├───send-file │ └───setup-apple-books 差不多就这些了,自己摸索一下还是能搞懂的\u0026hellip;.\n🏐Hugo博客配合Action部署到Github 🎈注册GitHub 打开https://github.com/,(打不开的可能需要魔法,或者换个时间点打开,具体怎么操作就不细说了,懂得都懂😶),注册一个GitHub账号,如果不会注册那你还来看这篇文章干嘛.\n🎈创建Github仓库 为了使用GitHub Action自动部署,加上便于管理,所以创建两个仓库,虽然一个也行.\n我们先创建一个名字为blog的仓库用于存放hugo生成的文件,打开右上角的+号,然后选择New repository以新建仓库\n跟着图片里的步骤操作,先给仓库取个名字,叫做blog(小白最好将仓库名字跟我起一样的),然后勾选public,接着勾选Add a REAMME file,最后点击Create repository完成创建.\n接下来我们按照刚才那样依葫芦画瓢,再创建一个名为blog-file的仓库\n🎈获取SSH Key密钥 ssh密钥可以是我们推送文件到仓库时不需要每次都输入密码,大大的提高我们的效率.所以我们首先需要在我们的电脑生成ssh密钥\n1.在git bash执行以下指令,配置邮箱和用户名\n1 2 git config --global user.email \u0026#34;you@example.com\u0026#34; #you@example.com替换为你的邮箱并回车 git config --global user.name \u0026#34;Your Name\u0026#34; #Your Name替换为你的名字并回车 2.生成shh key,在git bash中 输入以下命令\n1 ssh-keygen -t rsa 一路回车就行\n默认会生成在如下目录\n1 C:\\Users\\用户名\\.ssh 用记事本打开生成目录下id_rsa.pub,其中的内容即为公钥,id_rsa即为私钥.这两个待会要用到.\n3.将将公钥配置到GitHub账户中,先打开设置,即Settings\n进入SSH and GPG key配置项里,点击SSH keys下的New SHH key进行添加\n4.然后随便在Title项里随便起一个名字,在Key里填入刚才得到的id_rsa.pub里的内容,然后点击Add SSH key就添加好了.\n5.接下来我们需要往刚才创建的名为blog-file的仓库里添加id_rsa密钥,点击Settings,然后找到Secrets and variables,点击Actions,然后点击New repository secret\n🎈部署hugo博客 1.接下来我们在我们的博客根目录下创建一个名为.github的文件夹,然后在文件夹里新建一个新的文件夹,名字为workflows,接着进入workflows文件夹里新建一个名为deploy.xml的文件,再在deploy.xml里填入如下内容,最终目录为~\\blog\\.github\\workflows\\deploy.xml,将deploy.xml中的external_repository项里的lin-snow改为你GitHub注册时的名字即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 name: GitHub Page on: push: branches: - main # master 更新触发 jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # clone submodules fetch-depth: 0 # 克隆所有历史信息 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;0.104.1\u0026#34; # Hugo 版本 extended: true # hugo插件版 Stack主题 必须启用 - name: Cache resources # 缓存 resource 文件加快生成速度 uses: actions/cache@v2 with: path: resources # 检查照片文件变化 key: ${{ runner.os }}-hugocache-${{ hashFiles(\u0026#39;content/**/*\u0026#39;) }} restore-keys: ${{ runner.os }}-hugocache- - name: Build # 生成网页 删除无用 resource 文件 削减空行 run: hugo --minify --gc - name: Deploy # 部署到 GitHub Page uses: peaceiris/actions-gh-pages@v3 with: # 如果在同一个仓库下使用请使用 github_token 并注释 deploy_key # github_token: ${{ secrets.GITHUB_TOKEN }} deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # 如果在同一个仓库请注释 external_repository: lin-snow/blog # 你的 GitHub page 仓库 example/example.github.io publish_dir: ./public user_name: \u0026#34;github-actions[bot]\u0026#34; user_email: \u0026#34;github-actions[bot]@users.noreply.github.com\u0026#34; full_commit_message: Deploy from ${{ github.repository }}@${{ github.sha }} 🚀 2.然后在博客根目录文件夹下新建一个名为deploy.sh的文件用于一键部署博客,在deploy.sh中填入如下内容,其中最后一行代码里的git@github.com:lin-snow/blog-file.git需要更改为你自己仓库的地址,可以通过如下图片中的操作获得该地址\n1 2 3 4 5 6 7 8 9 hugo #构造你的blog git init #初始化git git add -A git commit -m \u0026#39;deploy\u0026#39; git push -f git@github.com:lin-snow/blog-file.git main#向存储库推送 然后双击打开运行deploy.sh即可自动推送文件到仓库,以后写完博客或修改博客后都需要运行一下deploy.sh,才能部署到云端\n3.接下来我们先运行deploy.sh推送一下文件到仓库,等推送上去之后,我们才能完成接下来的操作.\n注意,第一次运行deploy.sh可能会出现如图这种情况,直接输入yes回车即可,如果仓库里没发现上传的文件可以再运行一次deploy.sh\n这里贴出我的GitHub Action运行状况\n🎈开启Github Page 等待Github Action完成后,我们需要开启GitHub page,首先进入blog这个仓库,然后打开设置,找到page项,根据如下设置即可.\n到这里我们就成功上线我们的博客了.至于自定义域名可以在网上找到很多教程,这里就不写了,毕竟我比较懒.\n🍥Hugo主题魔改 🍀基础理论(重要): hugo的魔改不可以直接修改themes文件夹下的主题文件,正确的魔改方式是在博客根目录下创建对应的文件进行覆盖修改,举个栗子:\n比如我们要修的主题文件中的~blog\\themes\\hugo-theme-stack\\assets\\scss\\variables.scss,那么我们应该在博客根目录下创建对应的路径和文件,如~blog\\assets\\scss\\variables.scss,根据这种特点,以下魔改都是按照此法.\n🎈友链双栏 ~blog\\assets\\scss\\custom.scss 在该文件中添加如下代码即可使Front Matter里设置的link变成双栏显示\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 //友情链接双栏 @media (min-width: 1024px) { .article-list--compact.links { display: grid; grid-template-columns: 1fr 1fr ; background: none; box-shadow: none; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); // margin-right: 8px; margin-bottom: 8px; border-radius: var(--card-border-radius); \u0026amp;:nth-child(odd) { margin-right: 8px; } } } } 🎈滚动条美化 ~blog\\assets\\scss\\custom.scss 在该文件中添加如下代码即可.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 // 目录滚动条美化 .widget--toc { #TableOfContents { max-height: 65vh; ol, ul { list-style-type: none; } li { margin: 10px 10px; \u0026amp; \u0026gt; ol, \u0026amp; \u0026gt; ul { margin-top: 10px; padding-left: 10px; margin-bottom: -5px; \u0026amp; \u0026gt; li:last-child { margin-bottom: 0; } } } } } // 全局滚动条美化 html{ ::-webkit-scrollbar { width: 20px; } ::-webkit-scrollbar-track { background-color: transparent; } ::-webkit-scrollbar-thumb { background-color: #d6dee1; border-radius: 20px; border: 6px solid transparent; background-clip: content-box; } ::-webkit-scrollbar-thumb:hover { background-color: #a8bbbf; } } 🎈页面配色微调 ~blog\\assets\\scss\\custom.scss 在该文件中添加如下代码即可.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 // 页面配色样式 :root { // 文章内容图片圆角阴影 .article-page .main-article .article-content { img { max-width: 92% !important; height: auto !important; box-shadow: 0 0px 10px 2px #636b904d; border-radius: 8px; } } // 文章内容引用块左边样式 .article-content { blockquote { border-left: 6px solid #1bcdfc !important; border-radius: 6px; } } // 字体颜色 --card-text-color-main: #34495e; // 行内代码背景色 --code-background-color: #f8f8f8; // 行内代码前景色 --code-text-color: #e96900; // 默认模式下引用块背景样式 --blockquote-background-color: #b9ebea4d; // 全局字体大小 --article-font-size: 2.0rem; // 表格配色样式 --tr-even-background-color: #eff0fa54 !important; \u0026amp;[data-scheme=\u0026#34;dark\u0026#34;] { // 暗黑模式下引用块背景样式 --blockquote-background-color: #313f5645; // 整页背景配色 --body-background: #000; // 卡片配色 --card-background: #191d24; // 表格配色样式 --tr-even-background-color: #1e242ecf !important; // 行内代码背景色 --code-background-color: #ff6d1b17; // 行内代码前景色 --code-text-color: #e96900; // 文章内容引用块左边样式 .article-content { blockquote { border-left: 6px solid #33619b8c !important; border-radius: 6px; } } } } 🎈选中颜色微调 ~blog\\assets\\scss\\custom.scss 在该文件中添加如下代码即可.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // 设置选中字体的区域背景颜色 //修改选中颜色 ::selection { color: #fff; background: #34495e; } a { text-decoration: none; color: var(--accent-color); \u0026amp;:hover { color: var(--accent-color-darker); } \u0026amp;.link { color: #4288b9ad; font-weight: 600; padding: 0 2px; text-decoration: none; cursor: pointer; \u0026amp;:hover{ text-decoration: underline; } } } 🎈Waline配色微调 调整Waline配色使它稍微绿一点哈哈哈\n~blog\\assets\\scss\\custom.scss 在该文件中添加如下代码即可.\n1 2 3 4 5 6 7 8 //waline微调 .wl-panel { background: #6b938914 !important; } .wl-editor { background-color: rgba(83, 131, 130, 0.13) !important; } 🎈菜单栏改园角 调整菜单栏使其在手机下下拉后有圆角\n~blog\\assets\\scss\\partials\\menu.scss创建文件并添加如下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 /*! * Hamburgers * @description Tasty CSS-animated hamburgers * @author Jonathan Suh @jonsuh * @site https://jonsuh.com/hamburgers * @link https://github.com/jonsuh/hamburgers */ .hamburger { padding-top: 10px; display: inline-block; cursor: pointer; transition-property: opacity, filter; transition-duration: 0.15s; transition-timing-function: linear; font: inherit; color: inherit; text-transform: none; background-color: transparent; border: 0; margin: 0; overflow: visible; } .hamburger:hover { opacity: 0.7; } .hamburger.is-active:hover { opacity: 0.7; } .hamburger.is-active .hamburger-inner, .hamburger.is-active .hamburger-inner::before, .hamburger.is-active .hamburger-inner::after { background-color: #000; } .hamburger-box { width: 30px; height: 24px; display: inline-block; position: relative; } .hamburger-inner { display: block; top: 50%; margin-top: -2px; } .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after { width: 30px; height: 2px; background-color: var(--card-text-color-main); border-radius: 4px; position: absolute; transition-property: transform; transition-duration: 0.15s; transition-timing-function: ease; } .hamburger-inner::before, .hamburger-inner::after { content: \u0026#34;\u0026#34;; display: block; } .hamburger-inner::before { top: -10px; } .hamburger-inner::after { bottom: -10px; } .hamburger--spin .hamburger-inner { transition-duration: 0.22s; transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); } .hamburger--spin .hamburger-inner::before { transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in; } .hamburger--spin .hamburger-inner::after { transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19); } .hamburger--spin.is-active .hamburger-inner { transform: rotate(225deg); transition-delay: 0.12s; transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); } .hamburger--spin.is-active .hamburger-inner::before { top: 0; opacity: 0; transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out; } .hamburger--spin.is-active .hamburger-inner::after { bottom: 0; transform: rotate(-90deg); transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1); } #toggle-menu { background: none; border: none; position: absolute; right: 0; top: 0; z-index: 2; cursor: pointer; [dir=\u0026#34;rtl\u0026#34;] \u0026amp; { left: 0; right: auto; } @include respond(md) { display: none; } outline: none; \u0026amp;.is-active { .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after { background-color: var(--accent-color); } } } /* Menu style */ .menu { padding-left: 0; list-style: none; flex-direction: column; overflow-y: auto; flex-grow: 1; font-size: 1.59rem; background-color: var(--card-background); box-shadow: var(--shadow-l2); //改个阴影 display: none; // margin: 0 calc(var(--container-padding) * -1); margin: 0; //改为0 border-radius: 10px; //加个圆角 padding: 30px 30px; @include respond(xl) { padding: 15px 0; } \u0026amp;, .menu-bottom-section { gap: 30px; @include respond(xl) { gap: 25px; } } \u0026amp;.show { display: flex; } @include respond(md) { align-items: flex-end; display: flex; background-color: transparent; padding: 0; box-shadow: none; margin: 0; } li { position: relative; vertical-align: middle; padding: 0; @include respond(md) { width: 100%; } svg { stroke-width: 1.33; width: 20px; height: 20px; } a { height: 100%; display: inline-flex; align-items: center; color: var(--body-text-color); gap: var(--menu-icon-separation); } span { flex: 1; } \u0026amp;.current { a { color: var(--accent-color); font-weight: bold; } } } .menu-bottom-section { margin-top: auto; display: flex; flex-direction: column; width: 100%; } } .social-menu { list-style: none; padding: 0; margin: 0; display: flex; flex-direction: row; gap: 10px; justify-content: center; #设置居中 svg { width: 24px; height: 24px; stroke: var(--body-text-color); stroke-width: 1.33; } } 🎈底部Footer修改 为底部添加字数和文章统计,加一些小修改\n依照路径创建对应该的文件夹和文件\n~blog\\layouts\\partials\\footer\\footer.html并在footer.html中写入如下代码\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 {{- $ThemeVersion := \u0026#34;3.16.0\u0026#34; -}} {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} \u0026lt;footer class=\u0026#34;site-footer\u0026#34;\u0026gt; \u0026lt;section class=\u0026#34;copyright\u0026#34;\u0026gt; \u0026amp;copy; {{ if and (.Site.Params.footer.since) (ne .Site.Params.footer.since (int (now.Format \u0026#34;2006\u0026#34;))) }} {{ .Site.Params.footer.since }} - {{ end }} {{ now.Format \u0026#34;2006\u0026#34; }} {{ .Site.Title }} \u0026lt;/section\u0026gt; \u0026lt;section class=\u0026#34;powerby\u0026#34;\u0026gt; {{ with .Site.Params.footer.customText }} {{ . | safeHTML }} \u0026lt;br/\u0026gt; {{ end }} {{- $Generator := `\u0026lt;a href=\u0026#34;https://gohugo.io/\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34;\u0026gt;Hugo\u0026lt;/a\u0026gt;` -}} {{- $Theme := printf `\u0026lt;b\u0026gt;\u0026lt;a href=\u0026#34;https://github.com/CaiJimmy/hugo-theme-stack\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; data-version=\u0026#34;%s\u0026#34;\u0026gt;Stack\u0026lt;/a\u0026gt;\u0026lt;/b\u0026gt;` $ThemeVersion -}} {{- $DesignedBy := `\u0026lt;a href=\u0026#34;https://jimmycai.com\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34;\u0026gt;Jimmy\u0026lt;/a\u0026gt;` -}} {{ T \u0026#34;footer.builtWith\u0026#34; (dict \u0026#34;Generator\u0026#34; $Generator) | safeHTML }} \u0026lt;br /\u0026gt; {{ T \u0026#34;footer.designedBy\u0026#34; (dict \u0026#34;Theme\u0026#34; $Theme \u0026#34;DesignedBy\u0026#34; $DesignedBy) | safeHTML }} \u0026lt;span\u0026gt; • 由L1nSn0w用❤️魔改\u0026lt;/span\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;!-- 萌备 --\u0026gt; \u0026lt;section class=\u0026#34;powerby\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;/img/icp.png\u0026#34; alt=\u0026#34;\u0026#34; width=\u0026#34;15px\u0026#34; height=\u0026#34;15px\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;https://icp.gov.moe/?keyword=20222117\u0026#34; target=\u0026#34;_blank\u0026#34; \u0026gt;萌ICP备20222117号\u0026lt;/a\u0026gt;\u0026lt;/section\u0026gt; \u0026lt;!-- 字数和文章统计 --\u0026gt; \u0026lt;section class=\u0026#34;powerby\u0026#34;\u0026gt; 📑共咕咕了 {{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}k 字 · 共水了 {{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}篇文章.\u0026lt;/br\u0026gt;\u0026lt;span\u0026gt;\u0026lt;p\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/footer\u0026gt; 🎈样式一 in writing\u0026hellip;\n🎈样式二 in writing\u0026hellip;\n🎈样式三 in writing\u0026hellip;\n🎈in writing \u0026hellip;\n🍀参考及鸣谢 主题文档:https://stack.jimmycai.com/\nhugo文档:https://gohugo.io/\ngithub action参考:Stack主题 + GitHub Action (zhixuan.dev)\n魔改参考自:\nHugo Stack主题更新小记 (xrg.fj.cn)\nHugo Stack 主题配置与使用 | Bore\u0026rsquo;s Notes\n墨纹 (munlelee.github.io)\nSSpiritsの秘密基地 (lv5.moe)\n『Hugo』Hugo Styles (echosec.top)\n\u0026hellip;.\nIn Writing\u0026hellip; 未完待续\u0026hellip;.\n","date":"2022-12-17T22:17:06+08:00","image":"https://blog.linsnow.cn/p/join-hugo-and-stack/hugostack_hu93227961552f3de66aeca07fb63ffc4a_76842_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/join-hugo-and-stack/","title":"拥抱最好用的hugo之stack"},{"content":"起因 我向往常一样逛着小破站，虽然我不是什么玩安卓的专业人士，但是有了iOS越狱的基础，一台破安卓手机和Windows11上推出的WSA,我开始的了解了一些安卓领域的东西，大数据真的厉害，刷着刷着就给我推送了小米盒子刷AndroidTV的视频，没想到电视盒子也能这么搞，这瞬间让我想起了被小米盒子各种广告弹窗支配的恐惧，这下子算是有救了，二话不说，直接开干。🤣\n🤔什么是AndroidTV? AndroidTV就是Google开发的智能电视平台\n整个系统占用小，没有各种广告，动画和ui都很好看而且内置谷歌服务，反正大概就是这么个东西，一般要使用这个系统都是买国际版的一些电视盒子\n😅开整 打开电视，初略的了解一下电视盒子的的型号，我的是MDZ-16-AA,就4g的内存，才安装了两个软件，就天天提示清理垃圾，安装爱奇艺或者腾讯视频使用起来特别卡，估计也就十几帧吧，usb口少的可怜，就给了一个\u0026hellip;刷机的过程和安卓手机差不多，也是先刷twrp，在用twrp刷别的系统，为了偷懒，我按照网上的简单方法，就是先给盒子降级，然后再root,再刷入twrp，然后我就翻车了，本来以为电视盒子成砖了，网上查了查，没想到能救砖，可谓是天助我也，仔细看看了方法，也不是很难就是比较麻烦。具体过程就不细说了，网上很多，以下就记录下我遇到的坑\u0026hellip;\n没有公对公的usb线，但是又不想等快递，所以就自制了一条，说真的，不作就不会死，我拿自制的线连到了笔记本上的两个usb口，结果笔记本烧坏了一个usb口，心疼死我了，害，看来这条线估计是不能用吧，只能乖乖买一条了 一开始不知道小米盒子连接电脑和其他usb设备必须开启adb调试模式，结果进入了恢复模式后twrp自动把内置系统给删了，导致开机只能进twrp，然后又用不了遥控器和鼠标，进入了死胡同，导致了严重后果 用遥控器进入自动刷机必须要在小米盒子里先把遥控器的连接删除才行，否则别想用遥控器进入自动刷机，因为这一步我搞了半天，后来才在网络上看到解决方案，而且不同型号进入自动刷机的按钮不一样，坑的一批 网络上的安卓资源很多都不能用了，各种助手和root工具也失效了，资源十分冗杂，真的是烦，光是找各种资源就花了好几个小时 救砖要把小米盒子拆开，这东西根本不可能用手才开，用工具拆就花了差不多一个半小时，手都废了 拆开后要连接电脑必须要在插电瞬间短接2，3触点，反复尝试，直到连上电脑，使用一个软件强制刷入系统，但是会各种报错，试了很多遍也不行，才4%就报错，最好查了很多资料才看到了一条有关的内容，原因是这个软件在amd上运行有问题，但是我的intel迷你小主机装的是macos，于是乎要救盒子我只能把小主机装回Windows，最后才成功解决了报错 😍一系列折腾之后的效果 安卓版本：Android5.1.1\n固件自带supersu\n支持Google Play Store以及YouTube\n等等\u0026hellip;\n😅让我康康 拍的不好见谅，简单的看一下就行\n🤔盒子刷机后的体验 总体来说很不错，至少是没广告和各种内存不足了，但是看在盒子里装clash看YouTube还是有点吃力，原因是盒子算力不够，只能勉勉强强，推荐是用软路由或者路由器直接爱国上网\n😅更上一层楼 在折腾了一系列小米盒子后，再一次凭借大数据，我刷到了一个古老的项目：Android TV X86,真是一环扣一环，刚好我前面的迷你小主机刷了windows，反正主要是用我的笔记本，不妨把它也刷成AndroidTV,也正好能解决爱国上网慢的问题，加上硬盘超大容量，捡的这台垃圾也算是能好好利用一下了，i3-4360的远古cpu跑个Android是可以秒杀现在大部分普通电视盒子的，说干就干\u0026hellip;\n😍先让我康康 🤔So,什么是Android TV X86 Android TV x86 由开发者 AmznUser444 Dev 创建。 因为 ROM 的根源是 Android-x86 项目。 最初的版本基于 Android 9 Pie，其系统要求只需要具有 1.2 GHz 双核 64 位功能的处理器，以及 64MB 视频内存的典型 Intel / NVIDIA / AMD GPU。\n简单来说就是能让你的电脑跑Android TV的一个系统\n🥱寻觅所需资源 这个东西好像只有国外两个团队再制作，为了获取到最新版，我Google了一下，并且加入这两个团队的discord，不过其中有一个好像已经没有开发了，版本停留在了Android 9只剩下另一个还在缓慢开发，目前最新的AndroidTV 版本是Android11，不过作者镜像下载要收费，大概是10欧元左右吧，反正我这种穷屌丝是真的负担不起，于是只能下载它的免费版本，免费的是Android 9，安慰自己说：反正也够用了。\n经过一番了解和实践，其中那个已经没有开发的团队制作的AndroidTV x86在安装过程中遇到了些问题，估计是我菜或者镜像不行，所以推荐使用还在维护的AndroidTV.\n🤔实践过程 提前将硬盘分区，并设置好记的硬盘名称，格式设置成ext4,我大概是分了64GB,不过其实不用这么多，这太浪费了，10G估计就行了 下载Android TV x86镜像和Rufus刻录软件,Rufus的官网：https://github.com/pbatard/rufus/releases/ Rufus打开看是否显示U盘 然后选择镜像即可，分区类型设置为MBR,引导设置为BIOS或EFI,文件系统设置为Large FAT32,其他的话默认就行，然后直接一开始以ISO方式刻录进U盘 重启电脑进入bios设置u盘启动顺序或者直接按快捷启动按键启动，不同主板对应按键不同，自行百度，注意BIOS设置把安全启动关了 进入安装界面选择 installation - Android-x86 to harddisk(不想安装至硬盘的直接Run Android x86就行) 选择Android TV x86需要安装的硬盘(硬盘提前分区), 选择ext4, 出来提示全部选择 YES， 等待安装完毕就可以拔掉U盘了，如果没有进入系统的话可以检查一下启动顺序 🙌安装完后注意： 跳过Paypal二维码界面\n1：按 Ctrl+alt+F1\n2：输入\n1 pm disable com.tosanthony.tv.networkprovider 然后按 回车(Enter)\n3：按 Ctrl+alt+F7或F8 回到主界面\n设置界面跳过自动更新和谷歌登录的粗暴方法:\n1.Ctrl+alt+F1进入Console 2.输入\n1 pm disable com.google.android.tungsten.setupwraith 3.回车 4.Ctrl+alt+F7 ，（如果家里网络已经爱国上网的话就不用跳过谷歌登录了）\n如何用adb安装软件？\n下载应用到U盘，插入U盘 按 Ctrl+Alt+F1 进入控制台， 输入cd storage，然后回车， 再输入ls,然后回车，一般显示的第一个名字就是你的u盘名字 输入cd 你的u盘名字，可以输入u盘名字的前几个字母然后按tab键自动补齐 再输入ls并回车，根据你的u盘目录找到apk安装包 使用cp命令将apk拷贝到 /data/local/tmp 目录下 例如\n1 cp bilibili.apk （注意这里有一个空格）/data/local/tmp/bilibili.apk 进入tmp目录，输入 cd /data/local/tmp\n安装apk，输入pm install bilibili.apk 输出 Success 说明安装成功\n按Ctrl+alt+F7 回到主界面\n建议第一个软件安装当贝市场，因为后面很多常用的软件你都可以在里面直接下载安装，不用再输入代码了。\n开启arm兼容\n1、下载对应houdini文件，houdini9_y.sfs\n2.拷贝到u盘\n3、按 Ctrl+Alt+F1 进入控制台，文件保存在storage/.. 目录下\n4.输入同上，输入 ls\n5.找到storage目录，输入 cd u盘名称 进入你的U盘，输入ls，查看你拷贝的 houdini9_y.sfs 文件是否在当前目录。\n6.输入\n1 cp houdini9_y.sfs /system/etc 并回车\n7.输入\n1 enable_nativebridge 并回车\n8.输入\n1 reboot 并回车\n遥控器：\n给AndroidTV安装悟空遥控后就可以拿手机当遥控器了，或者买个usb遥控器，大概十几块钱\n🎈Android TV x86体验 虽然只能1080p,但是显示还是挺清晰的，同样的支持Google服务，但是不能用奈飞，总体使用起来非常舒服\u0026hellip;\n🎈Android TV x86资源及链接汇总： 为了摆脱百度网盘的限速，我把文件传到了阿里云盘，并且把后缀改成了mp4,所以下载下来后改成iso就行，下载下来的houdini9_y.mp4要把名字改成houdini9_y.sfs\nAndroidTV镜像文件链接：\n1 https://www.aliyundrive.com/s/oPYD7AHJJc3 Rufus刻录软件链接：\n1 https://github.com/pbatard/rufus/releases/ 当贝市场链接：\n1 https://www.dangbei.com/ houdini9_y.sfs下载：\n1 https://www.aliyundrive.com/s/oPYD7AHJJc3 discord群组：\n1 https://discord.gg/yUwdq8x ","date":"2022-07-22T01:20:08-07:00","image":"https://blog.linsnow.cn/p/android-tv/androidtv_hu87338ded4b418b0ada80b7fd51c74a50_9960_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/android-tv/","title":"我的AndroidTV折腾小记"},{"content":"所谓的AppStore？ AppStore, 从字面上看就能知道它的作用了，是的，通过AppStore，我能轻松的获取到各种我需要的软件，作为一个商店，里面大部分软件是免费的，但是有些是收费的，并且AppStore会根据不同国家会提供不同的App,这大概就是你使用AppStore需要了解的一些东西\n🙌网络工具之Shadow Rocket ShadowRocket，俗称小火箭。这是一个功能十分强大的网络工具，一般要配合节点使用，支持各种协议，如ssr，ss等等，而且也支持通过iCloud同步和备份节点，整个软件十分简洁，使用起来很舒服。当导入一些节点之后，我就开始遨游于更大的一个互联网世界.不过该App不在国区上架,还好前一阵子我注册了一个美区账号，并且用Apple Gift Card充了3美刀进去，刚刚后够买。官方的TeleGram群组非常活跃。ShadowRocket是买断制的，花了2.99$到手.我觉得这是我买的最值的一个手机app了.\n😛手游之Terraria Terraria,中文名是泰拉瑞亚.这个游戏一开始是在b站看别的up主玩发现的,一些网友对于泰拉瑞亚的评价很高，我觉得泰拉瑞亚和MineCraft挺像的，虽然Terraria是一个2D平面游戏。正式它是个平面2D游戏，不怎么吃性能，对于我的iPhone 6s还是比较友好的。平时使用的iPhone6s在性能上已经有亿些落后了😂，对于一些大型的游戏如原神，王者等已经带不怎么动了，因此我转向了一些小巧的游戏，这是我选Terraria的一个原因。既然我都有电脑了，为什么还要玩手游？其实，现在是快节奏的时代，很多时候使用电脑玩游戏稍有有亿点繁琐或费时，而手游能够让我利用到我的碎片时间，还能很方便地和盆友联机，满足了我的社交需求，所以这些是我选择泰拉瑞亚的另一个原因。泰拉瑞亚玩法很新颖，而且还有Wiki可供查看，也支持云端存储数据，感觉非常的不错👍。\nTerraria分为国服和国际服，同样也是买断制的，虽然国际服版本更新较快，但是汉化不完整，并且价格也是个大问题，国服原价是18元，活动降到了12元，配合支付宝的Appstore红包，最终是用了2.52元买到手了。\n🛡️浏览器插件之广告屏蔽 这个Safari的一个浏览器扩展，软件十分精致，受够了百度的流氓广告，有了这个扩展，浏览器使用体验直接起飞。这也是个买断制的app,用支付宝红包抵扣完直接就相当于白嫖了,美滋滋.\n😊终 你买到有什么宝藏软件吗，也拿出来和我一起分享分享呗。\n","date":"2022-05-04T07:02:58+08:00","image":"https://blog.linsnow.cn/p/app-store-good-thing/appstore_huadcc3e9f96e5eba205776b3d97d173f0_56720_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/app-store-good-thing/","title":"我在AppStore买到的好物"},{"content":"bb 自从入手了机械键盘，买的是青轴，打字就变得很惬意.由于平时一直在整这整那，而且没有去练，导致打字速度属实有点儿拉胯啦，这不，最近发现了个练打字的软件-keykey typing tutor，体验甚好，自从用了它，我的打字速度可以说是翻了一番，简直不要太爽，准备当一回“键盘侠”了\u0026hellip;.\n正文 很多人用windows练打字可能都是用金山打字通，或者是用网页，但是金山打字通几乎是没有维护了，有些功能还要登陆才能用，设计也很拉胯，体验不是很好，网页就更别提了，网页app有时打开会有点慢，不像app可以随心所欲。今天分享的软件keykey typing tutor是macOS下的软件，App Store是收费的，但是作为穷学生的我显然买不起，所以懂得都懂\u0026hellip;..\n放一张软件的界面截图吧\u0026hellip;\n软件界面算是比较简洁的，而且也能进行一些自定义设置，通过设置letters和一些复杂难度就可以进行针对性训练，效果很棒\nmore in writing\u0026hellip;.\n","date":"2022-03-06T12:18:28+08:00","image":"https://blog.linsnow.cn/p/keykey/keykey_huf5432d832120167b5b5bfb3a6aa66fe3_12808_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/keykey/","title":"我认为的最好用的打字软件"},{"content":"前言 其实这本来打算在寒假写的，但是由于我懒和其他一些原因，就拖到了现在。对于电脑有一点点了解后确实心痒痒，看见图吧大佬各种人才我寻思着自己捡一台垃圾，很幸运的是在b站看到了司波图大佬的捡垃圾视频，我也是成功上车了，前前后后属实很折腾，本篇文章算是记录一下吧，你看到的这篇blog也是在这台电脑下敲的.\n正文 捡垃圾的渠道我是海鲜市场和某宝配合着用的，因为有些东西在某宝和海鲜市场基本一样的价格。本次捡垃圾也算是比较顺利，花700块钱就装好，用来日常使用和体验macOS，组建Apple生态挺不错的，这价格还要什么自行车\u0026hellip;\n配置 买的是联想M73 Tiny准系统\n什么是准系统，就是带散热器、机箱、主板的一个套装，买来后只需自行购买欠缺的配件装上就行了.\n配件类别 具体型号 主板 H81(联想M73 Tiny） CPU Intel i3-4360标压 内存条 杂牌ddr3 1333MHz 4G*1 硬盘 杂牌120g固态硬盘 电源 联系原装90w电源 转接头 dp转hdmi转接头 视频输出线 家里闲置的HDMI转HDMI线 网卡 博通bcm94352hmb 天线 一代的IPEX内置天线 小机机的外貌，内部图就不拍了，我懒得拆开\n折腾之白名单 为了能够用上这张bcm94352hmb，联想m73必须刷白名单才行，好在司波图在一期视频有讲解如何刷白名单，算是比较轻松的一部分，不过bios的版本貌似有点低，导致我后续小机机出了各种毛病，无奈只能更新一下bios了，不得不说联想的bios是真的乱，查了好多个联想网站都找不到这台机子的bios，后来才知道得着美国联想官网里才能找到，真是**了，白名单和bios算是折腾完了\n折腾之黑苹果 这个为什么很折腾呢，不是网上有很多人做好了efi吗？很不幸，司波图大佬的efi只能安装macOS10.15，无法安装big sur，且开机略慢。GitHub也有开源的一些efi，但是也是各种毛病，且多年没有维护了，问题很多。 为了完美的体验，只好直接为小机机定制EFI，这里便是噩梦的开始，很折腾，要么开机进去后直接黑屏，要么开机一半自动关机，或者网卡不能驱动，基本都是efi的问题，由于技术有限，只能慢慢对efi做调整，各处爬帖子. 算是功夫不负有心人，总算是给配出来了，也吃上完了完美黑苹果，真香。\n折腾之定制USB 由于macOS11.3之后的系统变动，安装和更新新版必须要定制USB端口，否则会卡代码和USB用不了，无奈只能装个windows给这台机子定制USB端口，更***的是，由于定制好USB后要给efi添加两个驱动，但是我的疏忽，只添加了一个驱动，所以就导致后来的各种毛病，好在后来才发现了问题\u0026hellip;.\n成果分享之EFI 整了这么久，如果没有网上一些热心网友的帮助，我可能还要撞很多坑，因此，我打算把我的EFI也开源出了，让大家使用。 这里就简单的给我这个EFI做个介绍吧。 这个EFI提供了过的版本的专属config共选择使用。\n其中包括从macOS10.15到macOS12各大版本的config文件，使用只需把想要用的config对应的文件改名为config.plist即可，想要看跑代码过程可以在引导界面按下win+v键即可.\n目前该opencore的版本为0.78，全部文件均使用来自官方的最新文件，对每个不必要的选项进行了精简优化，三码已经去掉了，只需自行加上三码即可.但是机型最好不要更改，防止无法安装.后续版本的更新看心情和时间，有问题的可以直接在本文下评论.\n整个EFI大致结构如下： 采用oc最新版，包括驱动，并且有我维护，随缘更新.\nhackintools图： 引导界面： 获取EFI Github地址:\nhttps://github.com/lin-snow/hackintosh-m73-tiny\n👋如果你白嫖了，希望可以点歌免费的star或者考虑打赏该项目，求求了\n一些功能演示图： 隔空投送 网卡蓝牙驱动 支持4k和多种分辨率\n其他 每个接口基本都能正常使用，包括耳机接口.板载声卡已正确驱动.\n鸣谢 国光：国光 (sqlsec.com)\nOpenCore 安装指南 (dortania.github.io)\n司波图：司波图的个人空间_哔哩哔哩_bilibili\n黑果小兵： 黑果小兵的部落阁 (daliansky.net)\nopencorepkg： 发布 ·acidanthera/OpenCorePkg (github.com)\noc编辑器：ic005k/OCAuxiliaryTools: Cross-platform GUI management tools for OpenCore（OCAT） (github.com)\n群友们的热心解答\n\u0026hellip;\u0026hellip;.\n打赏： 本博客一直用爱发电，此EFI项目已经开源给了大家，如果这个项目对你有帮助，希望可以考虑给这个项目点个免费star\n","date":"2022-03-04T16:45:33+08:00","image":"https://blog.linsnow.cn/p/m73-hackintosh/hackintosh_hu4d8fd881a0a0d6b343cece39d145359a_45132_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/m73-hackintosh/","title":"记我的第一次捡垃圾之M73"},{"content":"what\u0026rsquo;s up 貌似互联网上有大部分人觉得文件传输很麻烦，而微信传输只能在多个微信号之间传输，甚至还有大小限制，使用网盘传输又很容易被限速，所以今天就推荐几个好用的免费的文件传输工具。。。。\nMUSE 偶然发现的一个优雅的文件传输网站，体验不错，还支持浏览器扩展,速度是不限速，还能进行一些个性化设置，设计风格我还是很喜欢的\nMUSE官网\nhttps://musetransfer.com/\nFireFox Send Fire Send似乎是火狐浏览器那家公司推出的一个小工具，火狐应该是可以信的过的，这个小工具可以直接通过web来使用，只需要访问其网站就行\nFireFox Send官网\nhttps://send.ioiox.com/\nAirPortal 开发这个工具的作者也开发了一个很火的青柠起始页，此工具同样支持文件分享，也支持文本加密分享\nAirPortal官网\nhttps://airportal.cn/\n奶牛快传 这个貌似是通过主页广告来盈利的，不过也是不限速的，还挺好用的\n奶牛快传官网\nhttps://cowtransfer.com/\n","date":"2022-02-05T19:10:01+08:00","image":"https://blog.linsnow.cn/p/send-file/filedeliver_hu09ee1f3cb6b5339661ba7dffaa7d3586_57006_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/send-file/","title":"如何优雅的传输文件"},{"content":"🍉一些废话 这是一篇关于一个屑博主想读书后水的一篇文章，并试图拉你一起下水（bushi) 😅.\n我会写的尽量详细，但这只是一个我认为可行的一个方案，或许你也可以直接摸索适合你自己的阅读方案。\n在b站上面看到了一个up主分享的英文原著阅读，瞬间感觉又行了🤣，恰好iOS系统自带了 Apple Books，于是乎新一轮的折腾便开始，害~🤔\n🎉开始之前 在开始之前，你应该先有所准备，Follow：\n硬件 软件 装有较新OS的iPhone（或者iPad、Mac) Apple Books \u0026hellip;\u0026hellip; 浏览器 🧀理论知识 Apple Books貌似只支持导入 epub格式的电子书.\n🍥软件获取 如果已经安装完apple books了的话就可以跳过了不看了\n一般一个完整OS都自带apple books，但不排除有人把它删了\n从官网获取最新版 apple books,几乎每个区域的 app store都提供了软件下载，可以直接搜索下载\n官网地址：Apple Books on the App Store\n📄正文 🎃核心思想 通过获取各种想要的书籍的epub格式并使用apple books打开即可成功导入并使用。\n📢书籍来源 这里我只推荐几个常用的获取电子书的地方，不能保证稳定不掉，如果掉了，你也可以自行Google一些资源\n电子书资源链接 简介 书舟搜索 基本上能满足大部分书籍了 Z-Library 号称世界最大的电子图书馆 鸠摩搜索 界面可爱又简洁，提供各种电子书格式 \u0026hellip; \u0026hellip; 注：Z-library主站貌似要魔法才能用,这里提供几个Z站“子站点”，资源全部互通，访问没有限制。\nZ-library子站点 http://b-ok.com https://hk1lib.org https://zh.1lib.pl https://1lib.tw 虽说是国外站点，但适配了中文界面（如果打开是英文，可拉到页面最底部，english那里选chinese），全站无广告，也无强制登录。\n进阶: 通过Telegram一些电子书频道能够快速获得想要的epub电子书，当然使用telegram存在一些门槛\n📌使用方法 通过获取epub格式的电子书，使用你的设备并将需要的书籍导入到 apple books\n🎄同步书籍 同步你的书籍很方便，只需要在你的iCloud里开启books同步按钮即可\n🃏软件的一些界面 这里展示一张软件使用的界面，大概看看就行\n🔮管理你的图书 简单粗暴，你可以直接在 apple books里管理你的书籍\n✏阅读分享（非必要 这个其实有很多有很多种方法，比如b站有up用notion来搭建，当然也可以使用你的blog来分享，这个可以自行发挥。\n📕more In Writing\u0026hellip;\u0026hellip;\u0026hellip;\u0026hellip;.\n","date":"2022-01-02T16:31:57+08:00","image":"https://blog.linsnow.cn/p/setup-apple-books/applebooks_hu43fd65d0fe8b84fe74ca0dc821ce0ca2_17488_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blog.linsnow.cn/p/setup-apple-books/","title":"如何用apple自带图书app搭建个人专属阅读库"},{"content":"前言 作为一个游戏党，谁会不知道steam、epic呢，这不\u0026hellip;.圣诞节e宝又又又送大礼了。回想起这一年，真是白嫖了epic很多游戏，e宝是真的大方。❤❤\nElse 这次e宝直接送了古墓丽影三部曲，贫穷的我差点被被刺，最终还是等等党获得了胜利，成功白嫖古墓丽影三部曲，就一个字，爽死~~~~🎉\n目前500g的硬盘已经给游戏占了320多G了.emmmm\u0026hellip;\u0026hellip;.🤦‍♂️\n奈何家里网速有点慢，游戏还没下载完成，shit\n如果说epic 能启动快点，估计以后还是可以跟steam竞争吧，（虽然大部分游戏都在steam里买的，真是对不起e宝了hhhh\n活动截止到2022年1月7号就结束了，快去白嫖吧\u0026hellip;\u0026hellip;\n","date":"2021-12-31T17:55:10+08:00","image":"https://blog.linsnow.cn/p/epic/epic_hue9e897316f05956e276bc520f8e63e3a_23505_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/epic/","title":"E宝-yyds！！！"},{"content":"Who is Steve Jobs （引用至百度百科\n史蒂夫·乔布斯（Steve Jobs，1955年2月24日—2011年10月5日 ），出生于美国加利福尼亚州旧金山，美国发明家、企业家、苹果公司联合创始人。\n1976年4月1日，乔布斯签署了一份合同，决定成立一家电脑公司。 1977年4月，乔布斯在美国第一次计算机展览会展示了苹果Ⅱ号样机。1998年苹果推出iMac ，创新的外壳颜色透明设计使得产品大卖，并让苹果度过财政危机。2011年8月24日，史蒂夫·乔布斯向苹果董事会提交辞职申请。\n乔布斯被认为是计算机业界与娱乐业界的标志性人物，他经历了苹果公司几十年的起落与兴衰，先后领导和推出了麦金塔计算机、iMac、iPod、iPhone、iPad等风靡全球的电子产品，深刻地改变了现代通讯、娱乐、生活方式。乔布斯同时也是前皮克斯动画工作室的董事长及首席执行官。\n2011年10月5日，史蒂夫·乔布斯因患胰腺神经内分泌肿瘤 病逝，享年56岁。\n商业理念 创新决定了你是领袖还是跟随者 和最优秀的人一起工作 注重质量 在产品中置入美学因素 了解消费者需求而不掌握消费者反馈意见 连接关联事物 不招聘俗套的员工 鼓励其他人另类思考 不追求复杂 出售梦想而非产品 十周年纪念 2021年10月，为纪念乔布斯逝世十周年，苹果官网上线短片《我们亲爱的Steve》，并配文来自Steve家人的一封信。短片中记录了乔布斯生前对PC、手机、平板电脑、数字出版等产业做出的贡献。虽然乔布斯已经逝世，但是他的精神，仍在激励着那些渴望改变世界的人们。\n来自 Steve 家人的一封信\n这十年来，我们怀着悲思，努力坚强起来，\n抚慰着深深伤痛的，是心中对他与日俱增的感念。\n我们每个人都曾寻找各自的慰藉，\n但对 Steve 的爱，还有他教会我们的一切，\n却像一个通往美好的路标，让我们最终走到了一起。\nSteve 才华横溢，他的言传身教，至今让我们感同身受。\n他让我们懂得要敞开心胸去拥抱世间的美，\n要对新的想法保持好奇心，去想见转角之后的那片风景。\n最重要的，是始终以初学者的心态，谦逊求知。\n今天，我们依然学着以他的眼光去看待许多事物，\n但他也教导我们要有自己的眼光。\n他给了我们生活的才具，让我们受益良多。\n我们最大的慰藉之一，\n是眼前一切的美好都能让我们想到 Steve。\n大到一片郁郁葱葱的山坡，小到一件做工精良的器物，\n都不禁让我们忆起他的精神。\n即使在饱受病痛折磨的那几年里，\n他也始终坚信存在于生命中的美。\n我们很想他。再多的追忆，也不足以表达心底那份思念。\n有他这样的丈夫，这样的父亲，是我们一生的福气。\n一些名言 消费者并不知道自己需要什么，知道我们拿出自己的产品，他们就发现，这是我要的东西\n——乔布斯\n“苹果不会因为任何一个人的离开而改变，永远不要去想可能发生在未来的某件事换成我，我会去怎么做，这是毫无意义的，记住在任何时候去做你们自己觉得正确的事就够了。”\n——乔布斯离世前给全体苹果员工的邮件中写道\n说说库克 苹果创始人乔布斯在人生的最后时光将这家公司托付给了他所信任的库克，其实库克在众人的质疑下已经走了十年了，不得不说，apple现在依然很有活力，iPhoneX开启了全面屏时代，M1芯片刷新了人们对arm架构的认识，重新看到arm在桌面端的光明前景,2030年实现全面碳中和\u0026hellip;..\n库克也可以说是难得一遇的商人了，供应链顶端的男人\u0026hellip;\n下一个十年，或许值得去期待\n","date":"2021-10-13T15:56:04+08:00","image":"https://blog.linsnow.cn/p/stevejob/mac_hudd807483c4c9fcb94b5688dab1b38f82_26045_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/stevejob/","title":"乔布斯逝世十周年"},{"content":"Windows11正式版!出发! 前言 2021年10月5号，微软正式发布了Windows11的第一个正式版.xdm,开冲.这篇文章，将带你无伤轻松的踏上Windows11的快船\n🎉Why Windows11 个人认为Windows11非常值得升级.如果你具有一定的电脑使用基础，并且喜欢各种新的事物，那么可以试一试，或许能因此得到一个适合的操作系统。\n1、抛开win11界面上的改变，因为这是个人使用习惯的问题，无法讨论值不值得。\n2、win11相比之前的系统，拥有更加强大的性能，无论是办公还是玩游戏都更加流畅。\n3、同时，随着技术的更新，将会有大量新的插件、软件支持win11系统，而不支持曾经的系统。\n4、就像是此前的win10系统获得了大量win7所没有的技术支持一样。\n5、此外，win11还有着win10所不具备的兼容安卓app功能，能够直接安装使用安卓应用。\n👋安装前的前提 在正式版推出前，我已经专门写过一篇关于Windows11安装的入坑指南。\n如何确定自己的电脑是否能够直接升级，这很必要，因为直接升级能够省去很多的麻烦，无缝切换巴适得很.😂\nWindows11系统要求 硬件表检测（不推荐 系统要求这些是在电脑上安装 Windows 11 的基本要求。如果您的设备不满足这些要求，您可能无法在设备上安装 Windows 11，。如果您不确定您的电脑是否满足这些要求，您可向您电脑的原始设备制造商 (OEM) 进行核实，或如果您的电脑已在运行 Windows 10，那么您可利用电脑健康状况检查应用来评估您电脑的兼容性。您的设备必须已安装 Windows 10 的 2004 或更高版本，才能升级。可在‘设置 \u0026gt; 更新和安全’中的 Windows 更新功能中获取免费更新。\n硬件 要求 处理器 1 GHz 或更快的，支持 64 位的处理器（双核或多核）或系统单芯片 (SoC)。 内存 4 GB。 存储 64 GB 或更大的存储设备 系统固件 支持 UEFI 安全启动。 TPM 受信任的平台模块 TPM 2.0 版本。 显卡 支持 DirectX 12 或更高版本，支持 WDDM 2.0 驱动程序。 显示器 对角线长大于 9 英寸的高清 (720p) 显示屏，每个颜色通道为 8 位。 简单粗暴检查方法（推荐 看不懂上面的没关系，用下面的方法也行.\n使用官方的检测工具 由于一开始官方的检测工具不怎么好用，但现在已经改善了，所以可以去下载一个试试.\n官网下载地址：pchealthcheck\n注意：打开这个链接后可能找不到软件的下载地址，幸运的话应该可以直接看到下载地址，如果看不到就需要划到底部，展开某个问题就能看到下载地址了，\n如图\n打开官方检测工具并点击立即检测\n查看是否符合系统要求\n使用WhyNotWin11 大神Robert Maehl开发了whynotwin11，这是一款实用的windows11升级检测工具，为了帮助Windows用户知道他们的设备是否被支持，它的判断逻辑简单直接，比微软的官方解决方案做得更好。同时它还可以根据所有相关标准检查PC的升级资格，而且该应用已经多次更新。除此之外，whynotwin11能够帮助用户去检测任何导致无法升级到Windows 11的问题，这对发现和解决这些问题是有非常大的帮助，软件轻巧实用，完全不需要任何的安装，下载双击打开即可使用\n工具地址：https://github.com/rcmaehl/WhyNotWin11\n下面是我电脑的检测结果\n不通过检测方法怎么办 不通过不慌，其实不通过就是不能直接升级到windos11而已，那么我们可以通过u盘直接安装就行。与Windows10类似。下面会讲到方法\n👨‍💻获取Windows11 Windows11官方获取网站\n官网链接： https://www.microsoft.com/zh-cn/software-download/windows11\n使用Windows 11 安装助手 这种方法适合于已有Windows10的用户，能够直接使用这个安装助手升级到Windows11。将工具下载下来并运行，跟着软件的提示操作就好了，有手就行，十分简单\u0026hellip;..\n使用u盘安装 这个方法是我本人比较推荐的，**检测不通过**应该也可以通过这种方法安装上Windows11，当然你需要有一个u盘（大于等于8G)\n使用官方工具刻录U盘 点击立即下载将工具下载下来\n运行该工具\n然后插上u盘\n接受条款\n一般默认就行，然后下一步\n选择使用的介质，那当然是U盘\n选择自己插上的u盘，然后下一步\n等待刻录完成后就可以了\n使用U盘PE安装 这种方法也能够解决Windows检测不通过\n我个人比较推荐的pe还是微PE\n网络上的pe一大堆，怎么顺手怎么来呗\n提前将微pe刻录进u盘后把Windows11放到u盘里就行，这里就不重复造轮子了，自己百度一下就行\nWindows11镜像可以从官网获取，也可以从MSDN获取，或者从国外镜像源UUP Dump获取，都行。\n从官网获取镜像iso(推荐\n下载下来之后把镜像放到有pe的u盘里就可以了，具体怎么用pe安装百度一下就有了\n🍔结语 这篇文章有点肝，哈哈哈哈，快去冲Windows11\u0026hellip;.\n","date":"2021-10-05T09:53:05+08:00","image":"https://blog.linsnow.cn/p/win11/win11_hud22cc3af5e457c8ecb727efb06a1b175_34101_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/win11/","title":"Windows11正式版!出发!"},{"content":"我的OpenCore与Hackintosh 前言 趁着国庆，我花了一天的时间来学习opencore文件的配置。\n在这里十分感谢黑苹果大佬国光的文档及教程，目前配好的EFI可以说是完美黑苹果了。顺便写下这篇文章，\n我已经将EFI开源至GitHub，整个EFI全部为2021-10-02最新的驱动及open core版本，opencore不定期会更新一下，可以到GitHub点个star\u0026hellip;.\n我的配置 这里简要的写一下\n主板：华硕PRIME H310M-K\nCPU： intel core i3 8100\n硬盘：金士顿sata 128G\n声卡 ：Realtek ALC887\n独立显卡： 英伟达 丽台k600\n核心显卡: UHD630\n网卡： Realtek 8111\n上几张图片 macos里的简介 hackintool概要 opencore引导界面 整个EFI结构 项目地址 GitHub：https://github.com/lin-snow/hackintosh-h310-i38100\n","date":"2021-10-02T20:47:44+08:00","image":"https://blog.linsnow.cn/p/my-opencore-hackintosh/hackintosh_hu2e9c97e3f505fe7810981774cd8cbd49_18871_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/my-opencore-hackintosh/","title":"我的OpenCore与Hackintosh"},{"content":"适合win11的开源哔哩哔哩客户端 前言 b站，现在几乎成了许多人每天闭上的网站之一。在电脑端，b站使用网页提供服务，当时在微软商店貌似也有uwp版的客户端，但使用体验并不好，功能少的可怜，设计界面也不是很好看，这么久了官方也不更新一下。。。。\n不过还有，前阵子刚好逛b站的时候发现了一款名为——哔哩 的开源软件，接下来隆重介绍这款nb的软件。\n什么是哔哩 软件简介：哔哩是一款设计精美的第三方UWP应用.\n引用该项目的声明 我做这个应用一方面是出于对B站的喜爱，另一方面是对自己的一个挑战。我想尝试将一款移动应用解构并移植到桌面上，这能让我对移动交互与桌面交互有更深的理解。\n但该项目由于一些不可抗力，已经停止开发。不再主动尝试修复bug（除非我自己遇到），也不再开发新的功能，目前已经在 Microsoft Store 中下架。\n本应用出于学习的目的进行开发，不进行任何商业相关的行为。同时尽管应用能显示4K清晰度选项，但如果你不是大会员，则片源也不会是 4K。\n尽管是原生 UWP ，但应用在 ARM 设备，比如 Surface Pro X 上可能无法运行，我也不知道具体原因，可能要等有相关设备了才能测试。\n应用不提供观看直播及视频下载的功能，原因固然是多方面的，但主要原因还是我没这需求。\n软件截图 软件主界面 未缩放侧边栏\n缩放侧边栏\n播放界面 番剧界面 设置界面 平板模式 如何使用及安装 GitHub下载地址：\nhttps://github.com/Richasy/BiliBili-UWP/releases/\n下载软件的安装包\n解压到随便一个文件夹中\n用powershell打开Add-AppDevPackage.ps1\n根据提示运行完Add-AppDevPackage.ps1\n运行文件夹里的Install.ps1文件，同样使用powershell.\n等待安装完成后在开始菜单里打开app\n结尾 感觉开发者无私的奉献，喜欢的可以去GitHub点个star，为开发者助力。\n","date":"2021-10-02T07:30:35+08:00","image":"https://blog.linsnow.cn/p/win11-bili/bili_huc13bee58daafe6dbfb88c11e9e5575a8_21144_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/win11-bili/","title":"适合win11的开源哔哩哔哩客户端"},{"content":"浅谈DDoS 闲言碎语 今天是2021年9月10号。很开心的迎来了教师节，也是第一次遇到教师节放假，祝各位老师们快乐呀。一早上上了一节早读和数学课就回家了。其实我也不懂什么网络安全，但是还是抱又好奇心的了解了一下，所以就有了今天这篇关于DDoS的介绍了.就看看DDoS的大概就行了，不会是硬核科普\u0026hellip;.\n什么是DDos？ DDoS是英文Distributed Denial of Service的缩写，意即\u0026quot;分布式拒绝服务\u0026quot;,DDoS的中文名叫分布式拒绝服务攻击，俗称洪水攻击。\nDDoS攻击原理 做个比喻： 有一家店铺正在营业（网站），但有人想让这家店铺无法营业，甚至倒闭。于是就找了一些人堵在店铺中不走，而且把所有通道都堵死。真正的客户却堵在门外无法进入。而且这些人在店里不断地找茬，散布假信息。让商铺上下忙成一团但却是一场空。最终不仅没有做成生意，反而把所有的购物者都拒之门外，损失惨重。 但是大型企业或组织往往具有较强的服务提供能力(例如腾讯云或者阿里巴巴，GitHub等)，足以处理单个攻击者发起的所有请求。于是，攻击者会组织很多协作的同伴（或计算机），从不同的位置同时提出服务请求，直到服务无法被访问，这就是分布式。现实中，攻击者往往没有那么多同伴，所以他们通常利用僵尸网络来控制大量计算机进行攻击。\nDDoS攻击方式 （笑死，有些我根本不懂 这里引用网络上一些比较易懂的介绍 DDOS攻击主要分为三类：流量型攻击；连接型攻击；特殊协议缺陷\nIp flood 攻击原理：\n此攻击以多个随机的源主机地址向目的主机发送超大量的随机或特定的IP包，造成目标主机不能处理其他正常的IP报文。\nIcmp Flood 攻击原理：\nicmp flood 也就是 ping flood，此攻击在短时间内向目的主机发送大量的ping的echo报文，主机不断响应，造成网络堵塞、主机资源耗尽。\nSyn Flood 攻击原理： 依据 tcp建立连接的三次握手。此攻击以多个随机的源主机地址向目的主机发送syn包，而在收到目的主机的syn＋ack包后并不回应，目的主机就为这些源主机建立大量的连接队列，由于没有收到ack一直维护这些连接队列，造成资源的大量消耗而不能向正常的请求提供服务。 与之类似的攻击方式还有ack-flood、s-ack-flood、fin-flood、rst-flood、tcp-flood\nUDP Flood 攻击原理：\n此攻击在短时间内 模拟随机的源端口地址向随机的目的端口发送大量的udp包，造成目标主机不能处理其他udp的请求\nIP scan 攻击原理：\n攻击者 通过IP扫描可以迅速服务器网络情况及服务器主机信息，为后面的攻击做好准备。通过发送IP扫描探测包探测存在的服务器主机。\nPort scan 攻击原理：\n当一个源ip地址在规定的时间间隔内将tcp syn包发送给一个目标地址的多个不同端口时，就是一次端口扫描，目的是扫描 可用的服务，从而识别目标的服务。\nping of death 攻击原理：\n根据tcp/ip的规范，一个包的长度最大为65535字节。攻击向一个目标地址发送icmp echo包的大于65535字节（这需要多个分片叠加才能做到），当主机重组这些分片发现包大于65535字节时，就会导致宕机。\nCC攻击 攻击原理：\n利用 代理服务器 向 受害者 发起大量HTTP Get 请求；主要请求动态页面，涉及到数据库访问操作；数据库负载以及数据库连接池负载极高，无法响应正常请求\nDDoS的危害 最简单的就是网站崩了，访问不了，甚至服务器也坏了\u0026hellip;. 历史上一些比较经典的DDoS攻击案例 美国东部时间 2018年2月28日，GitHub 在一瞬间遭到高达 1.35Tbps 的带宽攻击。这次 DDoS 攻击几乎可以堪称是互联网有史以来规模最大、威力最大的 DDoS 攻击了。 在 GitHub 遭到攻击后，事件并没有停歇，仅仅一周后，DDoS 攻击又开始对 Google、亚马逊甚至 Pornhub 等网站进行了 DDoS 攻击。后续的 DDoS 攻击带宽最高也达到了 1Tbps。\n总结与感想 天晴了雨停了，我感觉我又行了hhhh.DDoS确实很强，又是一个坐牢小技巧。互联网发展了这么久，现在的防御做的也很不错了，而且ddos攻击也是需要成本的，比如组成僵尸网络，理论上成本越高攻击力越强。最后，希望我的blog没事\u0026hellip;\u0026hellip;\u0026hellip;.\n","date":"2021-09-10T16:50:15+08:00","image":"https://blog.linsnow.cn/p/ddos/ddos_hua6753b3ca8750c90aa6178b166572179_37747_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/ddos/","title":"浅谈DDoS"},{"content":"我认为的最强markdown笔记软件obsidian 什么是obsidian？ obsidian的中文名：黑曜石/黑石 obsidian的简介（引用自官网：\n黑石是一个强大的知识库之上的\n本地文件夹的纯文本标记文件。\nobsidian的特性：\n这是一款支持 Markdown 的本地应用（不同于notion，笔记掌握在自己手里，更安全 支持全平台的操作系统（包含移动端 文件夹式管理 支持各种插件 支持自定义css 思维脑图式的笔记管理 能够记忆上一次编辑 支持云同步 个人用户免费 \u0026hellip;\n功能多到数不过来了，就简单的列了一些常用的功能 Obsidian生成的文件全是Markdown格式。如果你已经用过markdown语法，那很棒，Obsidian对你来说几乎没有门槛。\n我的obsidian工作流 以hugo博客写作为例 我只需要在终端中用hugo命令创建好markdown文件 并使用的obsidian进行编辑即可\nobsidian的设置 以下全是我个人比较喜欢推荐的一种设置 仅供参考，可以根据自己喜好更改\n外观设置 入口位置：\n打开软件 找到左下角的设置齿轮 选择外观选项\n将外观设置为黑暗、开启半透明的效果 编辑设置 目的/作用\n达成边写作边预览的效果 方便即使纠错 方便文章排版\n首先打开某个markdown文件 如图： 打开软件页面的右上角上的三个点 在弹出的选项页面打开与其他面板同步、左右拆分 将其中一边设置为预览模式： 可以直接在右上角设置 也可以使用快捷键ctrl + E设置 到这里基本上都设置完了\n接下来演示一些其他的功能\n查看关系图谱 其他的一些功能就不展示了\n软件获取 官网地址：黑曜石\n","date":"2021-08-31T09:58:22+08:00","image":"https://blog.linsnow.cn/p/opensource-best-obsidian/obsidian_hub5bb9b03b6246a4445f0af801baa7320_54077_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/opensource-best-obsidian/","title":"我认为的最强markdown笔记软件obsidian"},{"content":"Markdown 这里引用百度百科对markdown的解释我太懒了.\nMarkdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML或者HTML.文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。 由于Markdown的轻量化、易读易写特性，并且对于图片，图表、数学式都有支持，许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息。 如GitHub、Diaspora、Stack Exchange、OpenStreetMap、SourceForge、简书等，甚至还能被使用来撰写电子书。\nmarkdown基本语法 标题 在想要设置为标题的文字前面加#来表示\n一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\n注：标准语法一般在#后跟个空格再写文字\n示例：\n1 2 3 4 5 6 # 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 效果\n这是一级标题 这是二级标题 这是三级标题 这是四级标题 这是五级标题 这是六级标题 字体 加粗 要加粗的文字左右分别用两个**号包起来\n斜体 要倾斜的文字左右分别用一个*号包起来\n斜体加粗 要倾斜和加粗的文字左右分别用三个*号包起来\n删除线 要加删除线的文字左右分别用两个~~号包起来\n示例：\n1 2 3 4 **这是加粗的文字** *这是倾斜的文字*` ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果如下：\n这是加粗的文字\n这是倾斜的文字\n这是斜体加粗的文字\n这是加删除线的文字\n引用 在引用的文字前加\u0026gt;即可。引用也可以嵌套，如加两个\u0026gt;\u0026gt;三个\u0026gt;\u0026gt;\u0026gt;\nn个\u0026hellip;\n貌似可以一直加下去，但没神马卵用 效果如下：\n这是引用的内容\n这是引用的内容\n这是引用的内容\n分割线 三个或者三个以上的 - 或者 * 都可以。\n示例：\n1 2 3 4 --- ---- *** ***** **效果如下： **\n可以看到，显示效果是一样的。\n图片 语法：\n1 2 3 4 ![图片alt](图片地址 \u0026#39;\u0026#39;图片title\u0026#39;\u0026#39;) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。 图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 效果如下：\n超链接 语法：\n1 2 [超链接名](超链接地址 \u0026#34;超链接title\u0026#34;) title可加可不加 示例：\n1 2 [bing](https://bing.com) [百度](https://baidu.com) 效果如下：\nbing\n百度\n列表 无序列表 语法：\n无序列表用 - + * 任何一种都可以\n1 2 3 4 5 - 列表内容 + 列表内容 * 列表内容 注意：- + * 跟内容之间都要有一个空格 效果如下：\n列表内容 列表内容 列表内容 有序列表 语法：\n数字加点\n1 2 3 4 5 1. 列表内容 2. 列表内容 3. 列表内容 注意：序号跟内容之间要有空格 效果如下：\n列表内容 列表内容 列表内容 列表嵌套 上一级和下一级之间敲三个空格即可\n一级无序列表内容\n二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容\n二级有序列表内容 二级有序列表内容 二级有序列表内容 一级有序列表内容\n二级无序列表内容 二级无序列表内容 二级无序列表内容 一级有序列表内容\n二级有序列表内容 二级有序列表内容 二级有序列表内容 表格 语法：\n1 2 3 4 5 6 7 8 9 10 11 表头|表头|表头 ---|:--:|---: 内容|内容|内容 内容|内容|内容 第二行分割表头和内容。 - 有一个就行，为了对齐，多加了几个 文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右 注：原生的语法两边都要用 | 包起来。此处省略 示例：\n1 2 3 4 5 姓名|技能|排行 --|:--:|--: 熊大|想|大哥 熊二|吃|老二 熊三|玩|老三 效果如下：\n姓名 技能 排行 熊大 想 大哥 熊二 吃 老二 熊三 玩 老三 代码 语法：\n单行代码：代码之间分别用一个反引号包起来\n1 `代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n1 2 3 4 5 (```) 代码... 代码... 代码... (```) 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。\n示例：\n单行代码\n1 `create database hero;` 代码块\n1 2 3 4 5 6 ``` function fun(){ echo \u0026#34;这是一句没有bug的代码\u0026#34;; } fun(); ``` 效果如下：\n单行代码\ncreate database hero;\n代码块\n1 2 3 4 function fun(){ echo \u0026#34;这是一句非常牛逼的代码\u0026#34;; } fun(); 流程图 1 2 3 4 5 6 7 8 9 ```flow st=\u0026gt;start: 开始 op=\u0026gt;operation: My Operation cond=\u0026gt;condition: Yes or No? e=\u0026gt;end st-\u0026gt;op-\u0026gt;cond cond(yes)-\u0026gt;e cond(no)-\u0026gt;op ``` 效果如下：\n1 2 3 4 5 6 7 8 9 st=\u0026gt;start: 开始框 op=\u0026gt;operation: 处理框 cond=\u0026gt;condition: 判断框(是或否?) sub1=\u0026gt;subroutine: 子流程 io=\u0026gt;inputoutput: 输入输出框 e=\u0026gt;end: 结束框 st-\u0026gt;op-\u0026gt;cond cond(yes)-\u0026gt;io-\u0026gt;e cond(no)-\u0026gt;sub1(right)-\u0026gt;op ","date":"2021-08-30T20:25:19+08:00","image":"https://blog.linsnow.cn/p/markdown/markdown_huda5a9da55baf04c9d55b45b5c45a5821_59080_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/markdown/","title":"Markdown"},{"content":"当iOS遇上Big Sur 效果图 这是效果图，压缩后有点模糊，你忍一下\u0026hellip;\u0026hellip;\n前言 对于越狱的 iPhone 来说换主题是折腾手机的必经之路，好看的主题会让 iPhone 焕然一新。这是一款由社区玩家Jabi开发的免费主题。采用big sur的图标设计，目前支持两百多款常用软件的图标\u0026hellip;\u0026hellip;..本文使用的手机为iOS14.7.1的iPhone6s.并且已经越狱完了（这是一句废话\n正文 前提条件 一部越狱好了的手机 一个可用的越狱商店 耐心 一双手 准备工作 可在本站找到与越狱有关的文章\n先搞懂越狱\n安装主题平台 简介： 什么是主题平台？\n就是能够让你将主题挂载上去的工具\n目前有哪些主题平台？\nAnemone3、SnowBoard、iThemer、NeonBoard\n本文使用的主题平台是SnowBoard（建议都是用这个，老牌稳定\n如何安装SnowBoard？ 添加软件源：https://repo.dynastic.co/ （自带源）\n在sileo/cydia/zebra的搜索栏中搜索SnowBoard并下载下来\n下载完之后在设置里就能看到snowboard的选项了\n到这里就算是安装了（有手就行\n获取Big Sur主题 **添加软件源：**https://jabizb.com/repo/\n在sileo/cydia/zebra的搜索栏中搜索BigSur Jabi并下载下来\n挂载BigSur主题 文字教程\n在设置里打开刚才安装的snowboard 将插件设置为启用 将BigSur Jabi主题设置为启用 图文教程\n至此完结 不懂评论区里留言，我也不一定会解答（就是这么勇\n","date":"2021-08-27T14:59:39+08:00","image":"https://blog.linsnow.cn/p/ios-with-bigsur/iosbigsur_hu1295b0050bfc7765bede072327097fdf_145847_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/ios-with-bigsur/","title":"当iOS遇上Big Sur"},{"content":"CheckRa1n On Linux 前言 Windows版的checkra1n还是不要想了，有没有macos\n只能去舔一下Linux咯\nLinux的官方源里并没有checkra1n\n以下命令均在shell中运行，以Ubuntu为例\n第一条 1 2 #添加checkra1n软件源 echo \u0026#39;deb https://assets.checkra.in/debian /\u0026#39; | sudo tee /etc/apt/sources.list.d/checkra1n.list 第二条 1 2 # 获取钥匙 sudo apt-key adv --fetch-keys https://assets.checkra.in/debian/archive.key 第三条 1 2 3 4 # 刷新软件源 sudo apt-get update or sudo apt update 第四条 1 2 3 4 安装checkra1n sudo apt-get install checkra1n or sudo apt install checkra1n 补充 执行完以上四条命令后就安装了，checkra1n软件可以通过启动器直接打开\n当然了，官网也贴心的准备了终端版本，\n只需要在终端里输入checkra1n并回车会就出现终端版的checkra1n\n但是该版本需要root权限，反正给root权限就完事了\n1 2 #进入root sudo -i 输入密码回车就行，输入的时候看不见，直接输入就完事了，输完回车\n","date":"2021-08-26T12:53:59+08:00","image":"https://blog.linsnow.cn/p/checkra1n-on-linux/c1linux_huae9b5b2f87cc15dc23636eff421aae7c_25361_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/checkra1n-on-linux/","title":"CheckRa1n On Linux"},{"content":"CheckRa1n越狱报错合集 Linux简易版报错解决方法\n出现 -77 或者 USB错误，请重启再来，换个usb接口。 出现 -78 请请重启再来，换个usb接口。 出现 -79 请重启再来，换个usb接口。\n虚拟机\ncheckra1n -26和-31错误 不支持虚拟机,需要在黑苹果，Ra1nUSB，Linux下越狱\nAMD的黑苹果，错误－31，\nAMD的CPU使用checkra1n越狱黑苹果会报错-31\nError code: -20 错误 Timed out waiting for bootstrap upload(Likely caused by an incompatible tweak, to enable Safe Mode check the option on main screen) (Error code: -20)\n-20 错误，官方已经给到解决办法，请在应用程序中勾选 “安全模式（Safe Mode）”选项，重新越狱\nAMD的Linux简易版越狱，错误－71\nAMD的CPU使用Linux简易版checkra1n越狱会报错-71\nBy the way\n前几天iOS14.7.1越狱的时候各种报错，心态都搞崩了，使用cli版越狱就会报31和79错误，但是用终端版就一边过，还有就是Ubuntu上越狱也会卡住\u0026hellip;\u0026hellip;害\n","date":"2021-08-26T12:28:52+08:00","image":"https://blog.linsnow.cn/p/checkra1n-error/c1err_hu0a376f83eb54b049a6e44bf73608b327_31133_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/checkra1n-error/","title":"CheckRa1n越狱报错合集"},{"content":"好用的图片压缩工具 前言 对于一个网站来说，图片体积越小，加载速度就越快，因此，人手一个图片压缩工具是很有必要的。\nTinypng 地址：https://tinypng.com/\n这款工具我实在是太喜欢了，是我最经常用的，十分方便，秩序将图片拖进去就行，速度很快，能够最大限度的做到对画质无损的进行压缩\nSquoosh 在线地址：https://squoosh.app/\n开源项目地址：https://github.com/GoogleChromeLabs/squoosh\n一款由 Google 开源的图片压缩器 - Squoosh。\nSquoosh 使用起来也非常简单，在浏览器中打开页面后，可点击选择或直接往里面拖图片，在左下方可选择想要生成的图片格式，右下方选择图片质量，再下载即可。\n而且Squoosh 用实时对比来展示压缩效果，你可以左右拖动滑块来比较，效果肉眼可见\n总结 有了这两款图片压缩工具,博客访问速度快了，人也精神了，妈妈再也不用担心我压缩不了图片了\u0026hellip;\u0026hellip;\u0026hellip;\n","date":"2021-08-26T09:10:34+08:00","image":"https://blog.linsnow.cn/p/pic-yasuo/yasuo_hu2b608295d63ab6b286c2adc9fb22cc70_96031_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/pic-yasuo/","title":"好用的图片压缩工具"},{"content":"越狱常见问题指北手册 iOS更新屏蔽 Unc0ver越狱自带更新屏蔽\nTaurine/Odyssey/Chimera/Electra 越獄成功以後是沒有自帶屏蔽系統更新的，建議去安裝 OTADisabler 來屏蔽更新\nOTADisabler 官方源https://cydia.ichitaso.com/\nDpkg 中断/卸载不掉插件 一般情況都是因为安装了盗版源引起的，建议清除越狱，重新越狱。\nSileo 刷新源报错404/552 一般情況都是网络問題，科学上网即可解決，也可以开加速器或者开数据试试，不過也有可能是作者服务器出錯了（但是可能性不大）。\n逃离Sileo，拥抱Cydia 假如你使用unc0ver或者checkra1n越狱，那么一开始便可直接选择安装cydia\n但是如果你是Taurine，Odyssey，Chimera，Odysseyra1n 越狱想用 Cydia 怎么办，在自带的软件源 Procursus 源里安裝 Cydia Installer 即可，但是着并不建议，因为配套使用会更加稳定些，且切换过程可能会出现问题\n人手必备实用工具 三大使用工具\n涉及软件源：\nhttp://tigisoftware.com/cydia/\nhttps://cydia.angelxwind.net/\nhttps://repo.chariz.com/\nFilza File Manager 你能想象没有了资源文件管理器的Windows系统吗？\n是的，有了这个宝物，你就能够像安卓或windows一样用文件管理器访问任意目录以及文件，并且支持对多种文件进行修改与编辑，可以说是相当的使用\n这里有个好百度网盘羊毛的技巧：利用这个插件找到百度网盘下载的文件就能随意解压缩而不需要充会员\niCleaner Pro 越狱界老牌清理工具，还能够给插件排错。\n建议人手一个，用来清理垃圾效果简直不要太好\nNewTerm 2 对小白不是很友好的神器，他就类似于Linux上的shell，能够执行各种命令，并且与Ubuntu的命令基本都是一样的\nNewTerm 2常用命令 在输入大部分命令前需要获取 root 权限，请输入su 或者 su root 密码默认是 alpine（你输入的時候看不见，沒事，直接输入然后回车即可）\n如果你想省事那就先输入 sudo 加上你想要的命令，sudo 后面有空格\n注销（这个命令好像不用root也能执行） 1 killall SpringBoard/sbreload/uicache -r 清理图标缓存（这个命令好像不用root也能执行） 1 2 uicache -a # 安裝成功插件发现沒有 App 图标出现就可以用这个命令 1 2 uicache -p 你的 app 目录 #这个是单独清除特定 App 的图标缓存 软重启 1 ldrestart 重启手机 1 reboot 关机 1 halt 重启使用者空间 1 launchctl reboot userspace 安全模式 1 killall -SEGV SpringBoard 进阶命令 需要获取 root\n必要是需要获取插件的bundleid\n获取插件bundleid 一般划到插件底部就可以看到插件的bundleid\n安裝本地 deb 插件 1 2 3 dpkg -i 你的deb路径 #例如 #dpkg -i /var/mobile/Documents/aaa.deb 在线安裝插件 前提是你已经把这个插件的源添加到 源列表上了\n建议安裝插件之前先输入 apt update（类似于刷新软件源）\n这对Linux用户十分友好\n1 apt install 插件的bundleid 卸载插件 1 2 3 dpkg -r 插件的bundleid or apt remove 插件的bundleid 更新所有插件 建议更新插件之前先输入 apt update（类似于刷新软件源）\n然后输入\n1 apt upgrade 如果让你确认就输入y然后回车就行\n","date":"2021-08-26T07:28:27+08:00","image":"https://blog.linsnow.cn/p/jb-question/jbzhibei_huad22e8a8f38ced1911e3dacea4da62bd_15216_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/jb-question/","title":"越狱常见问题指北手册"},{"content":"越狱后的必备依赖插件 前言 以下内容主要面向sileo用户。越狱成功后，越狱环境还缺少有一些重要的依赖插件，没有这些依赖插件，等下会有各种红字与报错，但是安装上依赖就行了。但是，千万不要在依赖还没有安装之前添加一些不好的第三方软件源，否则依赖被劫持就完蛋了\u0026hellip;.\n正文 一般先刷新一下软件源列表，以便加载出需要更新的插件，要是刷新不了或着出现软件源里空白的现象就直接科学上网或开个加速器吧，也可以试试开数据来刷新。刷新完之后将能更新的插件全部更新就完事了。但是还有一些依赖插件需要手动安装。\n安装越狱基板 涉及软件源地址：https://repo.theodyssey.dev/ (自带源)\n插件名称: libhooker\n安装P.R.A三件套 涉及软件源地址：https://repo.theodyssey.dev/ (自带源)、\nhttp://apt.thebigboss.org/repofiles/cydia/ （自带源）\n插件名称: PerferenceLoader、RocketBootstrap、AppList\n安装完以上插件之后就算安装完必备依赖插件了\n拓展 什么是基板？ 允许第三方的开发者在系统的方法里打一些运行时补丁，也是绝大部分插件正常工作的基础。\n现在有几种基板？ 目前算是有三个吧\n第一个是substrate，一个是substitute，还有一个libhooker\n其中substrate是大胡子的，也就是最老的那个，但是容易被一些app检测到\nsubstitute是coolstar团队的，相对于substrate封号几率低点（部分插件可能不兼容这个基板）但是这个是大趋势\nlibhooker 也是coolstar的作品，压缩了substitute+substrate+tweakinjecter提高了转换率，并且表示支持：Android、ios、win、Linux、switch\n","date":"2021-08-26T06:01:12+08:00","image":"https://blog.linsnow.cn/p/jb-dependence/yilai_hubcf6caa6bafae05b810198e1790d826e_25694_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/jb-dependence/","title":"越狱后的必备依赖插件"},{"content":"在win11下搭建hugo博客环境 Hugo 简介 搭建个人博客有很多开源的博客框架，我们要介绍的框架叫作Hugo。Hugo 是一个基于Go 语言的框架，可以快速方便的创建自己的博客。\nHugo 支持Markdown 语法，我们可以将自己的文章写成Markdown 的格式，放在我们用Hugo 创建的博客系统中，从而展示给他人。\n获取Hugo 在GitHub上获取hugo\nhugo的仓库地址:https://github.com/gohugoio/hugo\n配置hugo 以64位hugo0.87版本为例，其他基本都大同小异，或者说是一样的\n下载好的hugo安装包\n将其解压出来，会得到一个后缀为exe的可执行文件，但是不要直接刷个双击去运行他（因为他根本运行不了\n下面举个栗子，比如我在将这个解压好的hugo.exe文件放在D:\\hugo\\bin目录下\n注意：hugo.exe必须放在一个名为bin的文件夹下面，至于bin文件夹你要放在哪那是你自己的事\n在设置-系统-相关链接里找到高级系统设置并打开\n找到环境变量\n选择系统变量里的path选项\n在里面添加hugo.exe存放的所在目录，比如我将其放在了D:\\hugo\\bin目录下，那么就在里面添加上这个路径，如图\n到这里就算搞定了，在终端里检测一下,输入hugo version，查看是否有版本号输出，有的好就算是ok了\n1 2 PS C:\\Users\\l1nsn0w\u0026gt; hugo version #输入 hugo v0.87.0-B0C541E4+extended windows/amd64 BuildDate=2021-08-03T10:57:28Z VendorInfo=gohugoio #输出结果 ","date":"2021-08-26T03:40:33+08:00","image":"https://blog.linsnow.cn/p/install-hugo/hugo_huc7970c6bbb4da15da2dcd6a3361cfc8d_17909_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/install-hugo/","title":"在win11下搭建hugo博客环境"},{"content":"黑苹果开启原生Hidpi 黑苹果命令下开启原生HiDPI 一条命令可开启接近原生的 HIDPI 设置，不需要 RDM 软件即可在系统显示器设置中设置，不过 RDM 有时候也是比较好用的，有些显示器不用开启，就可以在 RDM 里面选择一些带有 HiDPI 效果的分辨率。\n脚本的 Github 项目地址: GitHub - xzhih/one-key-hidpi: Enable macOS HiDPI\n终端下执行:\n1 sh -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)\u0026#34; 开启后重启生效！\n如果你的设备不是黑苹果的话，那么请关闭 SIP 后再操作。\n如果执行失败呢？\n那么将项目克隆到本地并运行commond后缀的文件就可以了。\n","date":"2021-08-20T17:50:55+08:00","image":"https://blog.linsnow.cn/p/hackintosh-hidpi/hidpi_hub9db653dbfd04c169a10f20dc58513f8_49712_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/hackintosh-hidpi/","title":"黑苹果开启原生Hidpi"},{"content":"U盘启动bios快捷键合集 一键U盘启动快捷键查询 组装机主板 主板品牌 启动按键 华硕主板 F8 技嘉主板 F12 微星主板 F11 映泰主板 F9 梅捷主板 ESC或F12 七彩虹主板 ESC或F11 华擎主板 F11 斯巴达卡主板 ESC 昂达主板 F11 双敏主板 ESC 翔升主板 F10 精英主板 ESC或F11 冠盟主板 F11或F12 富士康主板 ESC或F12 顶星主板 F11或F12 铭瑄主板 ESC 盈通主板 F8 捷波主板 ESC Intel主板 F12 杰微主板 ESC或F8 致铭主板 F12 磐英主板 ESC 磐正主板 ESC 冠铭主板 F9 品牌笔记本 笔记本品牌 启动按键 联想笔记本 F12 宏基笔记本 F12 华硕笔记本 ESC 惠普笔记本 F9 联想Thinkpad F12 戴尔笔记本 F12 神舟笔记本 F12 东芝笔记本 F12 三星笔记本 F12 IBM笔记本 F12 富士通笔记本 F12 海尔笔记本 F12 方正笔记本 F12 清华同方笔记本 F12 微星笔记本 F11 明基笔记本 F9 技嘉笔记本 F12 Gateway笔记本 F12 eMachines笔记本 F12 索尼笔记本 ESC 品牌台式机 台式机品牌 启动按键 联想台式机 F12 惠普台式机 F12 宏基台式机 F12 戴尔台式机 ESC 神舟台式机 F12 华硕台式机 F8 方正台式机 F12 清华同方台式机 F12 海尔台式机 F12 明基台式机 F8 注意：苹果笔记本，开机/重启时按住 “option”键[即Alt键]不放，进入选择启动方式。\n开机进BIOS按键查询 组装机主板 主板品牌 启动按键 Award BIOS Del Ami BIOS Del或ESC Phoenix BIOS F2 大部分是F2或Del或ESC，还有一少部分是F9或F10或F12。 品牌笔记本 笔记本品牌 启动按键 戴尔Dell F2 宏基Acer F2 东芝Toshiba *ESC/F1 富士通Fujitsu F2 联想Thinkpad F12 IBM F1 HP(惠普) F2或F10 SONY(索尼) F2 Compaq(康柏) F10 lenovo(联想) F2 enq(明基) F2 品牌台式机 台式机品牌 启动按键 IBM F1 惠普HP F2 索尼SONY F2 戴尔Dell F2 宏碁Acer F2 东芝Toshiba *ESC/F1 康柏Compaq F10 富士通Fujitsu F2 大多数国产品牌 F2 *ESC/F1 冷开机时按ESC然后按F1。\n","date":"2021-08-19T22:06:35+08:00","image":"https://blog.linsnow.cn/p/bios-boot-key/bios_hu967184f9684e9718d41c674694f57859_12393_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/bios-boot-key/","title":"U盘启动bios快捷键合集"},{"content":"为typora安装vue风格主题 简介 Typora是一款支持实时预览的 Markdown 编辑器和阅读器，支持Windows、macOS、Linux三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。\n主题仓库 https://github.com/blinkfox/typora-vue-theme\n在这里十分感谢blinkfox大佬开发的主题\n安装主题 从主题仓库克隆到本地并获取主题中的vue.css、vue-dark.css文件和包含字体的vue文件夹； 打开 Typora，点击“偏好设置” =\u0026gt; “打开主题文件夹”按钮，将弹出 Typora 的主题文件夹； 将下载好的vue.css和vue-dark.css文件和包含字体的vue文件夹放到 Typora 的主题文件夹中； 关闭并重新打开 Typora，从菜单栏中选择 “主题” =\u0026gt; “Vue” 或者 “Vue Dark” 即可。 效果图 ","date":"2021-08-19T14:58:23+08:00","image":"https://blog.linsnow.cn/p/vue-typora/typoravue_huc1f0996fd2cfcb518be5e5730d1a3e8f_27849_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/vue-typora/","title":"为typora安装vue风格主题"},{"content":"浅谈gta5的两个主角 前言 gta5是我玩过的最好玩的游戏，没有之一\u0026hellip;\u0026hellip;..\ngta5里的主角都很有个性，写这篇文章是为了发掘gta5里面的麦克和富兰克林这两个主角的人物深度\n富兰克林 纵观《GTA5》故事的整个人物塑造，Franklin 其实是三个主角中相对人格最不够丰满的一个，即使故事从他开始，最后玩家也是进入他的视角进行结局选择。\nFranklin 代表的是 Los Santos 现实的一面。他抢劫的动机特别现实且单纯，既不是 Trevor 的「反主流社会人格」，也不是 Michael 的「把抢劫当事业的中年危机解决之道」，他需要的就是钱。\nGTA5里面的帮派，都是各色混蛋的集合。不同于一心想混进去出人头地的拉玛，小富从游戏一开始穷困潦倒时，就坚持不进任何帮派\n富兰克林-克林顿，在GTA5的三大主角中是性格最不鲜明的一个，没有老麦的中年危机大叔和老崔的神经质这样鲜明的标签，也没有这俩人那样多的配角互动冲突，从头到尾只有猪一般的队友拉玛和只露过一次面的前女友，还有个整天看他不顺眼的神经质姨妈，注定孤独一生的节奏。\n小富生长在藏污纳垢的黑人社区，由姨妈带大，遵循着满街头的生存法则，主要谋生手段是偷汽车。从他和好哥们拉玛一开始就不停地互相吐槽可以看出，拉玛除了偷汽车，还喜欢涉足各种街头犯罪活动，可惜智商有限屡糟暗算，但是拉玛是个乐天派，更享受和兄弟肝胆相照的生活哲学，相比而言小富显得有些悲观和愤世嫉俗，他对这样的生活有些厌倦，希望做一番大事却没有出路，在他眼里，拉玛这等二货燕雀不会理解他的鸿鹄之志，他对于拉玛的各种把自己置于险境犯二行为非常不满，但出于兄弟情义又总是救他于水火。\n小富明显比拉玛更善于思考，遇事也更冷静，思考的多了，必然认为他周围的人都是累赘，不管是拉玛，姨妈，还是没事总拉他去帮忙拖车的发小。他不得不遵循街头的生存法则，出于义务去满腹牢骚地帮忙，想摆脱却又没有办法。对于自己的哥们这种“我中有你你中有我，有了甜的大伙分着吃，有了苦的谁也跑不了”的思维方式，他感到疲惫不已。\n麦克 我认为。麦克是R星塑造的最写实的一个角色。很多人讨厌麦克，因为他出卖自己的铁哥们儿，跑到洛圣都过着自己失败的中年生活，可是这恰恰是很多中产阶级中年男人的真实写照。出轨的老婆，啃老的儿子，不听话的女儿，看骗人的心理医生，暴力倾向，抑郁，神经衰弱等等。老崔代表了我们现实生活中最不可能看见的一种人，但是很多人喜欢他因为他重情重义，浑身臭味而又让我感觉到一种出淤泥而不染。小富就是20来岁的愣头青，追求金钱地位同时也经常要面对朋友和前途的选择，良心的考验。而麦克就是中产阶级中年男人的生活写照。\n麦克很明显是爱着他的家人的，即使这份爱更多是出于责任感而非真心实意地去了解他们。阿曼达表示，如果不是麦克先在别的脱衣舞女身上乱搞，她也不会去接触别的男人。这是他们两个的矛盾之一。换言之，阿曼达是在报复，背后是对麦克的爱和愤怒。麦克已经痛改前非，不再出轨（至少看起来是这样），但是阿曼达依然和各种教练上床，这就很难说其中有对麦克的报复了。即便如此，在不缺少财产的情况下，她还去偷东西。这就更让人理解不了了：不缺钱还偷，说明是享受偷东西的过程和结果，为何阿曼达会享受这种东西？还是说她想引起麦克的注意，又羞于开口才出此下策？阿曼达对麦克的要求是不要杀人，不要有狐朋狗友，不要出轨——这都是很基本的要求。很明显麦克没有做到，麦克一直在轻视阿曼达的要求。相应地阿曼达也会变本加厉地作妖，本质上是两个人冲动鲁莽，又缺乏有效的沟通。\n麦克和儿子的矛盾在于儿子达不到他对后辈的期望。\n麦克想的很简单，干一票大的，然后拿着钱脱离以前的身份，把过去的血和罪恶都埋藏起来当作什么都没发生。他希望他的生活是夫妻和睦儿女双全个个都爱他，尊重他，把他当作一家之主。拍他想拍的电影，做个岁月静好的文艺大叔。然而事不遂人愿，儿子蠢女儿浪媳妇还出轨，到底他的生活怎么了？就像是那个故事说的，两个人挖坑发现一具尸体，于是慌忙把坑埋上，然而尸体从此就留在了他们的心里，永远忘不了。麦克可以假装什么都没发生过，拼命的粉饰他的生活，可他的家人忘不掉，甚至他们也忘不掉自己本来就是市井小民，他们做不到麦克想要的境界。于是各种冲突不断，儿子故意领着麦克去沙滩看见自己女儿穿着比基尼对着拍AV的搔首弄姿跳艳舞。他们都在报复麦克的固执。麦克经常说他觉得很累。是的。他的确累。背叛崔佛隐姓埋名，他只能这样做，因为崔佛他也无法控制，所以他选择逃避。毕竟崔佛追求的人生就像是烈火一样的刺激。 这场没人配合他的戏麦克终究是一个人绷不住，于是他也只能在心里默念一句“我真是日了狗了”被逼上梁山继续犯罪。在这个过程中有些时候我甚至觉得麦克是放松而快意的。没办法去具体明说，可能只是我太喜欢这个游戏太入戏所以想的太多吧… 麦克代表了很多男人的中年危机，家庭的复杂，事业上的压力，身体的力不从心，眼睁睁的看着一切都快要崩塌自己还是要努力去维持平衡和秩序。他们的内心渴求存在感和尊重。也希望家人能理解他的艰辛和不易。所以往往越是如此，家人越是不理解他们。恶性循环更加苦恼。 崔佛的出现就像一支劲爆的RPG炸碎了麦克摇摇欲坠的壁垒，老崔带来了破坏也带来了希望。故事的后期麦克的家庭情况是有所好转的。有时候人生就是这么回事。没必要去死命的逼自己，逼别人。老麦最后可能放下了许多，但他收获了更多。\n麦克，是个令人着迷的，无比真实的人物。\n他人到中年，却时时刻刻活在纠结和矛盾中。\n他很冲动，并且时时刻刻懊悔着自己的冲动。\n在自己的妻子被(●°u°●) 」了以后，他不经思考，便用车拉倒了网球教练藏身的房子，于是惹上了大麻烦。\n他有时又很沉静稳重。\n经历了许多的他，学会了退缩，学会了认怂。\n例如推倒人家房子以后，马丁找上门来，打了他一棍子。这时他选择了认怂。\n在后期一次次被海因斯，德温利用，拼死拼活抢了乡下银行，钱却大半给了FIB。抢了富二代的车给德温，却一毛钱都没有获得。他常常被迫卖命而没有丝毫回报。\n但这时他深知那些人的背景他惹不起，于是他一直劝阻崔佛不要“讨债”，并且任劳任怨的被利用。\n家庭是他的羁绊，为了家庭的幸福。他选择了利益，选择了背叛。\n于是在北扬克顿，那个天降大耄，银装素裹的上午，他与FIB的阴谋终于实现，他将昔日的朋友打入地狱，自己升至天堂。\n但同时，他却又并非不讲义气。\n当崔佛找上门来，在电话中，戴夫建议他找人偷偷做掉崔佛，他却毅然决然的拒绝了这个提议。\n后期崔佛绑架了马丁的妻子，害得他有家不能回，他很愤怒，却并没有和崔佛完全翻脸（完全翻脸是在后面秘密暴露后），崔佛又带着他偷了军方的秘密武器，惹了大麻烦，他却选择了隐忍。\n这是难道不是他念及当年的兄弟情谊所致？\n我想当麦克驱车，在那个风雪交加，群星暗淡的夜晚，又一次踏上加拿大，北扬克顿的土地，他心中一定有着懊悔，对于自己背叛行为的懊悔。\n但是当然，如果再让麦克选择一次，他依然会偏向于自己的家庭。\n他享受着往日的荣光，沉湎于安逸。\n在他的大别墅中，他在沙发上惬意的看电视，在泳池旁，躺在沙滩椅上，感受阳光的温暖。倚靠在自己的车上，望着傍晚的残阳。\n他又渴望着往日的刺激。\n在珠宝店的抢劫中，他终于觉醒了自己往日的能力，抢到珠宝后兴奋的庆祝。他在枪林弹雨中穿梭，在最后“大干一票”后，终于完成了自己的夙愿。\n他很自卑，甚至于选择逃避。\n当他经历了岁月的洗礼。他深深的明白了自己犯罪人生的罪恶和不光彩，他为自己需要改姓为迪圣塔来苟活而叹息。\n他的家人因此而看不起他，妻子出轨，儿子吸毒，女儿滥（）交。面对家庭的“不幸”，他选择了逃避（包括暴力也是一种逃避），开着他的奥北轿车，与妓女一同翻云覆雨。\n他又希望作出改变。\n他不再希望犯罪，当富兰克林希望他能“提携后进”时。他说“去上大学吧”。\n他对家人的诉求随叫随到。\n他试图去拍电影，成为一个制片人，当他的底片将要被销毁时，他怒不可遏，虽然只是徒劳无功（这年头靠数字拍片）。\n当自己的电影上映后，他深深的为自己而骄傲。因为他终于做了一件正事，一件伟大的事。\n他的家庭最终也改变了，当儿子吉米，在林肯豪华轿车的天窗上，摇着香槟欢呼时，他的眼中，一定满含着笑意。\n最终，离开他的家人纷纷回归。后期，当你开着豪车出行，停在路边时，会有行人交谈：“这是谁的车？” “迪圣塔先生”。他真的功成名就了。\n","date":"2021-08-18T21:34:21+08:00","image":"https://blog.linsnow.cn/p/gta5/gta5_huff88b8c0571b684171b3a6c1cd208373_164265_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.linsnow.cn/p/gta5/","title":"浅谈gta5的两个主角"},{"content":"为hugo引入不蒜子 安装脚本（必选） 要使用不蒜子必须在页面中引入js\n我的hugo引入js的路径：\nthemes\\stack\\layouts\\partials\\head\\head.html\n其他都是大同小异\n1 2 \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; 显示站点总访问量 要显示站点总访问量，复制以下代码添加到你需要显示的位置。\n举个栗子：比如我blog的首页底部那个统计就是将代码加在以下这个路径\nthemes\\stack\\layouts\\partials\\footer\\footer.html\n其实都是大同小异的\n有两种算法可选：\n算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。\n1 2 3 \u0026lt;span id=\u0026#34;busuanzi_container_site_pv\u0026#34;\u0026gt; 本站总访问量\u0026lt;span id=\u0026#34;busuanzi_value_site_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;次 \u0026lt;/span\u0026gt; 算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。\n1 2 3 \u0026lt;span id=\u0026#34;busuanzi_container_site_uv\u0026#34;\u0026gt; 本站访客数\u0026lt;span id=\u0026#34;busuanzi_value_site_uv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;人次 \u0026lt;/span\u0026gt; 写在最后 在本站的的footer已经引入了不蒜子计数器\n","date":"2021-08-18T21:19:29+08:00","image":"https://blog.linsnow.cn/p/hugo-busuanzi/busuanzi_hu60f462a41974139e963cee6e680611e5_99356_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/hugo-busuanzi/","title":"为hugo引入不蒜子"},{"content":"IOS备份shsh2指南 什么是shsh2 SHSH Blob 是非官方为便于今后 iDevice 设备降级而准备的备用数字签名字符串；\n如何通过 Tsssaver 及 Telegram 来查找 Blob 并下载备份保存\nSHSH 是基于缩写: signed hash 和 binary large object。为签名序列和二进制对象。也称为 ECID SHSH。每个 Blob 都与一个特定的设备绑定在一起，数据使用设备的 ECID 进行编码。\nSHSH Blob 是一个非官方术语，指的是苹果生成并用于个性化每个 iOS 设备的 IPSW 固件文件的数字签名。它们是 Apple 协议的一部分，旨在确保在设备上安装受信任的软件，通常仅允许安装最新的 iOS 版本。苹果对此过程的公开名称是系统软件授权。\nSHSH 是 iOS 10 之前的名称，之后称为 SHSH2。\nshsh的作用 iOS升级与降级的必需品，但是也会受到sep的限制\n备份shsh 爱思助手备份 手机连接电脑 电脑打开爱思助手-刷机越狱-专业刷机 点击【查询适配版本】即可备份 点击【下载SHSH】即可查询是否备份成功 TSS Saver备份 对于未越狱的设备，您将需要使用“计算机”方法。\n使用 TSS Saver App 保存 Blob 在您首选的包管理器中将 repo.1conan.com添加到您的源中 下载并安装 TSS Saver 如果您在 iOS 14 上使用 unc0ver，请下载并安装 libkrw 如果您在 iOS 14 上使用 Taurine。请下载并安装 libkernrw 点击“保存 Blob” 收到确认信息后，点击“打开” 出现新的 blob 可能需要一些时间，尤其是在服务器负载不足的情况下。一般都需要科学上网。\n使用 TSS Saver 网站保存 Blob A12+ 用户将需要他们的 ApNonce 和 Generator 对来使用此方法。\n获取 Generator 和 ApNonce（仅限越狱 A12+）\n如果您在 iOS 14 上使用 unc0ver，请安装 libkrw\n如果您在 iOS 14 上使用 Taurine，请安装 libkernrw\n打开终端应用程序并运行\n1 sudo dimentio \u0026gt; dimentio.txt 或者，您可以从 TSS Saver App 的 Generator 选项卡中获取您的 Generator 和 ApNonce 转到 Filza 中的 /var/mobile 并打开 dimentio.txt\n复制Current nonce is文本文件底部后面的 0x 数字以及entangled nonce:. 0x 数是你的 Generator，纠缠的 nonce 数是你的 ApNonce。把这些东西放在安全的地方，以后你会用到\n开始保存 Blob\n将您的 iOS 设备连接到 Mac 或 PC 打开 iTunes 或 Finder Windows 用户必须下载普通版本而不是 Windows 应用商店版本 导航到设备摘要页面 单击序列号字段两次 这应该会更改以显示您的 ECID 号码 记下此 ECID 号码，以便稍后阅读 打开TSS Saver 网站 输入您的设备 ECID 选择您的设备 iPhone 6S、6S Plus 和 iPhone SE 用户需要通过下载此应用程序来获取他们的主板配置 A12+ 用户需要输入 ApNonce 和 Generator 对 点击提交 使用 blobsaver 保存 Blob blobsaver\n下载、安装和启动最新版本的blobsaver 将您的 iOS 设备连接到您的计算机并确保它已解锁 单击第一个“从设备读取”按钮，该按钮将填写您的 ECID 和设备信息 如果您的 iOS 设备不是 A12 或更高版本，则不需要获取 APNonce，您可以跳过下一步 获取特定于设备的 APNonce 和生成器\n确保您的设备在整个过程中已连接并解锁。\n单击 APNonce 字段旁边的第二个“从设备读取”按钮 如果您已越狱或已在您的设备上设置了生成器/apnonce 对，您想保留，请选择“越狱”。否则，选择“越狱” 您的设备将多次重启进入恢复模式。当您重新启动到正常操作系统模式时，解锁您的 iOS 设备。\n如果您陷入恢复模式，请尝试使用 blobsaver 中“帮助”菜单中的“退出恢复模式”选项。\n无论您是否越狱，都可以随时重复使用这些值来保存 blob。\n保存 Blob\n填写完所有信息后，单击“Go”以保存 blob 也可以单击“保存设备”来保存您当前设备的信息，以便以后再次为其保存 blob ","date":"2021-08-17T11:00:39+08:00","image":"https://blog.linsnow.cn/p/ios-save-shsh2/shsh_hu34c62fd5d7bf130ec72a1e0cead1e5f1_17646_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/ios-save-shsh2/","title":"IOS备份shsh2指南"},{"content":"TestFlight打不开解决方法 前因 苹果的 TestFlight 应用属实听奇怪的，又是突然就打不开，导致想下载测试版的应用都下载不了。「无法接入」主要是因为苹果服务器的问题，而要解决这个问题其实非常简单。\n操作教程 遇到这个问题可以尝试更换网络，但更换网络并不是百分百能解决。\niPhone 链接上 Wi-Fi 后，进入「设置」-「无线局域网」。点击已经链接 Wi-Fi 的蓝色「i」按钮。\n点击「配置 DNS」设置项，勾选「手动」。\n点击「添加服务器」，这里输入8.8.8.8后点击右上角的「存储」按钮。\n这时候打开 TsetFlight 应用就会发现它可以正常打开使用了。\n如果你担心设置了 DNS 服务器后会影响网速，可以在 TestFlight 下载完应用后把 Wi-Fi 的 DNS 服务改回自动。\n","date":"2021-08-17T10:20:25+08:00","image":"https://blog.linsnow.cn/p/testfight-error/testfight_hu7f058da6440cb2568fbbfc20c2b83b44_31540_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/testfight-error/","title":"TestFlight打不开解决方法"},{"content":"Cydia和Sileo插件源地址整理 前言 为了设备越狱后能得到一个良好稳定的越狱环境和解决各种插件以来问题，使用官方作者源是一个最佳的解决方案，这里整理一下一些常用的作者源，地址很多，建议使用网站的本地搜索快速查找对应的源地址\n三大收费源地址 Chariz\nhttps://repo.chariz.io/ Dynastic\nhttps://repo.dynastic.co/ Packix\nhttps://repo.packix.com/\nChariz 部分插件已与 Packix 合并。\n国外开发者源地址 Aesthyrica https://aesthyrica.com/repo/\nSpotify 相关插件\nakusio repo https://akusio.github.io/\nMilkyWay \u0026amp; Backgrounder Action for CCSupport，多任务插件、保持后台运行插件\nAppCake https://cydia.iphonecake.com/\nCrackerXI+ 砸壳工具\nAppTapp Repository https://apptapp.me/repo/\nInstaller 插件管理器\nAPT Alfhaily http://apt.alfhaily.me/\nCercube for YouTube、Rocket for Instagram 两大多媒体文件下载插件\nARX8x\u0026rsquo;s repo https://apt.xninja.xyz/\nSystem Info 关于显示更多系统信息插件\nAutoTouch http://apt.autotouch.net/\n制作自动点击脚本插件\nBaw Repo http://repo.rpgfarm.com/\nhttp://repo.co.kr/\nA-Bypass 屏蔽越狱、Slices 3 应用分身\nBigBoss http://apt.thebigboss.org/repofiles/cydia/\nCydia 插件平台自带\nBigBoss+ https://repounclutter.coolstar.org/\nBigBoss 的克隆\nBingner/Elucubratus https://apt.bingner.com/\nunc0ver 自带源地址\ncandoizo\u0026rsquo;s lab https://ndoizo.ca/\nBolders 强大的文件夹插件\nc1d3r\u0026rsquo;s repo http://c1d3r.com/repo/\nPullover Pro 多任务操作\ncemck https://cemck.github.io/repo/\nKillX 多任务下拉一键清理\ncheckra1n Substrate Repo https://checkra.in/assets/mobilesubstrate\n兼容 checkra1n 越狱的 Cydia Substrate 基板\nCokePokes https://cokepokes.github.io/\nAppStore++ 应用降级\nCreatureCoding Repo https://creaturecoding.com/repo/\nFLEXer 在手机上创建 Flex 补丁，shuffle 系统设置、插件设置、App 归类\nDelta http://getdelta.co/\nFlex 3 给 iOS 系统、App 打补丁\nDiatrus/Misceo https://diatr.us/apt/\n在 Sileo 上安装 Cydia，使之共存\nDylan Duff\u0026rsquo;s Repo https://dylanduff.com/repo/\nMissionControl 控制中心自定义插件，收费\nElectra\u0026rsquo;s iOS Utilities https://electrarepo64.coolstar.org/\niOS 11 越狱工具 Electra 自带源地址\nEmojiPort Fonts Repo https://vxbakerxv.github.io/repo/\n让低版本的 iOS 系统使用最新的 Emoji 表情\nEsquilliDev Repo https://esquillidev.github.io/\nLisa 锁屏通知聚合\nEvelyn\u0026rsquo;s Collection https://evynw.github.io/\n各种字体、主屏幕锁屏挂件\nFouad\u0026rsquo;s APT https://apt.fouadraheb.com/\nAlarmGroups（闹钟扩展插件）、Banks Patch（屏蔽对银行 App 的越狱检测）\nGeometric Store https://apt.geometricsoftware.se/\n几款收费插件（Amour、IntelligentPass、LendMyPhone）\nHackYouriPhone Repo https://repo.hackyouriphone.org/\n大量破解插件\nhAcx Repository http://hacx.org/repo/\nCall Recorder X+ (iOS 12)、Super Recorder X+ (iOS 12) 通话录音插件\nIArrays http://apt.iarrays.com/\nCallLogPro、eSim+\nichitaso repository http://cydia.ichitaso.com/\nPowerSelector (iOS 11 \u0026amp; 12) 关机增强插件、Spectrogram 音量键增强插件\niCraze\u0026rsquo;s Repo https://repo.icrazeios.com/\nGestures13（在非 iPhone X 设备上使用 iPhone X 手势）、Slyd13（锁屏样式插件）、Status12（iPhone 上使用 iPad 状态栏）\niGG https://aquawu.github.io/igg/\nhttps://twjacy.github.io/repo/ （适配 Sileo 插件平台）\niGG 是一个内存编辑器\nIvano Bilenchi\u0026rsquo;s Repo https://ib-soft.net/cydia/\nhttps://ib-soft.net/cydia/beta/\niCleaner Pro 系统清理插件，也有排除插件冲突作用\nJakeashacks https://jakeashacks.net/cydia/\n使部分 Sileo 专用插件可以在 Cydia 平台中安装使用，比如 Anemone、ClassicFolders、Ventana\njailbreak365\u0026rsquo;s Repo https://jb365.github.io/\nCCModules 控制中心扩展插件\njjolano\u0026rsquo;s iOS Tweaks https://ios.jjolano.me/\nShadow 屏蔽越狱插件\njpet26 Source https://jpet26.yourepo.com/\nYouTube Tools，YouTube 优化工具\njulioverne https://julio.hackyouriphone.org/\nCrackTool4 (iOS 12) 破解插件收费、Cydown 下载备份插件\njulioverne\u0026rsquo;s Repo http://julioverne.github.io/\nNtSpeed 显示网速悬浮窗、fastUpRepo2 快速刷新源地址\njunesiphone http://junesiphone.com/supersecret/\n各种美化插件\nKaren\u0026rsquo;s Repo https://cydia.akemi.ai/\nhttps://cydia.angelxwind.net/\n蔡明美的 AppSync Unified 安装 IPA 文件必备、PreferenceOrganizer 2 插件归类\nKritanta http://repo.kritanta.me/\nPivot(任意横屏)、Exo (Beta)、Axon（通知聚合插件）\nKurrt\u0026rsquo;s Repo https://kurrt.com/repo/\nSafeShutdown 关机注销插件\nKunderscore\u0026rsquo;s Repo https://kunderscore.gitlab.io/repo/\nPriority Hub 通知按 App 分类显示\nLakr Aream https://lakrowo.gitee.io/repo/\nSaily Store 插件管理器\nLimneos Repo http://limneos.net/repo/\nAudioRecorder XS (iOS 12)、BioProtect XS (iOS 12)、CallBar XS (iOS 12)、NFCWriter XS，通话录音、App 锁、迷你电话界面、NFC 拓展等。\nLonestarX\u0026rsquo;s repo https://repo.lonestarx.net/\nShowTouch 点击屏幕就会出现圆点\nMatchstic https://repo.incendo.ws/\nReProvision 续签插件（开发者已弃坑，等待其他开发者接手）\nMatchstic (Xen) http://xenpublic.incendo.ws/\nXen HTML、Xen Lockscreen\nMaxwell Dausch\u0026rsquo;s Repo https://repo.daus.ch/\nLatchKey 修改 iPhone 锁屏界面\nMenushka\u0026rsquo;s Repo https://repo.menushka.ca/\nHideYourApps 隐藏 App 图标、FaceIDForHiddenPhotos 查看隐藏照片需要验证 Face ID\nMTAC\u0026rsquo;s Repo https://repo.mtac.app/\n3DPercentage 3D Touch 显示更多信息、NoShareXI 应用程序 3D Touch 菜单没有分享\nNepeta https://nepeta.ignition.fun/\nhttps://Chr0nicT.github.io/Nepeta-Mirror/\nNepeta 克隆源，Copypasta（剪贴板）、Relocate（虚拟定位）、UnSub（屏蔽越狱）\nNexus\nhttps://nexusrepo.kro.kr/\nXeon 运营商自定义\nNoisyFlake\u0026rsquo;s Repo\nhttps://apt.noisyflake.com/\nGoodges 2 应用通知数显示在应用名称上\nNosskirneh\u0026rsquo;s repo\nhttps://henrikssonbrothers.com/cydia/repo/\nNextUp 2（显示下一首播放歌曲）、SpringArtwork（歌曲专辑封面变成壁纸），均为收费插件\nnullpixel\u0026rsquo;s Repo\nhttp://repo.nullpixel.uk/\nTSSSaver 手机端保存 SHSH2\nopa334\u0026rsquo;s Repo\nhttps://opa334.github.io/\nSafari Plus (Safari 增强插件)\nPoomSmart\u0026rsquo;s Repo\nhttps://poomsmart.github.io/repo/\nEmojiPort 更新系统的 Emoji\nPulandres Repo\nhttps://repo.pulandres.me/\n大量破解插件\npxcex Repo\nhttps://paxcex.github.io/\n各种 App 内购插件\nRejail Repo\nhttps://rejail.ru/\n大量破解插件，更新及时\nRevulate\u0026rsquo;s Repo\nhttps://revulate.dev/\nCrashReporter (记录插件问题，便于排查)\nrpetrich repo http://rpetri.ch/repo/\nActivator 手势插件、PreferenceLoader、RocketBootstrap、Flipswitch 重要依赖插件，必备源地址。\nRyley\u0026rsquo;s Repo\nhttps://ryleyangus.com/repo/\nLiberty 屏蔽越狱检测\nSamg_is_a_Ninja\u0026rsquo;s Repo\nhttps://samgisaninja.github.io/\nSuccession 平刷工具开发者源\nSecura Repo\nhttps://apt.securarepo.io/\nEdge 屏幕圆角加渐变彩条\nSileo (checkra1n)\nhttps://repo.getsileo.app/\n使用 checkra1n 越狱设备安装 Sileo 插件管理器\nSkitty\u0026rsquo;s Repo\nhttps://skitty.xyz/repo/\nDune 黑暗模式、Six (LS) 模仿 iOS 6 锁屏、LightsOut、DarkShot\nSparkDev\nhttps://sparkdev.me/\nSnowBoard 主题管理插件\nsubdiox\u0026rsquo;s Source\nhttp://subdiox.com/cydia/\nStoreSwitcher 2 应用商店多账号切换\nSupercharge Repo\nhttps://repo.supercharge.app/\n类似 Flex，给 App、Tweaks 创建补丁的工具，官网：https://www.supercharge.app/\ntateu\u0026rsquo;s repo\nhttp://tateu.net/repo/\nDebKeeper12 保存下载的插件、OpenNotifier12\nThe Reedpo\nhttp://cydia.r333d.com/\nCylinder 主屏幕翻页动画\nTheComputerWhisperer\u0026rsquo;s Repo\nhttps://legitcomputerwhisperer.github.io/\nEZTweakList (Cydia 平台导出源地址以及插件列表)\nTIGI Software http://tigisoftware.com/cydia/\nFilza File Manager 64-bit 文件管理器\nTWickd\nhttps://repo.twickd.com/\nTacitus（蓝牙设备连接）、3DBadgeClear，部分插件收费\nUnlimApps\nhttp://beta.unlimapps.com/\nApp Admin 应用程序降级\nX4 Repo\nhttps://repo.x4-applegate.com/\nSileo Remover 移除 Sileo\nXsF1re\u0026rsquo;s Repo\nhttps://xsf1re.github.io/repo/\nFlyJB 屏蔽越狱插件\nZebra https://getzbra.com/repo/\nhttps://getzbra.com/beta/\nZebra Package Manager 斑马插件管理器，斑马官网：https://getzbra.com/\n国内开发者源地址 电话助手 https://apt.htv123.com/\n电话助手官方源\n老牌猫源 https://apt.25mao.com/\n微信助手、微信助手密友、微信斗图助手、SuDial - T9 拨号\n威锋精品源 https://repo.feng.com/\n大量原创汉化补丁\nabxyap\u0026rsquo;s Repo https://abxyap.github.io/repo/\nHomeX 旧机型使用 iPhone X 手势\niBreak https://ibreak.yourepo.com/\nWeChat Callkit、QQ Callkit、Cydia 增强插件\nKanam\u0026rsquo;s Repo https://kanam.me/repo/\nNoMoreClassicApps(让没有适配 iPad 的 App 自动适配)、WeChat CallKit\nkingmehu https://kingmehu.yourepo.com/\nPerfectTimeXS 官方源地址\nNiceiOS https://apt.niceios.com/\nNiceBarX、NiceCaller 官方源地址\nAlice 源 https://apt.coolstar.xyz/\n多功能小助手官方源地址\nSoda https://soda-ldz.yourepo.com\n苏兔微信主题\nA 壹筒天下 https://yttxcs.com/\n插件收集整理，部分原创及汉化，主题、字体、系统增强等\nABC 野心源 https://apt.ambier.cn/\n大量字体，以及插件收集整理\nAAA 知网少年 https://apt.iphoneba.cn/\n插件收集整理，美化、字体、系统增强等\nAi-小苹果 https://repo.cydiabc.top/\n插件收集整理，有会员机制\nAi-小麻瓜 https://apt.margua.cn/\n插件收集整理\nAcreson\u0026rsquo;s Repo https://repo.sileo.xyz/\n插件收集整理，部分原创及汉化\nA-lenglengyu https://repo.lenglengyu.top/\n主打 App 内购破解、去广告\nBi 源 http://apt.cydia.bi/\n插件收集整理\nCydiakk 中文源 https://apt.cydiakk.com/\n插件收集整理\nNetskao https://repo.netskao.cn/\n插件收集整理，部分原创插件\n93 嗨客源 http://repo.qqtlr.com/\n插件收集整理，主打汉化补丁\n其他说明 如果发现https开头无法添加，请尝试http开头添加。\n再次增加很多源地址，但是依旧无法收集全\n","date":"2021-08-16T16:42:21+08:00","image":"https://blog.linsnow.cn/p/jb-source/repo_hu480492706057c69ada989611428d830b_16567_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/jb-source/","title":"Cydia和Sileo插件源地址整理"},{"content":"IOS利用捷径设置充电提示音 😀前因 在一次偶然间，我突然发现了手机没了充电提示音，不知道是bug还是，经过一番思索，突然有了这个想法，正好是越狱的iPhone，以为改系统文件可以解决，不过还是不行，突然我就想到了把提示音改成自己喜欢的，一举两得，岂不美哉，利用捷径app就能轻松搞定\n🧨手机要求 带有快捷指令app和自动化就行了\n👻正文 创建提取音频编码的指令 创建一个捷径，内容设置成这样子就行\n嫌麻烦就用我直接分享的做好的指令，快捷指令链接，点击后下载下来，然后点击打开即会跳转到捷径app,添加不了的在设置里找到快捷指令app，打开允许不受信任的快捷指令\n获取充电提示音的文本 把提示音以录屏方式保存在相册。首先找到含有自己喜欢的充电提示音视频通过手机录屏的方式或者直接保存到相册中。如果是音频同样可以使用录屏的方式存储到相册中，通过刚才运行刚才制作的指令，运行后会提示选择相册里一个带有想要的充电声音的视频就行了，指令会自动拷贝到粘贴板\n创建自动化 打开快捷指令app 选择下面的自动化 点击右上角的+号 选择创建个人自动化 选择充电器 选择已连接，然后下一步 点击添加操作 搜索文本并添加文本，文本里粘贴刚才运行指令获得的文本（直接粘贴就行） 再点击加号，搜索base64编码并添加，修改编码为解码 最后点击加号，搜索播放声音并添加就好 然后选择下一步，关掉运行前询问 点击完成就创建好了 制作一张属于你的Memoji工牌 🎉前言 apple store里的员工好像都有一张工牌，刚好扎比大神也做了一个Memoji工牌制作的快捷指令，轻松Get一张属于自己的Memoji工牌。在这里感谢扎比分享的快捷指令。\n🎈预见效果 😬正文 获取捷径 这里放出该捷径的文件\n点我下载\n更详细的获取教程：\n点击上面的下载链接，手机会提示下载，同意下载后打开下载的文件，不出意外的话会跳转到捷径app并提示添加此捷径，over🎉,没错，就是这么简单！\n使用捷径 打开手机的捷径指令app，运行下载好的Memoji快捷指令 在弹出来的窗口中选择一张你做好的头像， 然后在提示框中输入你想在工牌上显示的名字， 然后选择你喜欢的颜色， 制作完成后会弹出一个窗口， 选择存储图像即可 在相册里就可以看到了。 🎈结语 做好了工牌，apple store没你不行哈哈哈哈哈，明天就可以去上班了🐟\nGet一张喜人的微信支付壁纸 前言 前几天偶然发现一个有趣的捷径，那就是制作一张极具个性化的微信收款码做未锁屏壁纸，当然，这只能在iOS中才能实现，同样要用到捷径app，目前比较新的iOS版本基本上都自带这个app了，如果还没有的话请自行百度解决吧，在正文还没开始之前首先要感谢提供此捷径的作者\n📢先上效果 👌正文教程 获取捷径 这里放出该捷径的文件\n点我下载\n更详细的获取教程：\n点击上面的下载链接，手机会提示下载，同意下载后打开下载的文件，不出意外的话会跳转到捷径app并提示添加此捷径，over🎉,没错，就是这么简单！\n使用捷径 打开手机的捷径指令app，运行下载好的Wepay快捷指令 在弹出来的提示框中选择大金额、小金额或者充值中， 然后选择事先在微信里保存的收款码, 等待自动制作完成即可在相册里看到了。 （补充：如何在微信里获取收款码，打开微信，一次点击“支付-收付款-二维码收款-保存收款码”即可） 🤑结语 做好了但是谁给我转账啊哈哈哈哈\n","date":"2021-08-16T16:01:20+08:00","image":"https://blog.linsnow.cn/p/ios-jiejin/jiejin_hu234bf5cdde9ac8ac94feca72234f1ddf_22112_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/ios-jiejin/","title":"如何把玩iOS捷径"},{"content":"我认为的最强开源下载软件之Motrix 前言 好的软件不应该被埋没，今天分享一个开源的下载软件\u0026ndash;Motrix。说到下载器，你首先想到什么？\n某雷？某雷的确很强大，但是由于种种原因，并不可靠；IDM？IDM牛逼是牛逼，可惜不支持BT。\nMotrix，可以支持 HTTP、FTP、BT、磁力链接、百度云网盘下载等等，基本能覆盖所有的资源下载需求。\nMotrix的特点 简单明了的用户界面 支持BT种子磁力链 种子选择性下载 每天自动更新跟踪列表 UPnp = 纳特 - Pmp 端口映射 最多 10 个任务同时下载 单个任务最大支持 64 线程下载 下载进度图形动态显示 模拟用户代理 下载已完成的通知 用于快速操作的居民系统托盘 黑暗模式 删除任务时删除相关文件（可选） I18n \u0026hellip;\u0026hellip;. Motrix使用aria2作为内核，下载速度非常快，Motrix也可以接管你的浏览器（需要Chromium内核浏览器）下载，成为你的默认下载器，不用担心下载不了扩展，它的扩展也可以在GitHub上下载到，简直十分的良心。软件代码基于 Electron + Vue + VueX + Element 等技术编写而来，对开发感兴趣的同学可以参考学习一下。\n跨平台 Motrix支持Windows、Linux和macos。并且跨平台界面统一，在 Windows、macOS、Linux 三大平台上都有着一致的使用体验。\n软件界面 下载界面\n其他界面\n口说无凭 以下载GitHub上的软件做测试\n以下载GitHub上的Motrix做测试\n好家伙，还好我截图快，差点就下载完了\n软件地址 官网网站：莫特里克斯 (motrix.app)\nGitHub仓库地址：https://github.com/agalwood/Motrix\n","date":"2021-08-16T15:04:18+08:00","image":"https://blog.linsnow.cn/p/opensource-best-motrix/motrix_hu6f170c2f6f9410fd0e3e96566c80f22d_25808_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/opensource-best-motrix/","title":"我认为的最强开源下载软件之Motrix"},{"content":"Windows包管理器Winget快速入门 前言 微软 Windows 软件包管理器 winget已经发布了，winget 是 Windows 软件包管理器的 CLI（命令行界面），类似于 Linux 上的软件包管理器，用户可以通过 winget 命令行工具发现、安装、升级、删除和配置特选应用程序集。安装后，用户可以通过 Windows Terminal、PowerShell 或 CMD 访问 winget。假如你已经习惯了使用Linux的包管理器，那么winget就可以快速上手，运用winget可以快速给Windows安装软件\u0026hellip;.\n获取winget 从winget的github获取：https://github.com/microsoft/winget-cli\nWinget常用命令 获取帮助 直接输入命令 winget，能获取基本帮助，包括命令格式和命令参数。\n1 winget 使用情况: 1 winget [\u0026lt;命令\u0026gt;] [\u0026lt;选项\u0026gt;] 搜索软件 以搜索chrome为例,\n1 winget search chrome 输出结果\n安装软件 1 2 1. winget install Package #Package 为软件包名称或软件包的id 2. winget install Package --rainbow #加上--rainbow的参数可以让进度条显示为彩色，否则显示为单色 查看软件的详细信息 1 winget show package 软件源管理 WinGet 提供了一个 source 的命令，利用 winget source \u0026lt;command\u0026gt;，我们就可以方便地管理不同的 WinGet 软件 Manifest 仓库，WinGet 官方称之为「软件源」\n1 2 3 4 winget source add \u0026lt;软件源\u0026gt; # 添加新的软件源 winget source list # 列出当前已添加的软件源 winget source update # 更新当前全部添加的软件源 winget source remove # 移除当前使用的软件源 小结 这玩意跟Linux没法比，但能用，用起来也还不错，有至少比没有好，估计经过多次迭代会越来越好,建议配合Windows Terminal一起用\n。winget的命令不是很多，常用的那几条记一记就够用了\n","date":"2021-08-15T13:42:53+08:00","image":"https://blog.linsnow.cn/p/winget-start/winget_hube6430ac8297985005523064806a6bd0_26451_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/winget-start/","title":"Windows包管理器Winget快速入门"},{"content":"Windows11从入门到入土 前言 Why？为什么有这篇文章，因为电脑win10系统出问题了\u0026hellip;\u0026hellip;..其实在Windows11泄露到dev频道开放测试的时候我就已经开始使用了，后来由于amd显卡驱动在windows11上突然奔溃了就有回到了Windows10，真是反反复复，现在Windows11也测试差不多两个月了，体验应该不会太差了，今天就冲了，奥里给哈哈哈哈。顺便就记录一下这个过程吧。\nWhyNotWin11 能更新就尽量不要重装了\u0026hellip;\u0026hellip;.为什么不用官方检测工具呢，因为那玩意太操蛋了，比如检测结果是不合适的话也不会给你为什么不能安装的原因，好家伙，你是怕我安装上吗?当然有些设备检测为不能安装其实是没有关系的，直接用pe强制安装进去就行了，使用体验没差别，更新也会照样推送的。\n大神Robert Maehl开发了whynotwin11，这是一款实用的windows11升级检测工具，为了帮助Windows用户知道他们的设备是否被支持，它的判断逻辑简单直接，比微软的官方解决方案做得更好。同时它还可以根据所有相关标准检查PC的升级资格，而且该应用已经多次更新。除此之外，whynotwin11能够帮助用户去检测任何导致无法升级到Windows 11的问题，这对发现和解决这些问题是有非常大的帮助，软件轻巧实用，完全不需要任何的安装，下载双击打开即可使用\n工具地址：https://github.com/rcmaehl/WhyNotWin11\n下面是我电脑的检测结果\n如果检测不通过怎么办呢，不慌，下面会讲到解决方法\n这里检测通过里就直接在设置里更新\nWin11预览版注册 打开设置-更新和安全-Windows预览体验计划-开始-链接一个微软账号就行了\n这里我遇到过一个坑 就是打开Windows预览体验计划后页面一篇空白，这个可能是在安装完Windows10以后设置不当导致的，具体解决方法在以下\n打开设置-隐私-诊断和反馈-将诊断数据改为可选诊断数据就行了\n注册完成 开始更新Windows11 检测不通过方案 既然检测不通过，那就只能采用强制手段了\u0026ndash;利用PE安装\n我个人比较推荐的pe还是微PE\n网络上的pe一大堆，怎么顺手怎么来呗\n获取Windows11镜像，由于MSDN目前无法获取到镜像，官网也不行，所以我们可以采用国外镜像源获取\u0026ndash;UUP Dump,打开这个网站，找到下载界面，选择版本，语言和 Download using aria2, convert and create additional editions - 使用 aria2 下载, 转换和创建额外版本，把文件下载下来，解压到某个你认为行的地方，打开里面的后缀为.cmd的文件，等待运行完毕就会生成一个Windows11安装镜像在文件夹里，这不是有手就行吗.然后你就可以拿着你的Windows11镜像去为所欲为了。\n尾声 其实Windows11被喷的挺惨的，而我个人并不觉得怎么样，Windows11换了ui，采用圆角设计和大量的毛玻璃效果，这是目前比较流行的设计了，微软采用这个设计并融入了Windows11，这可能会影响未来几年或几十年的Windows，我认为我能够适应好并运用好它，而且等Windows11正式版出了就能原生支持安卓软件了，这不比模拟器香。其实网络上有大部分人只是跟风而已，举个栗子啊，macos一直采用的任务栏居中也没多少人在喷，还有开发者为此出macos dock的模拟软件用于改造Windows，这次Windows11出了任务栏居中翻倍被喷了，就离谱\u0026hellip;\u0026hellip;\n","date":"2021-08-15T10:17:21+08:00","image":"https://blog.linsnow.cn/p/win11-start/win11_hud22cc3af5e457c8ecb727efb06a1b175_34101_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/win11-start/","title":"Windows11从入门到入土"},{"content":"Hugo一键部署到Gitee或Github 为hugo博客创建一个一键推送到GitHub或gitee的.sh文件，前提是在对应的仓库已有ssh密钥\n创建一个名为deploy.sh的文件并写入以下内容\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 hugo #构造你的blog cd public #进入构造后的blog输出目录 git init #初始化git git add -A git commit -m \u0026#39;deploy\u0026#39; git push -f https://gitee.com/l1nsn0w/l1nsn0w.git master #向存储库推送 cd ../ # 回到上一级目录 rm -rf public # 删除目录 ","date":"2021-08-13T20:23:02+08:00","image":"https://blog.linsnow.cn/p/onekey-deployment/hugo_huc7970c6bbb4da15da2dcd6a3361cfc8d_17909_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/onekey-deployment/","title":"Hugo一键部署到Gitee或Github"},{"content":"签名ipa以在iOS下安装软件 前言 iOS或iPadOS安装第三方软件需要对其进行签名才能安装到设备上，但特殊情况如在iOS已经越狱的情况下可通过插件绕过签名直接安装，侧载的方法有很多，大概分为一下两个大的签名方式，但这次写的是关于利用个人免费开发者账号签名并安装到设备上\n免费开发者账号签名的软件必须每7天重新签名一次，否则会掉签，然后就打不开了\n付费开发者账号可以每1年重新签名一次，这里推荐一个签名网站isign\n以下分别介绍两个软件的签名教程，一个是爱思助手，一个是开源的Altstore，其他的签名软件本文就不讲了，毕竟要用到macos，也不是每个人都有macos使用\n注：\n爱思助手：适合频繁使用电脑的认识签名，对于小白友好\nAlt store：适合需要稳定签名的小伙伴，在iOS14及以上有组件提示日期，能够在链接服务器的条件下在手机完成签名并安装\n总之，最好两者都会，会方便很多\n正文： 爱思助手ipa签名 1.选择“使用 Apple ID 签名 - 添加 Apple ID”，随后输入用于签名的 Apple ID、密码并选择或输入对应设备的设备标识（指签名后 IPA 文件要安装的设备）；\n2.检查无误后点击“确定”。建议操作前需要将 iOS 设备连接至爱思助手，并保证可以读出“设备标识”，如果未连接设备，需要手动输入设备标识。Apple ID 添加完成后下方列表就会显示签名信息；\n3.之后，添加需要签名的 IPA 文件并勾选 IPA 文件和用于签名的 Apple ID，点击“开始签名”即可，签名成功后就可以通过爱思助手安装该应用了。安装完成后，在 iOS 设备上首次打开前记得去“设置 - 通用 - 描述文件”内信任该应用。\n请务必注意，已签名的 IPA 文件和原文件保存路径可能并不相同，签名后应该点击“打开已签名 IPA 位置”按钮，可用于安装的已签名 IPA 文件都会储存在该目录下，请注意分辨。\nAltstore签名 准备工作： 1.AltStore工具只能在Windows 10系统下使用，其他Windows版本不支持。\n2.安装之前：\n直接从Apple（而不是Microsoft Store）下载最新版本的iTunes 。 直接从Apple（而不是Microsoft Store）下载最新版本的iCloud 。 一个正常的apple id 正式开始Altstore的安装 安装iTunes以及iCloud，安装完或许会提示重启，重启就完事了\n登录iTunes并授权此电脑，iCloud不必登录也行\n在官网获取最新版altstore\n安装altstore并用数据线（充电线）将设备连接到电脑\n在开始菜单找到altserver并打开，这是可能会提示防火墙信息，允许就好了\n这时解锁你的设备并在设备弹出的窗口中选择信任此电脑\n鼠标左键单击任务栏中的altstore小图标，\n选择install AltStore，再选择你的的设备名称\n在弹出来的窗口中输入你的 apple id及密码并点击install\n接下来就会看见Installing AltStore to+你的设备名称 … ，代表AltStore正在签名安装中，请耐心等待安装完成，即可将altstore安装到设备\n整个安装AltStore进的过程有长有短，在iPhone桌面出现AltStore APP之后，安装过程才算完成，此时先别动，在设备中打开设置-通用-设备管理-选择altstore-信任alt store，如无法信任，请重新安装。\n这时即可将要安装的软件安装包导入到手机并使用altstore打开即可在手机完成安装\n示例：安装UTM 从utm官网获取UTM安装包\n打开手机中的altstore\n点击左上角的+号\n选择UTM.ipa安装包安装即可,等待安装完成\n这样就算安装完了\n","date":"2021-08-13T11:50:48+08:00","image":"https://blog.linsnow.cn/p/sign-ipa/ipa_huf5bb968159490e488b1905640cb36b46_27895_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/sign-ipa/","title":"签名ipa以在iOS下安装软件"},{"content":"Linux常用基础命令 前提 1 #带[]为可选参数，使用命令是应该取代[] 路径操作 显示当前所在路径\n1 pwd 更换路径\n1 2 3 4 cd path #当前目录可用.表示 #上一级使用..表示 #cd -可进入上次所在路径 显示当前目录所有文件或文件夹\n1 2 3 4 5 6 ls [-a][-h][-l] #或者 ls [-ahl] #常用 #-a 查看当前目录下的所有目录和文件（包括隐藏的文件） #-l 列表查看当前目录下的所有目录和文件（列表查看，显示更多信息） #-h 配合-l使用可以以人性化方式显示文件大小 文件与文件夹 创建一个文件\n1 2 touch 文件名 #示例 touch test.txt在当前目录创建一个名为test.txt的文件 创建一个文件夹\n1 mkdir 文件夹名 复制文件夹\n1 2 cp 要复制的文件 目标路径 #实例 cp test.txt . 复制test.txt到当前目录 移动文件\n1 2 mv 要移动的文件 目标路径 #示例mv test.txt ~ 移动test.txt到home目录下 查看文件\n1 2 cat 文件名 #示例 cat test.txt 删除文件\n1 2 3 4 5 rm 文件 # 删除当前目录下的文件 rm -rf* 文件或或文件夹 #rm [-rf] 目录 rm -rf * # 将当前目录下的所有目录和文件全部删除 rm -rf /* # 【自杀命令！慎用！慎用！慎用！】将根目录下的所有文件全部删除 基本命令 1.1 关机和重启 关机\n1 2 3 shutdown -h now 立刻关机 shutdown -h 5 5分钟后关机 poweroff 立刻关机 重启\n1 2 3 shutdown -r now 立刻重启 shutdown -r 5 5分钟后重启 reboot 立刻重启 1.2 帮助命令 1 2 3 --help命令 shutdown --help： ifconfig --help：查看网卡信息 1 2 3 man命令（命令说明书） man 指令 注意：man 打开命令说明书之后，使用按键q退出 su、sudo su su用于用户之间的切换。但是切换前的用户依然保持登录状态。如果是root 向普通或虚拟用户切换不需要密码，反之普通用户切换到其它任何用户都需要密码验证。\n1 2 3 4 1. su test:切换到test用户，但是路径还是/root目录 2. su - test : 切换到test用户，路径变成了/home/test 3. su : 切换到root用户，但是路径还是原来的路径 4. su - : 切换到root用户，并且路径是/root su不足：如果某个用户需要使用root权限、则必须要把root密码告诉此用户。\n退出返回之前的用户：exit\nsudo sudo是为所有想使用root权限的普通用户设计的。可以让普通用户具有临时使用root权限的权利。只需输入自己账户的密码即可。\n清屏 命令：\n1 clean 打包和压缩 Windows的压缩文件的扩展名 .zip/.rar linux中的打包文件：aa.tar linux中的压缩文件：bb.gz\nlinux中打包并压缩的文件：.tar.gz\n命令：\n1 2 3 4 5 6 tar -zcvf #打包压缩后的文件名 要打包的文件 #其中： z：调用gzip压缩命令进行压缩 c：打包文件 v：显示运行过程 f：指定文件名 解压 1 2 tar [-zxvf] 压缩文件 #其中：x：代表解压 apt命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 sudo apt-get update #更新源 sudo apt-get install package #安装包 sudo apt-get remove package #删除包 sudo apt-cache search package #搜索软件包 sudo apt-cache show package #获取包的相关信息，如说明、大小、版本等 sudo apt-get install package --reinstall #重新安装包 sudo apt-get -f install #修复安装 sudo apt-get remove package --purge #删除包，包括配置文件等 sudo apt-get build-dep package #安装相关的编译环境 sudo apt-get upgrade #更新已安装的包 sudo apt-get dist-upgrade #升级系统 sudo apt-cache depends package #了解使用该包依赖那些包 sudo apt-cache rdepends package #查看该包被哪些包依赖 sudo apt-get source package #下载该包的源代码 sudo apt-get clean \u0026amp;\u0026amp; sudo apt-get autoclean #清理无用的包 sudo apt-get check #检查是否有损坏的依赖 gedit文本编辑器 1 2 gedit 文件名 #示例 gedit test.txt 进入root 1 2 sudo -i 然后提示输入密码回车 ","date":"2021-08-12T20:44:59+08:00","image":"https://blog.linsnow.cn/p/linux-command/linux_hu8699f7e5ee6b4598d32f34abbc3961c6_26299_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/linux-command/","title":"Linux常用基础命令"},{"content":"如何快速获取ssh Key密钥 正文 在git bash执行一下指令\n1 2 git config --global user.email \u0026#34;you@example.com\u0026#34; git config --global user.name \u0026#34;Your Name\u0026#34; 生成shh key\n1 ssh-keygen -t rsa 一路回车就行\n默认会生成在目录\n1 C:\\Users\\用户名\\.ssh 获取生成目录下id_rsa.pub里的密钥就能使用了\n","date":"2021-08-12T15:21:45+08:00","image":"https://blog.linsnow.cn/p/get-sshkey/sshkey_hub935b25a52ff432ff36c41753def00d5_54731_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/get-sshkey/","title":"如何快速获取ssh Key密钥"},{"content":"Hello World！Hello Blog！ Main: Hi!👋我是L1nSn0w.很高心你发现到了这里.目前就读高中，从我初中开始真正接触了互联网和计算机，我对此具有很大的兴趣，后来我有了一台自己比较喜欢的笔记本，它能够满足我的使用需求，我很喜欢它。在对Windows，Linux及macOS等系统和软件的了解足够深入，我开始尝试着学习编程语言，这是一段漫长的过程，也是一个机遇，并且可能影响我大学专业的选择，这很关键，受限于上学等原因，学习的进程不是很快，纯粹靠着兴趣驱动着我，我是个初学者，学习起来很是费劲，于是乎我选择了前端的学习路线，前端是一个很酷的领域，但也是十分复杂。\u0026hellip;\u0026hellip;.到后来我认识了blog，我也开始尝试搭建我的blog，将我在iOS领域的想法与技巧分享到的我blog（我是个陷入apple生态的严重用户）。从hugo、hexo等平台获取到各式各样的blog的模板，并作为blog的确很cool，很幸运的是，我遇到了hugo-theme-stack，他基本上能够满足我目前对于blog的样式需求，很感谢Jimmy Cai，这是我的第n个blog，希望能坚持下去，并在此继续分享我的一些小破事。这是我的第一篇post，更新不会太频繁，就从这里开始吧！一切不会太晚.\n","date":"2021-08-12T15:20:00+08:00","image":"https://blog.linsnow.cn/p/hello-blog-hello-hugo/hello_hud6a4b67c3a9d56117e4183f41c3226f1_11329_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/hello-blog-hello-hugo/","title":"Hello World！Hello Blog！"},{"content":"PvZ巨佬的养老心得分享 关于PvZ 中文名称：植物大战僵尸，一款曾经火遍全球的小游戏。在现在用一个词来形容它：“经典”。\n我的童年与PvZ 童年的我，对植物有着独特的感情，pvz的背景音乐和关卡总是那么恰到好处，真是回味无穷\n这游戏很明显已经是历史悠久了，但是在不久的五一假期，我突然想起来了它，本片blog主要写一代pvz，一款老少皆宜的游戏对我这种高玩来说通关简直就是有手就行，但是，它在现代还有什么吸引我的地方吗？有的，那就是它的“无尽模式——泳池无尽”，我把这个关卡当作用来判定玩家的技术的关卡，即使玩了多年pvz的高玩也不一定能坚持的了几关，无尽模式是真的刺激。\nRe：2021从零开始PvZ 支持正版，从我做起！App Store的PvZ依然保持着更新！好家伙！十分良心，冲了。是电脑玩家的话还是从steam下吧！两个还是有点区别的。不过移动版的比较便捷，适合随时随地肝无尽，就很舒服，关键游戏也不吃配置，带上钉子户6s就可以开撸了哈哈哈哈\n无尽模式 无尽模式可以说是最具有挑战性的关卡了，玩到后期每行都有几只红眼巨人，难度可想而知，对我来说，这或许就是它现在最大的可玩性吧，在贴吧里就可以找到很多的大佬，挑战各种阵型，冲刺一千关。。。\nPvZ的养老模式 通关后该怎么办呢，当然就是打理花园，作为收藏党，不把花园的植物集齐是真难受，每天上线第一件事当然是上奸商的店买买花了，花园可谓是游戏养老的不二之选。\n","date":"2021-06-16T20:11:40+08:00","image":"https://blog.linsnow.cn/p/pvz-share/pvz_hua3f476129cfb519474873104b6b9c131_100998_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/pvz-share/","title":"PvZ巨佬的养老心得分享"},{"content":"带你玩转内网穿透 前言： 内网穿透,又叫NAT穿透，是计算机用语，翻译过来就是 你的电脑可以直接被你朋友访问。 通常我们的电脑是无法自己被访问的。因为我们的电脑缺少自己的独立的ip地址。现在ip稀缺，电信运营商已经不会随便分配固定ip给个人。\n通常实现内网穿透，是通过路由器上端口映射来实现的。但是路由器通常不是每个人都有权限可以访问和设置,而且可能存在多级路由器较为复杂的网络结构。端口映射也无法实现。\n钉钉穿透 官方文档地址 Github下载地址 在Windows使用： 下载完文件后进行解压，找到名为windows_64的文件夹, 找到以下文件,本教程将其放在桌面:C:\\Users\\l1nsn0w\\Desktop\\windows_64\n接着打开cmd\nCMD命令，进入到当前目录，输入如下参数\n详细的指令 1 2 3 cd C:\\Users\\l1nsn0w\\Desktop\\windows_64 ding.exe -config=./ding.cfg -subdomain=l1nsn0w 8080 输入每行指令并回车\n看到以上图片则表示已经穿透成功\n执行后的结果\n上图表示域名http://l1nsn0w.vaiwan.com映射到你本地的`http://127.0.0.1:8080\n开启本地端口 这里以我的博客项目为例。\n启动成功后，打开浏览器\n下图为本地端口预览\n下图为穿透后的域名\n成功访问域名。\n","date":"2021-05-22T21:51:06+08:00","image":"https://blog.linsnow.cn/p/dingding-net/dingding_hue163160a8e2efe77aa58952b0d888d2f_16765_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/dingding-net/","title":"带你玩转内网穿透"},{"content":"Odysseyra1n图形化安装工具Betelguese Betelguese 与 Odysseyra1n Odysseyra1n 是一个越狱安装脚本工具，通过执行它会把 checkra1n 越狱环境转变为 Odyssey 越狱环境，这意味着你的设备将使用 Procursus 引导程序，其中 Sileo 作为默认程序包管理器，而 libhooker 作为调整注入方法。这些将替换 Cydia 和 Cydia Substrate 进行调整注入以及处理越狱调整的过程。\n安装 Odysseyra1n 引导程序将删除 checkra1n 越狱默认安装的 Cydia 程序包管理器，并用与 Odyssey 越狱相关的那些默认的引导程序依赖项替换了一些越狱的默认引导程序依赖项，因此也称为 Odysseyra1n。\n下载Betelgeuese Betelguese 安装 Odysseyra1n 的过程十分简单。可以使用两种安装方法，如果你使用的是Brew，则可以简单地通过终端运行 brew install Betelguese 命令。如果不希望命令模式，只需转到 GitHub 官方页面即可获得下载链接。\nhttps://github.com/23Aaron/Betelguese/releases\n使用Betelgeuese 注意：如果你已经通过 checkra1 n越狱并安装了 Cydia，则需要使用 checkra1n Loader 应用程序的「Restore System」功能来删除现有的越狱。\n启动 Betelguese 应用。单击「install Odysseyra1n」按钮。\nBetelguese 应用会提示警告，在安装 Odysseyra1n 之前，需要通过 checkra1n Loader 应用程序执行还原系统。如果你跳过步骤 1-2，请立即执行。如果你已执行步骤 1-2，请单击蓝色的「Continue」按钮继续进行。\nBetelguese 将开始在你的设备上安装 Odysseyra1n 的过程。此过程大约需要一到两分钟时间。\n完成后，只需单击蓝色的「OK」确定按钮\n现在查看你的 iPhone 或 iPad，那么应该在主屏幕上看到 Sileo。\n开始享受sileo吧\n","date":"2021-05-22T21:45:54+08:00","image":"https://blog.linsnow.cn/p/betelguese-install-ody/betelguese_hu83e4a93de5051328e6f9a06dc7a95c2b_119830_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/betelguese-install-ody/","title":"Odysseyra1n图形化安装工具Betelguese"},{"content":"一键更新Odyssey/Taurine越狱内核 Jailebreak Update Odyssey/Taurine 首席开发者 CoolStar 发布了一款插件，名字为 Jailebreak Update，在 Odyssey Repo 源内可以安装，介绍显示更新 Odyssey/Taurine 无需重启与再次越狱。\n该方式仅升级越狱内核，即更新 CoolStar 发布的新版 Odyssey/Taurine 越狱工具的更新日志内容，无法更新越狱工具版本，如果关机重启再次越狱，依然还是旧版越狱工具的内核。\n安装 Jailbreak Update 安装 Odyssey Repo 源内 Jailbreak Update 插件。\n终端更新 安装终端插件，输入命令进行更新 Odyssey/Taurine 越狱内核。\n步骤一 安装 Chariz 源内终端插件 NewTerm 2。\n步骤二 打开终端插件 NewTerm 2 输入以下命令，等待更新完成后重启用户空间即可。\n1 2 sudo jbupdate alpine（密码默认不显示） 通过 libhooker Configurator 可以查看 Taurine 内核版本，但是打开 Taurine 提示有更新。\n","date":"2021-04-17T10:01:34+08:00","image":"https://blog.linsnow.cn/p/onekey-jbupdate/jbupdate_hu29b21095a92218502fd1597d39ba8f83_17985_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/onekey-jbupdate/","title":"一键更新Odyssey/Taurine越狱内核"},{"content":"超简易checkn1x越狱 前言 CheckRa1n 越狱工具需要在 macOS 系统上进行安装，但借助民间大佬做的checkn1x.iso镜像文件即可轻松在Windows电脑完成越狱。\n准备工作： 工具 下载地址 BalenaEtcher刻录工具 官网 Checkn1x.iso镜像文件 点我下载密码1111 一个大于1G的U盘 一条正常的充电线或数据线 一台能用的电脑**** 一台iPhone 准备上述材料后即准备工作结束。\n制作步骤： 打开BalenaEtcher刻录工具（注意不要把刻录工具放在中文路径，如果不懂就直接放到桌面）\n从左往右点击第一个选项（Select image)\n选择刚才下载checkn1x.iso镜像文件并打开\n插入U盘（注意：该步骤会清空当前 U 盘上储存的所有数据，请务必提请备份好个人数据） 最后一步，从左往右点击第三个按钮（Flash）\n等待刻录成功\n到这了则表示已经制作成功了？？？\n重新插拔U盘，此时电脑可能会提示格式化，这里不需要管，直接重启电脑即可\n启动越狱工具： 重启电脑，进入 BIOS 模式并选择以 U 盘启动，使用数据线将 iPhone 连接至电脑\n（不同型号电脑、主板进入 BIOS 方法不同，以下提供部分配置参考）\n在Welcome to checkn1x 界面按组合键 Alt+F2 进入 Checkra1n（使用笔记本自带的键盘则是先按住 Fn+Alt 后再按 F2）；\n开始越狱 使用键盘方向键选择右下角“Start”后按回车开始；\n注意：如果提示“Sorry,iPhone (5s-X) is supported,but iOS is not.\u0026ldquo;导致“Start”按钮无法选取，请进入左侧“Options”选项，然后开启“Allow untested iOS/ iPadOS/tvOS versions”项，然后返回即可选取“Start”。\n使用键盘方向键选择右下角“Start”后按回车，根据屏幕提示将设备进入 DFU 模式；\n进入 DFU 模式后自动执行越狱步骤，无需其他操作；\n越狱完成后，Checkra1n 会提示“All Done”，如果越狱失败请再尝试几次；\n越狱完成： 此时 iPhone 桌面会有 checkra1n 图标生成，打开桌面的 checkra1n，点击 Cydia 并安装； 成功安装 Cydia 后本次越狱完成； 重启电脑，断开数据线、U 盘。 补充： 按照以上方式越狱后，如果重启 iPhone 越狱环境将会失效，需要按照以上步骤重新越狱才能恢复。\n","date":"2020-11-22T17:25:53+08:00","image":"https://blog.linsnow.cn/p/easy-checkn1x/checkn1x_hu0f1d38cde3670cf27349f36bc5c8459c_15751_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/easy-checkn1x/","title":"超简易checkn1x越狱"},{"content":"使用OdysseyRa1n安装Sileo 简介 Odysseyra1n 是来自 Coolstar 的一个新的处理计划，并附带了来自 Diatrus 新的、开源的 Procursus bootstrap。\nOdysseyra1n 能够让你的设施运转齐全自力的 libhooker。Libhooker 是 Coolstar 从零开端打造的一个以速率和稳固性为条件的 substrate/substitute。Libhooker 对 iOS 13 进行了完美的适配。\nProcursus 从零开端就被计划为开源，一切人都能够拜访，并附带 Diatrus 不断在开辟的 133 个软件包，此中包含 wget2，这是一切 iOS Boostrap 的第一个软件包。Procursus 的计划目标是能够轻松地增加就任何越狱中，以便疾速、轻松地增加成为越狱依赖，而且依赖是古代化的、最新的。\nOdysseyra1n 仅允从应用 checkra1n 越狱的设施，不允从 unc0ver 越狱设施。\nmacOS 平台 在 macOS 的终端输入以下命令安装 homebrew，使用国内镜像源安装，如果电脑没有安装 Xcode 需要输入两次命令。第一次输入会提示安装系统更新，系统更新安装完成后，再次输入命令进行安装 homebrew，请耐心等待安装完成。\n1 /bin/zsh -c \u0026#34;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\u0026#34; 安装 homebrew 完成之后，再次输入命令安装 iproxy，请耐心等待安装完成。\n1 brew install usbmuxd Linux 平台 终端输入命令安装 iproxy\n1 sudo apt install libusbmuxd-tools checkra1n 越狱 首先使用 checkra1n 越狱，如何越狱就不再赘述了。\n如果已经使用 checkra1n 越狱，请先 rootfs 清理越狱环境再使用 checkra1n 越狱一次。\n安装 Sileo 注意事项：使用 CoolStar 提供的脚本及国内分流脚本，不需要打开 SSH 通道，checkra1n 越狱后，不要打开 checkra1n 安装 Cydia。\nCoolStar 原版脚本 1 /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/coolstar/Odyssey-bootstrap/master/procursus-deploy-linux-macos.sh)\u0026#34; 安装完后 更新插件（必须） Sileo 刷新完成后，会提示更新插件，直接更新即可。\n安装 libhooker（必须） Sileo 切换至开发者模式（慢慢找，一个圆圆的按钮，不要找不到就说没有）\n进入Odyssey Repo 安装 PreferenceLoader和libhook\nlibhooker 安装完成后，请使用 checkra1n 重新引导越狱一次，或者安装 NewTerm (iOS 10 - 13) 终端插件，使用命令。\n1 su /etc/rc.d/libhooker ","date":"2020-11-21T17:25:53+08:00","image":"https://blog.linsnow.cn/p/install-sileo-by-odysseyra1n/odysseyra1n_hud375e89b69b0dcaf3abb68ec409119bb_7492_120x120_fill_q75_box_smart1.jpg","permalink":"https://blog.linsnow.cn/p/install-sileo-by-odysseyra1n/","title":"使用OdysseyRa1n安装Sileo"},{"content":"iOS13.0至13.6Succession平刷教程 Succession刷机简介： 众所周知 iOS 一旦关闭系统验证，意味着不能正常刷机对当前系统平刷，而这款工具则可以解决这个难题，而越狱后设备，就可以利用 Succession 插件实现平刷了，这款插件它不依赖SHSH，也不依赖SEP，只需要你当前系统越狱，就能对当前系统平刷，但它不能降级和升级！！！\n关于 Succession 平刷插件信息： 插件 Succession 开发者 Samg_is_a_Ninja 用途 平刷当前系统 系统支持 iOS 10 至 13.7 教程开始 本教程为导入固件法,会全部清除掉里面的所有内容，succession平刷的和Un快照+抹除还原差不多一样，但是有些情况下确实还是使用succession较全面。本次平刷在未删除本机任何一个插件直接进行，，建议平刷前***退出ID***\n准备工作： 当然，手机应该是已经越狱的才行，先在越狱商店下载插件succession\n作者源下载：\nhttps//:samgisaninja.github.io/beta\n自带源下载：\n检查一下BigBOSS源是否空白，如果空白请「科学上网」刷新，检查有插件\n再去搜索：Succession并下载\n方法一 下载固件 下载你手机系统版本的固件（注意别下载错了）。\n下载系统固件：可以在线下载或从爱思助手下载然后导入，从爱思助手导入则需要事先安装afc2补丁下载好导入到手机/var/mobile/Media/Succession目录下（注意给固件改名为ipsw.ipsw）。如果没有Succession这个目录就在/var/mobile/Media 下新建一个文件夹（注意大小写）\n系统固件放入手机： 爱思助手下载完固件，右上角下载 选择固件，右上角打开文件夹 然后爱思助手-我的设备-文件管理 找到Succession文件夹，把刚下载固件拉进去 然后把固件改名为：ipsw.ipsw 开始平刷： 手机桌面打开Succession\n选择「Download clean filesystem」\n选择「Use开头」，正在解压耐心等待几秒\n解压完成后，选择 Back 按钮\n再选择「Prepare for restore」\n再点击「Erase iPhone」\n这样就开始准备了\n数据导入完成，Succession会闪退\n然后等待几秒钟，手机会自动进入刷机模式\n注意平刷途中不能息屏和退出\n等了很久，还是卡主了，你可以强制重启手机!\n平刷完成后，会进入引导激活界面，你就跟着提示操作就行，很简单，这样就能恢复干净的系统了。\n方法二 ** 1.打开succession**\n2.点击Download clean filesytem\n3.点击Start Download（在线下载）\n4.等进度条走完 点击back\n5.然后点击红字Prepare for restore！\n6.点击Erase iphone\n注意 1. 国行机器可能会出现没办法下载，原因是succession没获得联网权限，需要在Cydia搜索下载“连个锤子”修复一下\n​ 2. 安全起见打开飞行模式连接wifi，防止刷机过程中有电话。\n​ 3. A12以下（包含A12）可以正常使用，succession平刷类似dfu刷机（黑解机不要用）\niOS13.3平刷后通用软件更新显示无法检查更新BUG\n解决办法\n1.平刷后再次安装un4.3.1打开Restore RootFS清除越狱状态。\n2.平刷前手机关机重新启动 打开un4.3.1激活越狱前 记得关闭Disable Updates选项 再在激活越狱环境。步骤还是上面的1-6\n教程完结！！！\n","date":"2020-11-21T17:21:22+08:00","image":"https://blog.linsnow.cn/p/succession-shuaji/succsion_hu23a7850791385f468c9ba9d18817f6b5_40621_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/succession-shuaji/","title":"iOS13.0至13.6Succession平刷教程"},{"content":"使用爱思助手制作越狱U盘 前言 CheckRa1n 越狱工具需要在 macOS 系统上进行安装，借助电脑端爱思助手制作越狱 U 盘后，即可在 Windows 电脑上使用 CheckRa1n 进行越狱。\n支持设备：iPhone 5S - iPhone X\n兼容系统：iOS 12.3 及以上\n越狱 U 盘制作步骤 准备好一个 1GB 以上的 U 盘，然后将 U 盘连接至电脑，打开电脑端爱思助手，在“刷机越狱 - 一键越狱”中点击“制作越狱 U 盘”，此时会弹出功能说明并显示已插入的 U 盘，选择用于制作的 U 盘后点击“开始制作”按钮。注意，该步骤会清空当前 U 盘上储存的所有数据，请务必提请备份好个人数据；\n随后，爱思助手会自动制作越狱 U 盘，制作完成后点击提示框的“关闭”按钮即可。\n**使用 U 盘越狱步骤 重启电脑，进入 BIOS 模式并选择以 U 盘启动（这里选择 Generic Flash Disk），使用数据线将 iPhone 连接至电脑；\n（不同型号电脑、主板进入 BIOS 方法不同，以下提供部分配置参考）\n在Welcome to checkn1x 界面按组合键 Alt+F2 进入 Checkra1n（使用笔记本自带的键盘则是先按住 Fn+Alt 后再按 F2）；\n使用键盘方向键选择右下角“Start”后按回车开始；\n注意：如果提示“Sorry,iPhone (5s-X) is supported,but iOS is not.\u0026ldquo;导致“Start”按钮无法选取，请进入左侧“Options”选项，然后开启“Allow untested iOS/ iPadOS/tvOS versions”项，然后返回即可选取“Start”。\n使用键盘方向键选择右下角“Start”后按回车，根据屏幕提示将设备进入 DFU 模式；\n进入 DFU 模式后自动执行越狱步骤，无需其他操作；\n越狱完成后，Checkra1n 会提示“All Done”，如果越狱失败请再尝试几次；\n此时 iPhone 桌面会有 checkra1n 图标生成，打开桌面的 checkra1n，点击 Cydia 并安装；\n成功安装 Cydia 后本次越狱完成；\n重启电脑，断开数据线、U 盘。\n按照以上方式越狱后，如果重启 iPhone 越狱环境将会失效，需要按照以上步骤重新越狱才能恢复。\n","date":"2020-11-11T17:25:53+08:00","image":"https://blog.linsnow.cn/p/i4tool-flash-jailbreak/checkra1n_hu0131a019c4974315a464bdc98c490235_499_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/i4tool-flash-jailbreak/","title":"使用爱思助手制作越狱U盘"},{"content":"Hi!👋 It is so happy that you can find this post.Leaving in China ,i study a special english which also named \u0026ldquo;Chinglish\u0026rdquo;.So i cannot improve my english easily and quickly.It is one of the main reason why i start my english blog. As a english leaner,i have been learning english so long ,and i think writing english may be a good way for me to improve my english witting skill .I have a little vocabulary ,though,i try my best to express.May be there are many grammer and word mistakes in this post,if it is convient ,i hope you can correct it in the comment below.\n❤️thanks for reading:)\n","date":"2022-10-23T05:41:57+08:00","image":"https://blog.linsnow.cn/p/english/lisa_hu4531ad499644905f74cebb0d3bdd5cd5_63849_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/english/","title":"Why i start my english blog"},{"content":"PR常用快捷键 基本快捷键操作 Ctrl+Alt+N 新建项目 Ctrl+O 打开项目 Ctrl+shift+w 关闭项目 Ctrl + W 关闭 Ctrl + S 保存 Ctrl + shift+ S 另存为 Ctrl + I 导入 Ctrl + N 新建序列 Ctrl + Z 还原 Ctrl + X 剪切 Ctrl + C 复制 Ctrl + V 粘贴 Ctrl + A 全选 Ctrl + Shift + A 取消全选 Ctrl + F 查找 Ctrl + K 剪切 Ctrl + Shift + K 所有 剪辑操作 Delete 删除素材 Shift+Delete 单段素材删除，后面素材自动跟上 C 剃刀工具 Shift+C 所有轨道剪断 Ctrl+K 快速剪断素材 ctrl+shif+K 所有轨道快速剪切素材 W 删除本段素材时间线后面素材 Q 删除本段素材时间线前面素材 Shift+Q 改变时间线前面剪辑点 Shift+W 改变时间线后面剪辑点 A 向前选择轨道工具 shift 向前选择单独选中单个 标记 I 标记入点 O 标记出点 X 标记素材入出点 Shift + / 标记素材 Shift + \\ 在项目窗口查看形式 Shift + * 返回媒体浏览 / 标记选择 Shift + I 跳转入点 Shift + O 跳转出点 Ctrl + Shift + I 清除入点 Ctrl + Shift + Q 清除出点 Ctrl + Shift + X 清除入出点 M 添加标记 Shift + M 转到下一个标记 Ctrl + Shift + M 转到上一个标记 Ctrl + Alt + M 清除当前标记 Ctrl + Alt + Shift + M 清除所有标记 字幕 Ctrl + T 新建字幕 Ctrl + Shift +L 左对齐 Ctrl + Shift + C 居中 Ctrl + Shift + R 右对齐 Ctrl + Shift + T 制表符设置 Ctrl + J 模板 Ctrl + Alt + ] 上一层的下一个对象 Ctrl + Alt + [ 下一层的下一个对象 Ctrl + Shift + ] 放到最上层 Ctrl + ] 上移一层 Ctrl + Shift + [ 放到最下层 Ctrl + [ 下移一层 素材操作 Shift+E 隐藏素材 AIt+Ctrl+拖动 前后两段素材互换位置 Home 回到第一帧的位置 End 回到最后一帧的位置 ctrl+D 默认交叉转场效果 Ctrl + Shift + D 默认音频转场 Shift + D 默认音视频转场 Ctrl + Alt + V 粘贴属性 Alt+拖动 直接拖拽复制 Ctrl + Shift + V 粘贴插入 ","date":"2021-08-19T14:22:50+08:00","image":"https://blog.linsnow.cn/p/pr-key/pr_hu57c424ed818211fb3b5ca073ab4cf392_47832_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/pr-key/","title":"PR常用快捷键"},{"content":"PS常用快捷键 工具箱 矩形、椭圆选框工具 【M】 裁剪工具 【C】 移动工具 【V】 套索、多边形套索、磁性套索 【L】 魔棒工具 【W】 喷枪工具 【J】 画笔工具 【B】 橡皮图章、图案图章 【S】 历史记录画笔工具 【Y】 橡皮擦工具 【E】 铅笔、直线工具 【N】 模糊、锐化、涂抹工具 【R】 减淡、加深、海绵工具 【O】 钢笔、自由钢笔、磁性钢笔 【P】 添加（删除）锚点工具 【+】（【-】） 直接选取工具 【A】 文字、文字蒙板、直排文字、直排文字蒙板 【T】 度量工具 【U】 油漆桶工具 【K】 吸管、颜色取样器 【I】 抓手工具 【H】 缩放工具 【Z】 默认前景色和背景色 【D】 切换前景色和背景色 【X】 切换标准模式和快速蒙板模式 【Q】 标准屏幕模式、带有菜单栏的全屏模式、全屏模式 【F】 临时使用移动工具 【Ctrl】 临时使用吸色工具 【Alt】 临时使用抓手工具 【空格】 打开工具选项面板 【Enter】 文件操作 新建图形文件 【Ctrl】+【N】 用默认设置创建新文件 【Ctrl】+【Alt】+【N】 打开已有的图像 【Ctrl】+【O】 打开为\u0026hellip; 【Ctrl】+【Alt】+【O】 关闭当前图像 【Ctrl】+【W】 保存当前图像 【Ctrl】+【S】 另存为\u0026hellip; 【Ctrl】+【Shift】+【S】 存储副本 【Ctrl】+【Alt】+【S】 页面设置 【Ctrl】+【Shift】+【P】 打印 【Ctrl】+【P】 打开“预置”对话框 【Ctrl】+【K】 显示最后一次显示的“预置”对话框 【Alt】+【Ctrl】+【K】 设置“常规”选项(在预置对话框中) 【Ctrl】+【1】 设置“存储文件”(在预置对话框中) 【Ctrl】+【2】 设置“显示和光标”(在预置对话框中) 【Ctrl】+【3】 设置“透明区域与色域”(在预置对话框中) 【Ctrl】+【4】 设置“单位与标尺”(在预置对话框中) 【Ctrl】+【5】 设置“参考线与网格”(在预置对话框中) 【Ctrl】+【6】 设置“增效工具与暂存盘”(在预置对话框中) 【Ctrl】+【7】 设置“内存与图像高速缓存”(在预置对话框中) 【Ctrl】+【8】 编辑操作 还原/重做前一步操作 【Ctrl】+【Z】 还原两步以上操作 【Ctrl】+【Alt】+【Z】 重做两步以上操作 【Ctrl】+【Shift】+【Z】 剪切选取的图像或路径 【Ctrl】+【X】或【F2】 拷贝选取的图像或路径 【Ctrl】+【C】 合并拷贝 【Ctrl】+【Shift】+【C】 将剪贴板的内容粘到当前图形中 【Ctrl】+【V】或【F4】 将剪贴板的内容粘到选框中 【Ctrl】+【Shift】+【V】 自由变换 【Ctrl】+【T】 应用自由变换(在自由变换模式下) 【Enter】 从中心或对称点开始变换 (在自由变换模式下) 【Alt】 限制(在自由变换模式下) 【Shift】 扭曲(在自由变换模式下) 【Ctrl】 取消变形(在自由变换模式下) 【Esc】 自由变换复制的像素数据 【Ctrl】+【Shift】+【T】 再次变换复制的像素数据并建立一个副本 【Ctrl】+【Shift】+【Alt】+【T】 删除选框中的图案或选取的路径 【DEL】 用背景色填充所选区域或整个图层 【Ctrl】+【BackSpace】或【Ctrl】+【Del】 用前景色填充所选区域或整个图层 【Alt】+【BackSpace】或【Alt】+【Del】 弹出“填充”对话框 【Shift】+【BackSpace】 从历史记录中填充 【Alt】+【Ctrl】+【Backspace】 图像调整 调整色阶 【Ctrl】+【L】 自动调整色阶 【Ctrl】+【Shift】+【L】 打开曲线调整对话框 【Ctrl】+【M】 在所选通道的曲线上添加新的点(‘曲线’对话框中) 在图像中【Ctrl】加点按 加点按移动所选点(‘曲线’对话框中) 【↑】/【↓】/【←】/【→】 以10点为增幅移动所选点以10点为增幅(‘曲线’对话框中) 【Shift】+【箭头】 选择多个控制点(‘曲线’对话框中) 【Shift】加点按 前移控制点(‘曲线’对话框中) 【Ctrl】+【Tab】 后移控制点(‘曲线’对话框中) 【Ctrl】+【Shift】+【Tab】 添加新的点(‘曲线’对话框中) 点按网格 删除点(‘曲线’对话框中) 【Ctrl】加点按点 取消选择所选通道上的所有点(‘曲线’对话框中) 【Ctrl】+【D】 使曲线网格更精细或更粗糙(‘曲线’对话框中) 【Alt】加点按网格 选择彩色通道(‘曲线’对话框中) 【Ctrl】+【~】 选择单色通道(‘曲线’对话框中) 【Ctrl】+【数字】 打开“色彩平衡”对话框 【Ctrl】+【B】 打开“色相/饱和度”对话框 【Ctrl】+【U】 全图调整(在色相/饱和度”对话框中) 【Ctrl】+【~】 只调整红色(在色相/饱和度”对话框中) 【Ctrl】+【1】 只调整黄色(在色相/饱和度”对话框中) 【Ctrl】+【2】 只调整绿色(在色相/饱和度”对话框中) 【Ctrl】+【3】 只调整青色(在色相/饱和度”对话框中) 【Ctrl】+【4】 只调整蓝色(在色相/饱和度”对话框中) 【Ctrl】+【5】 只调整洋红(在色相/饱和度”对话框中) 【Ctrl】+【6】 去色 【Ctrl】+【Shift】+【U】 反相 【Ctrl】+【I】 图层操作 从对话框新建一个图层 【Ctrl】+【Shift】+【N】 以默认选项建立一个新的图层 【Ctrl】+【Alt】+【Shift】+【N】 通过拷贝建立一个图层 【Ctrl】+【J】 通过剪切建立一个图层 【Ctrl】+【Shift】+【J】 与前一图层编组 【Ctrl】+【G】 取消编组 【Ctrl】+【Shift】+【G】 向下合并或合并连接图层 【Ctrl】+【E】 合并可见图层 【Ctrl】+【Shift】+【E】 盖印或盖印连接图层 【Ctrl】+【Alt】+【E】 盖印可见图层 【Ctrl】+【Alt】+【Shift】+【E】 将当前层下移一层 【Ctrl】+【[】 将当前层上移一层 【Ctrl】+【]】 将当前层移到最下面 【Ctrl】+【Shift】+【[】 将当前层移到最上面 【Ctrl】+【Shift】+【]】 激活下一个图层 【Alt】+【[】 激活上一个图层 【Alt】+【]】 激活底部图层 【Shift】+【Alt】+【[】 激活顶部图层 【Shift】+【Alt】+【]】 调整当前图层的透明度(当前工具为无数字参数的,如移动工具) 【0】至【9】 保留当前图层的透明区域(开关) 【/】 投影效果(在”效果”对话框中) 【Ctrl】+【1】 内阴影效果(在”效果”对话框中) 【Ctrl】+【2】 外发光效果(在”效果”对话框中) 【Ctrl】+【3】 内发光效果(在”效果”对话框中) 【Ctrl】+【4】 斜面和浮雕效果(在”效果”对话框中) 【Ctrl】+【5】 应用当前所选效果并使参数可调(在”效果”对话框中) 【A】 图层混合模式 循环选择混合模式 【Alt】+【-】或【+】 正常 【Ctrl】+【Alt】+【N】 阈值（位图模式） 【Ctrl】+【Alt】+【L】 溶解 【Ctrl】+【Alt】+【I】 背后 【Ctrl】+【Alt】+【Q】 清除 【Ctrl】+【Alt】+【R】 正片叠底 【Ctrl】+【Alt】+【M】 屏幕 【Ctrl】+【Alt】+【S】 叠加 【Ctrl】+【Alt】+【O】 柔光 【Ctrl】+【Alt】+【F】 强光 【Ctrl】+【Alt】+【H】 颜色减淡 【Ctrl】+【Alt】+【D】 颜色加深 【Ctrl】+【Alt】+【B】 变暗 【Ctrl】+【Alt】+【K】 变亮 【Ctrl】+【Alt】+【G】 差值 【Ctrl】+【Alt】+【E】 排除 【Ctrl】+【Alt】+【X】 色相 【Ctrl】+【Alt】+【U】 饱和度 【Ctrl】+【Alt】+【T】 颜色 【Ctrl】+【Alt】+【C】 光度 【Ctrl】+【Alt】+【Y】 去色 海棉工具+【Ctrl】+【Alt】+【J】 加色 海棉工具+【Ctrl】+【Alt】+【A】 暗调 减淡/加深工具+【Ctrl】+【Alt】+【W】 中间调 减淡/加深工具+【Ctrl】+【Alt】+【V】 高光 减淡/加深工具+【Ctrl】+【Alt】+【Z】 选择功能 全部选取 【Ctrl】+【A】 取消选择 【Ctrl】+【D】 重新选择 【Ctrl】+【Shift】+【D】 羽化选择 【Ctrl】+【Alt】+【D】 反向选择 【Ctrl】+【Shift】+【I】 路径变选区 数字键盘的【Enter】 载入选区 【Ctrl】+点按图层、路径、通道面板中的缩约图 滤镜 按上次的参数再做一次上次的滤镜 【Ctrl】+【F】 退去上次所做滤镜的效果 【Ctrl】+【Shift】+【F】 重复上次所做的滤镜(可调参数) 【Ctrl】+【Alt】+【F】 选择工具(在“3D变化”滤镜中) 【V】 立方体工具(在“3D变化”滤镜中) 【M】 球体工具(在“3D变化”滤镜中) 【N】 柱体工具(在“3D变化”滤镜中) 【C】 轨迹球(在“3D变化”滤镜中) 【R】 全景相机工具(在“3D变化”滤镜中) 【E】 视图操作 显示彩色通道 【Ctrl】+【~】 显示单色通道 【Ctrl】+【数字】 显示复合通道 【~】 以CMYK方式预览(开关) 【Ctrl】+【Y】 打开/关闭色域警告 【Ctrl】+【Shift】+【Y】 放大视图 【Ctrl】+【+】 缩小视图 【Ctrl】+【-】 满画布显示 【Ctrl】+【0】 实际象素显示 【Ctrl】+【Alt】+【0】 向上卷动一屏 【PageUp】 向下卷动一屏 【PageDown】 向左卷动一屏 【Ctrl】+【PageUp】 向右卷动一屏 【Ctrl】+【PageDown】 向上卷动10 个单位 【Shift】+【PageUp】 向下卷动10 个单位 【Shift】+【PageDown】 向左卷动10 个单位 【Shift】+【Ctrl】+【PageUp】 向右卷动10 个单位 【Shift】+【Ctrl】+【PageDown】 将视图移到左上角 【Home】 将视图移到右下角 【End】 显示/隐藏选择区域 【Ctrl】+【H】 显示/隐藏路径 【Ctrl】+【Shift】+【H】 显示/隐藏标尺 【Ctrl】+【R】 显示/隐藏参考线 【Ctrl】+【;】 显示/隐藏网格 【Ctrl】+【”】 贴紧参考线 【Ctrl】+【Shift】+【;】 锁定参考线 【Ctrl】+【Alt】+【;】 贴紧网格 【Ctrl】+【Shift】+【”】 显示/隐藏“画笔”面板 【F5】 显示/隐藏“颜色”面板 【F6】 显示/隐藏“图层”面板 【F7】 显示/隐藏“信息”面板 【F8】 显示/隐藏“动作”面板 【F9】 显示/隐藏所有命令面板 【TAB】 显示或隐藏工具箱以外的所有调板 【Shift】+【TAB】 文字处理 左对齐或顶对齐 【Ctrl】+【Shift】+【L】 中对齐 【Ctrl】+【Shift】+【C】 右对齐或底对齐 【Ctrl】+【Shift】+【R】 左／右选择 1 个字符 【Shift】+【←】/【→】 下／上选择 1 行 【Shift】+【↑】/【↓】 选择所有字符 【Ctrl】+【A】 选择从插入点到鼠标点按点的字符 【Shift】加点按 左／右移动 1 个字符 【←】/【→】 下／上移动 1 行 【↑】/【↓】 左／右移动1个字 【Ctrl】+【←】/【→】 将所选文本的文字大小减小2 点象素 【Ctrl】+【Shift】+【\u0026lt;】 将所选文本的文字大小增大2 点象素 【Ctrl】+【Shift】+【\u0026gt;】 将所选文本的文字大小减小10 点象素 【Ctrl】+【Alt】+【Shift】+【\u0026lt;】 将所选文本的文字大小增大10 点象素 【Ctrl】+【Alt】+【Shift】+【\u0026gt;】 将行距减小2点象素 【Alt】+【↓】 将行距增大2点象素 【Alt】+【↑】 将基线位移减小2点象素 【Shift】+【Alt】+【↓】 将基线位移增加2点象素 【Shift】+【Alt】+【↑】 将字距微调或字距调整减小20/1000ems 【Alt】+【←】 将字距微调或字距调整增加20/1000ems 【Alt】+【→】 将字距微调或字距调整减小100/1000ems 【Ctrl】+【Alt】+【←】 将字距微调或字距调整增加100/1000ems 【Ctrl】+【Alt】+【→】 切换图层模式 【shift】+【 + 】或【 - 】 双击面板=Open file ctrl+双击面板=New file shift+双击面板=Save alt+双击面板=Open as ctrl+shift+=Save as ctrl+alt+o=实际像素显示 ctrl+h=隐藏选定区域 ctrl+d=取消选定区域 ctrl+w=关闭文件 ctrl+q=退出photoshop F=标准显示模式→带菜单的全屏显示模式→全屏显示模式 按Tab键可以显示或隐藏工具箱和调色板，按“Shift+Tab\u0026quot;键可以显示或隐藏除工具箱外的其它调色板。 ESC=取消操作 ","date":"2021-08-19T14:20:32+08:00","image":"https://blog.linsnow.cn/p/ps-key/ps_hua6aa7bbaf8e6f92d59bad5bebd6ff658_51369_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/ps-key/","title":"PS常用快捷键"},{"content":"CSS选择器的使用 CSS 元素选择器 元素选择器根据元素名称来选择 HTML 元素。\n**实例：**使页面上的所有 元素带有红色文本颜色：\n1 2 3 p { color: red; } CSS id 选择器 id 选择器使用 HTML 元素的 id 属性来选择特定元素。\n元素的 id 在页面中是唯一的，因此 id 选择器用于选择一个唯一的元素！\n要选择具有特定 id 的元素，请写一个井号（＃），后跟该元素的 id。\n**注意：**id 名称不能以数字开头。\n实例\n这条 CSS 规则将应用于 id=\u0026ldquo;testid\u0026rdquo; 的 HTML 元素：\n1 2 3 #testid { color: red; } CSS 通用选择器 通用选择器（*）选择页面上的所有的 HTML 元素。\n实例\n下面的 CSS 规则会影响页面上的每个 HTML 元素：\n1 2 3 * { padding: 0 } CSS 分组选择器 分组选择器选取所有具有相同样式定义的 HTML 元素。\n1 2 3 4 5 6 7 8 9 h1 { text-align: center; color: red; } h2 { text-align: center; color: red; } CSS 类选择器 1 2 3 \u0026lt;p class=test\u0026gt; test text \u0026lt;/p\u0026gt; 下面是类选择器的使用\n1 2 3 .test { color:pink } ","date":"2021-08-13T21:01:17+08:00","image":"https://blog.linsnow.cn/p/css-select-tool/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-select-tool/","title":"CSS选择器的使用"},{"content":"JavaScript中创建对象以及函数 工厂模式 1 2 3 4 5 6 7 8 9 10 11 12 function creatPeople(XXX,XX){ var people=new Object() //可以类比为加工对象的原材料 people.name=XXX; people.weapon=XX; people.run=function(){ return this.name+\u0026#39;text\u0026#39;+this.weapon } //以上步骤可以类比为加工对象的过程 return people //注意一定要讲创建的对象返回 //可以类比为产品加工完毕出厂的工作 } var test1=creatPeople(\u0026#39;XXX\u0026#39;,\u0026#39;XXX\u0026#39;); var test2=creatPeople(\u0026#39;XXX\u0026#39;,\u0026#39;XXX\u0026#39;); 基本模式 1 2 3 4 5 6 var people1=new Object(); people1.name=\u0026#39;XXX\u0026#39;; people1.weapon=\u0026#39;XXX\u0026#39;; people1.run=function(){ return this.name+\u0026#39;text\u0026#39;+this.weapon } 构造函数模式 1 2 3 4 5 6 7 8 function People(XX,XXX){ this.name=XX; this.weapon=XXX; this.run=function(){ return this.name+\u0026#39;text\u0026#39;+this.weapon } } var Test=new People(\u0026#39;XX\u0026#39;,\u0026#39;XXX\u0026#39;); 函数（function） ⑴函数也是一个对象\n⑵函数中可以封装一些功能（代码），在需要时可以执行这些功能（代码）\n⑶函数中可以保存一些代码在需要的时候调用\n⑷使用typeof检查一个函数对象时，会返回function\n⑸创建函数的三种方式：\n①构造函数\n②函数声明\n③函数表达式\n构造函数 1 var fun = new Function(\u0026#34;console.log(\u0026#39;hello world\u0026#39;);\u0026#34;); 函数声明 1 2 3 4 5 function 函数名（[形参1，形参2. . .形参N]）{ 语句. . . } 函数表达式 1 2 3 var functionName=function([形参1，形参2. . .形参N]){ //函数体 } ","date":"2021-08-13T20:33:59+08:00","image":"https://blog.linsnow.cn/p/js-setup-obj/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-setup-obj/","title":"JavaScript中创建对象以及函数"},{"content":"（七）HTML5与CSS3新增特性 1. HTML5新特性 1.1 HTML5新增语义化标签 \u0026lt;header\u0026gt;：头部标签 \u0026lt;nav\u0026gt;：导航标签 \u0026lt;article\u0026gt;：内容标签 \u0026lt;section\u0026gt;：定义文档某个区域 \u0026lt;asider\u0026gt;：侧边栏标签 \u0026lt;footer\u0026gt;：尾部标签 1.2 HTML5新增多媒体标签 1. 视频 所有浏览器支持 mp4 格式。\nautoplay=\u0026quot;autoplay\u0026quot; controls=\u0026quot;controls\u0026quot; 显示控件 width 设置宽度 height 设置高度 loop=loop 设置循环播放 preload=\u0026quot;auto/none\u0026quot; 是否预加载 src=url 视频地址 poster=url 封面图片 muted=muted 静音播放 2. 音频 所有浏览器支持 mp3 格式。\ncontrols：显示控件 autoplay：（谷歌禁用） loop=loop 设置循环播放 1.3 HTML5 新增 input 类型 type=\u0026quot;email\u0026quot; type=\u0026quot;url\u0026quot; type=\u0026quot;date\u0026quot; type=\u0026quot;time\u0026quot; type=\u0026quot;month\u0026quot; type=\u0026quot;week\u0026quot; type=\u0026quot;number\u0026quot; type=\u0026quot;tel\u0026quot; type=\u0026quot;search\u0026quot; type=\u0026quot;color\u0026quot; 1.4 HTML5新增的表单属性 属性 值 说明 required required 表单拥有该属性表示其内容不能为空，必填 placeholder 提示文本 表单的提示信息 autofocus autofocus 自动聚焦属性，页面加载完成自动聚焦到指定表单 autocomplete off/on 当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项默认已经打开,如autocomplete=\u0026ldquo;on\u0026rdquo;,关闭autocomplete =\u0026ldquo;off\u0026rdquo; 需要放在表单内，同时加上name属性，同时成功提交 multiple multiple 可以多选文件 可以通过以下设置方式修改placeholder里面的字体颜色：\n1 2 3 input::placeholder { color: pink; } 2. CSS3 新特性 2.1 CSS3 新增选择器 CSS3给我们新增了选择器，可以更加便捷，更加自由的选择元素。\n属性选择器 结构伪类选择器 伪元素选择器 2.2 属性选择器 属性选择器可以根据元素特定属性的来选择元素。这样就可以不用借助于类或者id选择器。 |简介| 选择| |-|-| |E[att]|选择具有att属性的E元素| |E[att:val|选择具有att属性且属性值等于val的E元素| |E[att^=val]|匹配具有att属性且值以val开头的E元素| |E[att$=val]|匹配具有att属性且值以val结尾的E元素| |E[att*=val]|匹配具有att属性且值中含有val的E元素|\n1 2 3 4 5 input[type=text] { color: green; } \u0026lt;input type=\u0026#34;password\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt; 类选择器、属性选择器、伪类选择器的权重都为 10\n2.3 结构伪类选择器 结构伪类选择器主要根据文档结构来选择器元素，常用于根据父级选择器里面的子元素。\n选择符 简介 E: first-child 匹配父元素中的第一个子元素E E: last-child 匹配父元素中最后一个E元素 E: nth-child(n) 匹配父元素中的第n个子元素E E: first-of-type 指定类型E的第一个 E: last-of-type 指定类型E的最后一个 E: nth-of-type(n) 指定类型E的第n个 1 2 3 4 5 6 7 8 9 ul li:first-child { background-color: pink; } ul li:last-child { background-color: pink; } ul li:nth-child(5) { background-color: skyblue; } 重点：E: nth-child(key)\nkey 可以是整数、关键字（even/odd）、公式（n/2n/2n+1） 公式 取值 2n 偶数 2n-1 奇数 5n 5 10 15 \u0026hellip; n+ 5 6 7 8 \u0026hellip; -n+5 前五个 关于 nth-of-type 与 nth-of-child\ndiv: nth-child 会把所有的盒子都排列序号 执行的时候首先看 :nth-child(1) 之后回去看 前面 div div: nth-of-type 会把指定元素的盒子排列序号 执行的时候首先看 div指定的元素 之后回去看 :nth-of-type(1) 第几个孩子 区别：\nnth—child对父元素里面所有孩子排序选择（序号是固定的）先找到第n个孩子，然后看看是否和E匹配 nth—of—type对父元素里面指定子元素进行排序选择。先去匹配E ，然后再根据E找第n个孩子 2.4 伪元素选择器 ==伪元素选择器可以帮助我们利用CSS创建新标签元素，而不需要HTML标签，从而简化HTML结构。==\n选择符 简介 ::before 在元素内部的前面插入内容 ::after 在元素内部的后面插入内容 注意：\nbefore 和 after 创建一个元素，但是属于行内元素 新创建的这个元素在文档树中是找不到的，所以我们称为伪元素 语法：element：before{} before 和 after 必须有 content 属性 before 在父元素内容的前面创建元素， after 在父元素内容的后面插入元素 伪元素选择器和标签选择器一样，权重为 1 案例一：伪元素字体图标 1 2 3 4 5 6 7 8 9 div::after { position: absolute; top: 10px; right: 10px; font-family: \u0026#39;icomoon\u0026#39;; content: \u0026#39;\\e91b\u0026#39;; color: red; font-size: 18px; } 案例二：伪元素遮罩层 1 2 3 4 5 6 7 8 9 10 .tudou::before { content: \u0026#39;\u0026#39;; display: none; position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, .3) url(images/arr.png) no-repeat center; } 案例三：伪元素清除浮动 1 2 3 4 5 6 7 .clearfix::after { content: \u0026#39;\u0026#39;; display: block; height: 0; clear: both; visibility: hidden; } 双伪元素清除浮动\n1 2 3 4 5 6 7 8 .clearfix::before, .clearfix::after { content: \u0026#39;\u0026#39;; display: block; } .clearfix::after { clear: both; } 2.5 CSS3盒子模型 CSS3中可以通过 box-sizing 来指定盒模型，有2个值：即可指定为 content-box，border-box ，这样我们计算盒子大小的方式就发生了改变。\n可以分成两种情况：\n==box-sizing：content-box== 盒子大小为 width + padding + border （以前默认的） ==box-sizing: border-box== 盒子大小为width 如果盒子模型我们改为了 box-sizing： border-box ，那padding 和 border就不会撑大盒子了（前提 padding 和 border 不会超过 width 宽度） 2.6 CSS3 的其他特性 1. CSS3 滤镜 filter filter CSS属性将模糊或颜色偏移等图形效果应用于元素。\n1 filter: 函数(); 例如： filter： blur(5px); blur 模糊处理数值越大越模糊\n2. CSS3 calc函数 此 CSS 函数让你在声明CSS属性值时执行一些计算。\n1 2 width: calc(100%-30px); /* 子盒子永远比父盒子小30px */ 括号里面可以使用 + - * / 来进行计算。\n3. CSS3 还有一些 2D、3D效果。。。 2.7 CSS3过渡（重点） 过渡（transition）是CSS3中具有颠覆性的特征之一，我们可以在不使用Flash动画或JavaScript的情况下，当元素从一种样式变换为另一种样式时为元素添加效果。\n过渡动画：是从一个状态渐渐的过渡到另外一个状态 可以让我们页面更好看，更动感十足，虽然低版本浏览器不支持（ie9以下版本）但是不会影响页面布局。\n==我们现在经常和 :hover 一起搭配使用。==\ntransition 的使用 1 transition: 要过渡的属性 花费时间 运动曲线 何时开始; 属性：想要变化的css属性，宽度高度背景颜色内外边距都可以。如果想要所有的属性都变化过渡，写一个all就可以。 花费时间：单位是秒（==必须写单位==）比如 0.5s 运动曲线：默认是ease （可以省略） 何时开始：单位是秒（==必须写单位==）可以设置延迟触发时间默认是Os （可以省略） 1 2 3 4 5 6 7 8 9 10 11 12 div { width: 200px; height: 100px; background-color: pink; /* transition: width .5s, height .5s; */ transition: all .5s; } div:hover { width: 400px; height: 200px; background-color: skyblue; } 3. 2D 转换 转换（transform）是 CSS3 中具有颠覆性的特征之一，可以实现元素的位移、旋转、缩放等效果。\n转换可以理解为变形。\n移动：translate 旋转：rotate 缩放：scale 3.1 二维坐标系 3.2 移动 translate 语法\n1 2 3 transform: translate(x, y); transform: translateX(x); transform: translateY(y); 参数 x, y 可以是百分数，为盒子自身的宽度或高度。 重点\n定义 2D 转换中的移动，沿着X和Y轴移动元素 ==translate 最大的优点：不会影响到其他元素的位置== translate 中的百分比单位是相对于 ==自身元素== 的 trainslate:(50%，50%) 对行内标签没有效果 3.3 让盒子实现水平和垂直居中 1 2 3 4 5 /*子绝父相*/ position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); 3.4 旋转 rotate 值为正数则顺时针旋转，为负数则逆时针旋转。\n1 transform: rotate(45deg); 3.5 2D 转换中心点 transform-origin 我们可以通过设置 transform-origin 设置元素转换的中心点。\n1. 语法 1 transform-origin: x y; 2. 重点 注意后面的参数 x 和 y 用空格隔开 x y 默认转换的中心点是元素的中心点（50% 50%） 还可以给 x y 设置像素或者方位名词（top bottom left right center） 3.6 2D 转换之缩放 scale 1 transform: scale(x, y); x, y 不跟单位的话，是指缩放的倍数。\n1 transform: scale(2,1); 参数大于 1 则放大，小于 1 则缩小。\n可以配合 transform-origin 使用，改变缩放中心。\n1 scale 的优势：\n不占空间 3.7 2D转换综合写法 注意：\n同时使用多个转换，其格式为： transform: translate(), rotate() scale() 其顺序会影转换的效果。（先旋转会改变坐标轴方向） 当我们同时有位移和其他属性的时候，记得要将位移放到最前. 4. 动画 动画( animation ) 是 CSS3 中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画，常用来实现复杂的动画效果。 相比较过渡，动画可以实现更多变化，更多控制，连续自动播放等效果。\n4.1 动画的基本使用空格隔开 分为两步：\n定义动画 (动画序列 %α) 使用动画 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 /* 1. 定义动画 */ @keyframes move { /*开始状态*/ 0% { transform: translateX(0px); } /*结束状态*/ 100% { transform: translateX(1000px); } } div { width: 200px; height: 200px; background-color: pink; /* 2. 调用动画 */ /* 动画名称 */ animation-name: move; /* 持续时间 */ animation-duration: 5s; } 动画序列\n0% 是动画的开始，100% 是动画的完成。这样的规则就是动画序列。 在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。 动画是使元素从一种样式逐渐变化为另一种样式的效果。您可以改变任意多的样式任意多的次数。 请用百分比来规定变化发生的时间，或用关键词\u0026quot;from\u0026quot;和“to”，等同于0%和100%。 注意:\n可以做多个状态的变化 keyframes 关键帧 百分比必须是整数 百分比是总时间 animation-duration 的划分 4.2 动画常用属性 属性 描述 keyframes 规定动画。 animation 所有动画属性的简写属性,除了animation-play-state属性。 animation-name 规定@keyframes动画的名称。(必须的) animation-duration 规定动画完成一个周期所花费的秒或毫秒，默认是0。（必须的) animation-timing-function 规定动画的速度曲线，默认是“ease” . animation-delay 规定动画何时开始，默认是0. animation-iteration-count 规定动画被播放的次数，默认是1，还有infinite animation-direction 规定动画是否在下一周期逆向播放，默认是 \u0026ldquo;normal\u0026rdquo;,alternate逆播放 animation-play-state 规定动画是否正在运行或暂停。默认是\u0026quot;running\u0026quot;,还有\u0026quot;paused\u0026quot;. animation-fill-mode 规定动画结束后状态,保持forwards回到起始backwards 4.3 动画简写属性 1 2 animation: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态; animation: myfirst 5s linear 2s infinite alternate; 简写属性里面不包含 animation-play-state 暂停动画: animation-play-state: puased; 经常和鼠标经过等其他配合使用想要动画走回来，而不是直接跳回来: animation-direction: alternate 盒子动画结束后，停在结束位置: animation-fill-mode: forwards 5. 浏览器私有属性 浏览器私有前缀是为了兼容老版本的写法，比较新版本的浏览器无须添加。\n私有前缀\n-moz-: 代表firefox浏览器私有属性 -ms-: 代表ie浏览器私有属性 -webkit-: 代表safari、chrome私有属性-o-∶代表Opera私有属性 提倡的写法\n1 2 3 4 -moz-border-radius: 10px; -webkit-border-radius: 10px; -o-border-radius: 10px; border-radius: 10px; 6. CSS3 新特性 ","date":"2021-07-28T18:16:58+08:00","image":"https://blog.linsnow.cn/p/html5-css3-new/h5c3_hue30071de55586ef5eb5e4bed5ee49e83_61786_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html5-css3-new/","title":"HTML5和CSS3新增特性"},{"content":"（十二） 复杂类型 1. 简单类型与复杂类型 简单类型又叫做基本数据类型或者值类型，复杂类型又叫做引用类型。\n值类型：简单数据/基本数据类型，在存储时变量中存的是值本身，因此叫做值类型。例如 string, number, boolean, undefined, null 引用类型：复杂数据类型，在存储时变量中存储的仅仅是地址（引用），因此叫做引用数据类型。通过 new 关键字创建的对象（系统对象、自定义对象），如 Object、Date 等。 2. 堆和栈 堆栈空间分配区别︰\n栈（操作系统）：由操作系统自动分配释放存放函数的参数值、局部变量的值等。其操作方式类似于数据结构中的栈； ==简单数据类型存放到栈里面==\n堆（操作系统）︰存储复杂类型(对象)，一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。 ==复杂数据类型存放到堆里面==\n简单数据类型 null 返回的是一个空对象：Object。若有一个变量打算存储为对象但是没想好放什么，就可以给 null 值。 简单数据类型是存放在栈里面，直接开辟空间存放值。 复杂数据类型，首先在栈里面存放地址（十六进制），然后在堆里面存放值。 3. 简单数据类型传参 函数的形参也可以看做是一个变量，当我们把一个值类型变量作为参数传给函数的形参时，其实是把变量在栈空间里的值复制了一份给形参，那么在方法内部对形参做任何修改，都不会影响到的外部变量。\n4. 复杂数据类型传参 函数的形参也可以看做是一个变量，当我们把引用类型变量传给形参时，其实是把变量在栈空间里保存的堆地址复制给了形参，形参和实参其实保存的是同一个堆地址，所以操作的是同一个对象。\n","date":"2021-06-28T19:26:20+08:00","image":"https://blog.linsnow.cn/p/js-twelve/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-twelve/","title":"（十二）JavaScript复杂类型"},{"content":"（十一）内置对象 1. 内置对象 Javascript中的对象分为3种：自定义对象、内置对象、浏览器对象 前面两种对象是IS基础内容，属于ECMAScript ；第三个浏览器对象属于我们JS独有的，我们JS APl讲解 内置对象就是指JS语言自带的一些对象，这些对象供开发者使用，并提供了一些常用的或是最基本而必要的功能（属性和方法） 2. 数学对象 Math 2.1 Math 的使用 查询 MDN 文档\n1 2 3 4 const arr = [3,4,11,24,89,2,34] console.log(Math.max(...arr)); // 89 console.log(Math.PI); // 3.141592653589793 console.log(Math.max()); // -Infinity 2.1 自定义自己的 Math 对象 我们可以自定义自己的对象。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const myMath = { PI: 3.141592654, max: function () { let max = arguments[0]; for (let i = 1; i \u0026lt; arguments.length; i++) { max = arguments[i] \u0026gt; max ? arguments[i] : max; } return max; }, min: function () { let min = arguments[0]; for (let i = 1; i \u0026lt; arguments.length; i++) { min = arguments[i] \u0026lt; min ? arguments[i] : min; } return min; } } 2.3 Math 常用方法 1 2 3 4 5 6 7 Math.PI // 圆周率 Math.floor() // 向下取整 Math.ceil() // 向上取整 Math.round() // 四舍五入，遇到 .5 往大了取 Math.abs() // 绝对值 Math.max() // 最大值 Math.min() // 最小值 1 2 3 4 5 console.log(Math.abs(\u0026#39;-1\u0026#39;)); // 1 console.log(Math.floor(-2.5)); // 3 console.log(Math.ceil(-2.5)); // -2 console.log(Math.round(-3.5)); // -3 console.log(Math.round(3.5)); // 4 2.4 Math.random 随机数 Math.random 方法返回一个位于区间 [0, 1) 的伪随机浮点数。\n1 Math.random(); // 0.41713485547506424 获取闭区间 [a, b] 之间的整数：\n1 let ran = parseInt(Math.random() * (b - a + 1)) + a; 获取前闭后开区间 [a, b) 之间的整数：\n1 let ran = parseInt(Math.random() * (b - a)) + a; 实例：定义自己的取整函数\n1 2 3 4 5 6 7 8 9 // [a, b) function getRandom1(a, b) { return parseInt(Math.random() * (b -a)) + a; } // [a, b] function getRandom2(a, b) { return parseInt(Math.random() * (b - a + 1)) + a; } 应用：随机点名\n1 2 let names = new Array(\u0026#39;Peter\u0026#39;, \u0026#39;Murphy\u0026#39;, \u0026#39;Jack\u0026#39;, \u0026#39;Darcy\u0026#39;, \u0026#39;Alice\u0026#39;); console.log(names[getRandom2(0, names.length-1)]); 3. 日期对象 Date 3.1 时间格式化 Date 对象是一个构造函数，需要使用 new 来创建日期对象（实例化）。\n若没有参数，则默认返回当前系统的当前时间\n1 2 let date = new Date(); console.log(date); 若有参数，则返回参数里面的时间。 参数常用写法\n1 2 3 4 5 6 7 8 9 let date = new Date(); console.log(date); // 2021-03-15T05:39:52.204Z let date1 = new Date(2019, 10, 1); console.log(date1); // 2019-10-31T16:00:00.000Z let date2 = new Date(\u0026#39;2019-10-1 8:8:8\u0026#39;); console.log(date2); // 2019-10-01T00:08:08.000Z 一般使用以下参数形式\n1 2 let date3 = new Date(\u0026#39;2019-10-1 10:10:10\u0026#39;); let date4 = new Date(\u0026#39;2019/10/1\u0026#39;); 常用返回日期格式：\n1 2 3 4 5 let date = new Date(); console.log(date.getFullYear()); // 2021 console.log(date.getMonth() + 1); // 3，注意得到的月份要加 1 console.log(date.getDate()); // 15 console.log(date.getDay()); // 1 实例一：返回 今天是 2021 年 3 月 15 日 周一 的日期格式。\n1 2 3 4 5 6 let year = date.getFullYear(); let month = date.getMonth() + 1; let dates = date.getDate(); let day = date.getDay(); let days = [\u0026#39;日\u0026#39;, \u0026#39;一\u0026#39;, \u0026#39;二\u0026#39;, \u0026#39;三\u0026#39;, \u0026#39;四\u0026#39;, \u0026#39;五\u0026#39;, \u0026#39;六\u0026#39;] console.log(`今天是 ${year} 年 ${month} 月 ${dates} 日 周${days[day]}`); 实例二：输出时分秒 15:06:09 格式化时间串。\n1 2 3 4 5 6 7 8 9 10 11 function getTime() { let time = new Date(); let h, m, s; [h, m, s] = [time.getHours(), time.getMinutes(), time.getSeconds()] function check(t) { return t \u0026lt; 10 ? \u0026#39;0\u0026#39; + t : t; } [h, m, s] = [check(h), check(m), check(s)]; return `${h}:${m}:${s}`; } console.log(getTime()); 3.2 时间戳（获取1971年1月1日至今过去的毫秒数） 1 2 3 4 5 6 7 8 9 10 11 12 // 1. valueOf(), getTime() let date = new Date(); console.log(date.valueOf()); console.log(date.getTime()); // 2. 推荐写法 let date1 = +new Date(); console.log(date1); // 3. H5新增写法 let date2 = Date.now(); console.log(date2); 4. 字符串对象 4.1 基本包装类型 对象才有属性和方法 复杂数据类型才有属性和方法 那么为什么简单数据类型 'aaa' 有 length 属性呢？ 基本包装类型：把简单数据类型包装成复杂数据类型，这样基本数据类型也有了属性和方法 1 2 3 4 5 // 1. 简单数据类型包装成复杂数据类型 let temp = new String(\u0026#39;aaa\u0026#39;); // 2. 把临时变量赋值给 str str = temp; // 3. 销毁临时变量 三种基本包装类型： String、Number、Boolean 4.2 字符串的不可变 指的是其值不变。虽然看上去是可以改变的，但其实是地址变了，内存中开辟了一个内存空间。\n4.3 根据字符串返回位置 语法 从 start 索引开始查找 c 。\n1 str.indexOf(\u0026#39;c\u0026#39;, start) 4.4 根据位置返回字符 charAt()\n1 str.charAt(index); charCodeAt() 返回该位置的字符的 ASCII 值。一般用于判断用户按下了哪个键。\n1 str.charCodeAt(i) str[index] H5 新增写法。\n1 str[i]; 4.5 拼接以及截取字符串 字符长拼接\n1 str.concat(str1, str2, str3, ...) 获取子串，[start, start+length]\n1 str.substr(start, length) 切片，前闭后开：[start, end)\n1 str.slice(start, end) 获取子串，前闭后开：[start, end)\n1 str.substring(start, end) 4.6 替换、转换为数组 替换 replace，只换一次。\n1 str.replace(\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;); 转换为数组 split()\n1 2 3 4 5 6 let str1 = \u0026#39;red pink blue\u0026#39;; console.log(str1.split(\u0026#39; \u0026#39;)) // [ \u0026#39;red\u0026#39;, \u0026#39;pink\u0026#39;, \u0026#39;blue\u0026#39; ] let str2 = \u0026#39;red\u0026amp;pink\u0026amp;blue\u0026#39;; console.log(str2.split(\u0026#39;\u0026amp;\u0026#39;)) // [ \u0026#39;red\u0026#39;, \u0026#39;pink\u0026#39;, \u0026#39;blue\u0026#39; ] 4.7 查找某个字符出现的位置和次数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // 查找某个字符出现的位置和次数 function findLocation(str, char) { let res = { loc: [], count: 0 }; for (let i = 0; i \u0026lt; str.length; i++) { if (str[i] === char) { res.loc.push(i); res.count++; } } return res; } let ans = findLocation(\u0026#34;abcaaadef\u0026#34;, \u0026#34;a\u0026#34;); console.log(ans.count, ans.loc); // 4 [ 0, 3, 4, 5 ] 4.8 统计出现次数最多的字符 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 function findMost(str) { let res = {}; for (const i in str) { if (str[i] in res) { res[str[i]]++; } else { res[str[i]] = 1; } } let temp = -Infinity; let ans; for (const k in res) { if (res[k] \u0026gt; temp) { temp = res[k]; ans = k; } } return [ans, temp]; }; console.log(findMost(\u0026#34;abbcaaa\u0026#34;)); // [ \u0026#39;a\u0026#39;, 4 ] ","date":"2021-06-28T19:26:04+08:00","image":"https://blog.linsnow.cn/p/js-eleven/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-eleven/","title":"（十一）JavaScript内置对象"},{"content":"（十）对象 1. 对象 1.1 什么是对象？ 在JavaScript中，对象是一组无序的相关属性和方法的集合，所有的事物都是对象，例如字符串、数值、数组、函数等。\n对象是由属性和方法组成的。\n属性：事物的特征，在对象中用属性来表示（常用名词） 方法：事物的行为，在对象中用方法来表示（常用动词） 1.2 为什么需要对象？ 2. 创建对象 使用字面量创建对象 使用 new Object 创建对象 利用构造函数创建对象 2.1 字面量创建 使用 {} 创建，包含属性和方法，采用键值对表示，创建的对象称为对象字面量。\n1 2 3 4 5 6 7 var obj = { uname: \u0026#39;MurphyChen\u0026#39;, age: 18, sayHi: function () { console.log(\u0026#39;Hi!); } } 2.2 使用对象的属性和方法 调用对象的属性 1 2 3 4 // 方法一 objectName.attrName // 方法二 objectName[\u0026#39;attrName\u0026#39;] // 不要忘记引号 调用对象的方法 1 objectName.funcName();//不要忘记括号 2.3 使用 newObject 创建对象 1 2 3 4 5 6 7 8 // 创建空对象 let obj = new Object(); //添加属性 obj.uname = \u0026#39;MurphyChen\u0026#39;; obj.age = 18; obj.sayHi = function() { console.log(\u0026#39;Hi!\u0026#39;); } 2.4 利用构造函数创建对象 前两种创建对象的方法，每次都只能创建一个对象。但需要多个具有相同属性和方法的对象的时候，就需要使用构造函数来创建。\n构造函数将相同的属性和方法封装在一个函数里。\n构造函数语法：\n1 2 3 4 5 6 7 // 定义 function ConFuncName(params) { this.attr = value; this.methods = function() {}; } // 调用 let obj = new ConFuncName(params); 构造函数名单词首字母均大写 函数不需要返回值 举例\n1 2 3 4 5 6 7 8 9 10 function Star(uname, age, sex) { this.name = uname; this.age = age; this.sex = sex; } let ldh = new Star(\u0026#39;刘德华\u0026#39;, 18, \u0026#39;男\u0026#39;); let zxy = new Star(\u0026#39;张学友\u0026#39;, 19, \u0026#39;男\u0026#39;); console.log(typeof ldh); // object console.log(ldh.sex); // 男 console.log(zxy.name); // 张学友 构造函数的实质 ==构造函数相当于创建了一个抽象的类==，使用关键字 new 创建一个对象的过程称为类的实例化，对象是具体的。\nnew 关键字的执行过程 在内存中创建一个空的对象； this 指向这个空对象； 执行构造函数里面的代码，给空对象添加属性和方法； 返回此对象。 3. 遍历对象 for...in 可以对数组和对象进行遍历。\n语法\n1 2 3 4 for (const key in obj) { console.log(key); // 遍历属性名 console.log(obj[key]); // 遍历属性值 } ","date":"2021-06-28T19:25:50+08:00","image":"https://blog.linsnow.cn/p/js-ten/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-ten/","title":"（十）JavaScript对象"},{"content":"（九）JavaScript声明提升 我们js引擎运行js分为两步： 预解析，代码执行 预解析js引擎会把js里面所有的var 还有function提升到当前作用域的最前面 代码执行 按照代码书写的顺序从上往下执行 预解析分为变量预解析（变量提升） 和函数预解析（函数提升） 变量提升就是把所有的变量声明提升到当前的作用域最前面 不提升赋值操作 函数提升就是把所有的函数声明提升到当前的作用域最前面，不调用操作 举例一\n1 2 3 4 5 6 7 8 9 10 func(); var func = function () { console.log(\u0026#39;hello\u0026#39;); } // 出错，以上代码相当于： var func; func(); func = function () { console.log(\u0026#39;hello\u0026#39;); } 举例二\n1 2 3 4 5 6 7 8 9 10 f1() console.log(c); console.log(b); console.log(a); function f1() { var a = b = c = 9; console.log(a); console.log(b); console.log(c); } 相当于\n1 2 3 4 5 6 7 8 9 10 11 12 13 function f1() { var a; c = 9; b = c; a = b; console.log(a); console.log(b); console.log(c); } f1(); console.log(c); console.log(b); console.log(a); 输出\n1 2 3 4 5 6 7 8 9 // answer /* 9 9 9 9 9 error */ ","date":"2021-06-28T19:25:26+08:00","image":"https://blog.linsnow.cn/p/js-nine/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-nine/","title":"（九）JavaScript声明提升"},{"content":"（八）JavaScript作用域 1. 作用域概述 通常来说，一段程序代码中所用到的名字并不总是有效和可用的，而限定这个名字的可用性的代码范围就是这个名字的作用域。作用域的使用提高 程序逻辑的局部性，增强了程序的可靠性，减少了名字冲突。\n2. 全局变量 在全局作用域下声明的变量叫做全局变量（在函数外部定义的变量）。 全局变量在代码的任何位置都可以使用 在全局作用域下var声明的变量是全局变量。 特殊情况下，在函数内不使用var声明的变量也是全局变量（不建议使用） 3. 局部变量 在局部作用域下声明的变量叫做局部变量（在函数内部定义的变量）\n局部变量只能在该函数内部使用 在函数内部var声明的变量是局部变量 函数的形参实际上就是局部变量 4. 全局变量与局部变量区别 全局变量：在任何一个地方都可以使用，只有在浏览器关闭时才会被销毁，因此比较占内存 局部变量：只在函数内部使用，当其所在的代码块被执行时，会被初始化；当代码块运行结束后，就会被销毁，因此更节省内存空间 5. var、let、const ES6 以前，JS 没有块级作用域。ES6 新增 let 和 const 之后才有了块级作用域。 块级作用域是指用 {} 包括起来的一段代码，例如 if 、while 等等。 函数作用域就是指变量只在函数内部起作用。\nvar 声明的是函数作用域的变量 let 声明的是块级作用域的变量 const 声明的是块级作用域的变量 6. 作用域链 只要是代码，就至少有一个作用域 写在函数内部的局部作用域 如果函数中还有函数，那么在这个作用域中就又可以诞生一个作用域 根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能被内部函数访问，就称作作用域链 ","date":"2021-06-28T19:25:09+08:00","image":"https://blog.linsnow.cn/p/js-eight/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-eight/","title":"（八）JavaScript作用域"},{"content":"（七）数组 1. 基本概念 JS 数组都是动态创建的，可以自由增加数组长度，这点不同于 C/C++。 一个 JS 数组内可以存放不同类型的元素，例如 ['abc', 1, true, undefined]，这点也不同于 C/C++/Java。 2. 创建数组 2.1 数组字面量创建数组 创建空数组\n1 let arr = []; 创建一般数组\n1 let arr = [1, 2, 3]; 2.2 new Array 创建数组对象 创建空数组\n1 let arr = new Array(); 创建指定长度的数组，有2个空数组元素\n1 let arr1 = new Array(2); 创建放有指定元素的数组（[2, 3]）\n1 let arr2 = new Array(2, 3); 一些示例\n1 2 3 4 5 6 let arr_0 = [1, true, \u0026#34;aaa\u0026#34;]; let arr_1 = []; let arr_2 = new Array(); // [] let arr_3 = new Array(2); // [empty × 2] let arr_4 = new Array(2,); // [empty × 2] let arr_5 = new Array(2, 3, 4); // [2, 3, 4] 3. 基本操作 数组元素访问\n1 let e = arr[index]; 获取数组长度\n1 let len = arr.length; 数组遍历\n方式一：\n1 2 3 for (let i = 0; i \u0026lt; arr.length; i++) { console.log(arr[i]); } 方式二：\n1 2 3 for (const i in arr) { console.log(arr[i]); } 数组逆转\n1 2 3 4 5 6 7 8 9 // 反转数组 function reverse(arr) { let res = []; for (let i = arr.length - 1; i \u0026gt;= 0; i--) { res[res.length] = arr[i]; } return res; } console.log(reverse([1, 2, 3, 4, 0])); // [0, 4, 3, 2, 1] 4. 检测一个值是否为数组 4.1 instanceof 1 2 3 4 5 6 function isArray(test) { if (test instanceof Array) return true; return false; } console.log(isArray([1, 2])); // true console.log(isArray(1)); // false 4.2 Array.isArray() Array.isArray() 方法用于检测一个值是否为数组。\n5. 添加删除数组元素的方法 方法名 说明 返回值 push(arg1,...) 末尾添加一个或多个元素 返回新的长度 pop() 删除数组最后一个元素，数组长度减 1，无参数，修改了原数组 返回所删除元素的值 unshift() 向数组的开头添加一个或多个元素，修改了原数组 返回新的长度 shift() 删除数组的第一个元素，数组长度减 1，无参数，修改了原数组 返回第一个元素的值 6. 数组排序 方法名 说明 是否修改原数组 reverse() 颠倒数组中元素顺序，无参数 会改变原数组，返回新数组 sort() 对数组的元素进行排序 会改变原数组，返回新数组 sort 方法对数组进行原地排序，但是默认按照字典序排序。需要传入一个比较函数 cmp(a, b)，然后得到我们需要的排序效果。\n1 2 3 4 5 6 7 8 9 let arr = [1, 4, 17, 12, 9]; arr.sort(); console.log(arr); // [ 1, 12, 17, 4, 9 ] let cmp = (a, b) =\u0026gt; a - b; arr.sort(cmp); console.log(arr); // [ 1, 4, 9, 12, 17 ] 其中，let cmp = (a, b) =\u0026gt; a - b; 为升序，b - a 为降序。\n7. 数组索引方法 方法名 说明 返回值 indexOf() 数组中查找指定元素的 第一个索引 若存在则返回索引号，否则返回 -1 latsIndexOf() 查找指定元素在数组中的 最后一个的索引 若存在则返回索引号，否则返回 -1 indexOf 前面开始查找，lastIndexOf 从后面开始查找，但索引都是从前往后由 0 算起。\n1 2 3 4 5 let arr = [\u0026#39;red\u0026#39;, \u0026#39;green\u0026#39;, \u0026#39;blue\u0026#39;, \u0026#39;pink\u0026#39;, \u0026#39;blue\u0026#39;]; console.log(arr.indexOf(\u0026#39;blue\u0026#39;)); // 2 console.log(arr.lastIndexOf(\u0026#39;blue\u0026#39;)); // 4 console.log(arr.indexOf(\u0026#39;yellow\u0026#39;)); // -1 8. 数组去重 1 2 3 4 5 6 7 8 9 10 11 12 // 数组去重 function unique(arr) { let res = []; for (let i = 0; i \u0026lt; arr.length; i++) { if (res.indexOf(arr[i]) === -1) { res.push(arr[i]); } } return res; } console.log(unique([ 2, 3, 3, 4, 5, 5 ])); // [ 2, 3, 4, 5 ] 9. 数组与字符串互转 9.1 数组转换为字符串 方法名 说明 返回值 是否改变原数组 toString() 将数组转换成字符串，逗号分隔每一个 返回一个字符串 不改变 join('分隔符') 把数组中的所有元素转换为一个字符串，以指定符号分割 返回一个字符串 不改变 示例\n1 2 3 4 5 6 let a = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39;]; console.log(a.toString()); // a,b,c,d,e console.log(a.join(\u0026#39;\u0026#39;)); // abcde console.log(a.join(\u0026#39;-\u0026#39;)); // a-b-c-d-e console.log(a); // [ \u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, \u0026#39;d\u0026#39;, \u0026#39;e\u0026#39; ] 9.2 字符串转换为数组 使用 split() 方法。\n1 2 3 let str = \u0026#39;blue-green-pink-red\u0026#39;; let res = str.split(\u0026#39;-\u0026#39;); console.log(res); // [ \u0026#39;blue\u0026#39;, \u0026#39;green\u0026#39;, \u0026#39;pink\u0026#39;, \u0026#39;red\u0026#39; ] ","date":"2021-06-28T19:24:54+08:00","image":"https://blog.linsnow.cn/p/js-seven/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-seven/","title":"（七）JavaScript数组"},{"content":"（六）函数 1. 概述 函数：就是封装了一段可被重复调用执行的代码块。通过此代码块可以实现大量代码的重复使用。 封装：把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。\n2. 函数的声明与调用 1 2 3 4 5 6 // 声明 function funcName(params) { // function statements } funcName(params); // 调用 3. 形参与实参 声明时传入的为形参，调用时传入的为实参。\n4. 实参个数与形参个数不匹配的情况 参数个数 说明 形参和实参个数相等 输出正确结果 实参个数多于形参 只取到形参的个数 实参个数少于形参 多的形参定义为undefined，结果为NaN 1 2 3 4 5 6 function sum(num1, num2) { console.log(num1 + num2); } sum(100, 200); // 300, 形参和实参个数相等，输出正确结果 sum(100, 400, 500, 700); // 500, 实参个数多于形参，只取到形参的个数 sum(200); // NaN, 实参个数少于形参，多的形参定义为undefined，结果为NaN 在JavaScript中，形参的默认值是 undefined。\n5. 声明函数的三种方法 5.1 function 命令 1 2 3 function funcName(params) { // function statements } 5.2 函数表达式 1 2 3 const funcName = function(params) { // function statements } 5.3 箭头函数 =\u0026gt; 创建一个函数更加简洁的方式，有两种方式：\n不带花括号：(...args) =\u0026gt; expression，计算表达式，直接返回。 带花括号：(...args) =\u0026gt; { bodu }，可以编写多行多个语句，需要 return 语句返回。 1 let sum = (a, b) =\u0026gt; a + b; 5.4 Function 构造函数 1 2 3 4 5 const add = new Function( \u0026#39;x\u0026#39;, \u0026#39;y\u0026#39;, return \u0026#39;x + y\u0026#39; ); 6. 注意 函数未指定返回值则默认返回 undefined 7. arguments 的使用 arguments 是所有JS函数内置的对象，但也只有函数具有。\n1 2 3 4 function test() { return arguments; } console.log(test(1,2,3,4)); 输出：\n1 Arguments(4) [1, 2, 3, 4, callee: ƒ, Symbol(Symbol.iterator): ƒ] 函数的 arguments 是一种伪数组：\n具有数组的 length 属性 按照索引方式进行存储 没有真正数组的一些方法 pop()、push() ","date":"2021-06-28T19:24:15+08:00","image":"https://blog.linsnow.cn/p/js-six/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-six/","title":"（六）JavaScript函数"},{"content":"（五）流程控制 顺序结构 选择分支结构 循环结构 1. 顺序结构 2. 选择结构 if-else if-else if-else switch-case 2.1 if-else 语法\n1 2 3 4 if (condition) statement1 [else statement2] 2.2 if-else if-else 语法\n1 2 3 4 5 6 7 8 9 if (condition1) statement1 else if (condition2) statement2 else if (condition3) statement3 ... else statementN 2.3 switch-case 语法\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 switch (expression) { case value1: //Statements executed when the //result of expression matches value1 [break;] case value2: //Statements executed when the //result of expression matches value2 [break;] ... case valueN: //Statements executed when the //result of expression matches valueN [break;] [default: //Statements executed when none of //the values match the value of the expression [break;]] } 3. 循环 3.1 概述 for while do...while label for...in for...of 3.2 for 循环 语法\n1 2 for ([initExpr]; [condExpr]; [incExpr]) statement initExpr: 变量初始化 condExpr: 循环条件 incExpr：增量表达式 例子\n1 2 3 4 for (let step = 0; step \u0026lt; 5; step++) { // Runs 5 times, with values of step 0 through 4. console.log(\u0026#39;Walking east one step\u0026#39;); } 3.3 while 循环 语法\n1 2 while (condition) statement 例子\n1 2 3 4 5 6 let n = 0; let x = 0; while (n \u0026lt; 3) { n++; x += n; } 3.4 do\u0026hellip;while 语法\n1 2 3 do statement while (condition); 例子\n1 2 3 4 let n = 5 do { console.log(\u0026#39;hello\u0026#39;); } while (--n) 3.5 label 语法：\n1 2 label: statement label: 任何不属于保留关键字的 JavaScript 标识符。 statement: JS 语句。 说明：\n可使用一个标签来唯一标记一个循环，然后使用 break 或 continue 语句来指示程序是否中断循环或继续执行。\n需要注意的是，JavaScript 没有 goto 语句，==标记只能和 break 或 continue 一起使用。==\n在严格模式中，你不能使用 “let” 作为标签名称。它会抛出一个 SyntaxError（因为 let 是一个保留的标识符）。\n例子：\n1 2 3 4 5 6 7 8 9 var str = \u0026#39;\u0026#39; aLoop: for (let i = 0; i \u0026lt; 5; i++) { if (i == 2) { continue aLoop; } str += i; } console.log(str); // 0134 3.6 break 与 continue break：跳出当前循环，不再进行当前循环。 continue：跳过本轮循环，进行当前循环的下一轮。 break 与 continue 均可配合 label 语句使用来跳转循环。 3.7 for\u0026hellip;in 语法：\n1 2 3 for (variable in object) { //statements } 说明：\nfor...in 语句用于对数组或者对象的属性进行循环操作。\nfor ... in 循环中的代码每执行一次，就会对数组的元素或者对象的属性进行一次操作。\n1 2 3 4 var arr = new Array(1,2,3,4,5); for (let i in arr) { console.log(i+\u0026#39;.\u0026#39;); } 3.8 for\u0026hellip;of 语法：\n1 2 3 for (variable of iterable) { //statements } 例子：\n1 2 3 4 5 let iterable = [10, 20, 30]; for (let value of iterable) { value += 1; console.log(value); } 4. chrome 代码调试 断点调试：断点调试是指自己在程序的某一行设置一个断点，调试时，程序运行到这一行就会停住，然后你可以一步一步往下调试，调试过程中可以看各个变量当前的值，出错的话，调试到出错的代码行即显示错误，停下。 断点调试可以帮我们观察程序的运行过程 浏览器中按F12\u0026ndash;\u0026gt; sources \u0026ndash;\u0026gt;找到需要调试的文件\u0026ndash;\u0026gt;在程序的某一行设置断点 Watch: 监视，通过watch可以监视变量的值的变化，非常的常用。 F11: 程序单步执行，让程序一行一行的执行，这个时候，观察watch中变量的值的变化。 代码调试的能力非常重要，只有学会了代码调试，才能学会自己解决bug的能力。初学者不要觉得调试代码麻烦就不去调试， 知识点花点功夫肯定学的会，但是代码调试这个东西，自己不去练，永远都学不会。 今天学的代码调试非常的简单，只要求同学们记住代码调试的这几个按钮的作用即可，后面还会学到很多的代码调试技巧。 ","date":"2021-06-28T19:24:00+08:00","image":"https://blog.linsnow.cn/p/js-five/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-five/","title":"（五）JavaScript流程控制"},{"content":"（四）JS 运算符 运算符（ operator ）也被称为操作符，是用于实现赋值、比较和执行算数运算等功能的符号。 JavaScript常用的运算符有：\n算术运算符 递增和递减运算符 比较运算符 逻辑运算符 赋值运算符 1. 算数运算符 + - * / % 1.1 浮点数的精度问题 浮点数值的最高精度是17位小数，但在进行算术计算时其精确度远远不如整数。\n1 2 var result =0.1+0.2; //结果不是0.3,而是: 0.30000000000000004 console.log(0.07 * 100); //结果不是7， 而是： 7.000000000000001 注意：\nJS 中不要直接用浮点数之间进行运算，会产生精度误差。 不要直接拿两个浮点数进行比较！ 1.2 表达式和返回值 表达式：是由数字、运算符、变量等以能求得数值的有意义排列方法所得的组合 简单理解：是由数字、运算符、变量等组成的式子\n==表达式最终都会有一个结果，返回给我们，我们成为返回值==\n2. 递增递减运算符 2.1 递增和递减运算符概述 如果需要反复给数字变量添加或减去1，可以使用递增（++）和递减（\u0026ndash; ）运算符来完成。 在JavaScript 中，递增（++）和递减（\u0026ndash; ）既可以放在变量前面，也可以放在变量后面。放在变量前面时，\n我们可以称为前置递增（递减）运算符，放在变量后面时，我们可以称为后置递增（递减）运算符。\n注意：递增和递减运算符必须和变量配合使用。\n后置递增运算符 i++ 前置递增运算符 ++i 后置递减运算符 i-- 前置递减运算符 --i 2.2 前置递增和后置递增小结 前置递增和后置递增运算符可以简化代码的编写，让变量的值+ 1 比以前写法更简单 单独使用时，运行结果相同 与其他代码联用时，执行结果会不同 后置：先原值运算，后自加（先人后己） 前置：先自加，后运算（先已后人） 开发时，大多使用后置递增/减，并且代码独占一行，例如：num++; 或者num\u0026ndash;; 3. 比较运算符 3.1 概述 概念：比较运算符（关系运算符）是两个数据进行比较时所使用的运算符，比较运算后，会返回一个布尔值 （true / false）作为比较运算的结果。\n比较运算符 说明 \u0026lt; 小于 \u0026gt; 大于 \u0026lt;= 大于或等于 \u0026gt;= 小于或等于 == 判等于 != 判不等 === 全等于。要求值和数据类型均一致，则返回 true !== 全不等于。要求值和数据类型至少一个不一致，则返回 true 3.2 关于 == 与 === 3.2.1. 区别 需要注意的是 == 和 === 的区别。\n== 比较的时候只判断值，因为会进行隐式转换。值相等则返回 true === 比较判断的时同时需要值相等和类型相同，两者均满足则返回 true 3.2.2 规律 结合以下例子体会。\n''、0、false 之间（或 '1'、1、true之间）进行 == 比较的结果为 true NaN 与其他任何数据类型之间 == 比较结果为 false null 只有在和自身以及 undefined 之间 == 比较时结果为 true undefined 只有在和自身以及 null 之间 == 比较时结果为 true 数字和数字字符串的值相等，则 == 比较的结果为 true 以上这些例子在全等比较 === 下的结果均为 false 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 console.log(\u0026#39;18\u0026#39; == 18); // true console.log(\u0026#39;\u0026#39; == false); // truw console.log(\u0026#39;\u0026#39; == 0); // truw console.log(0 == false); // true console.log(\u0026#39;1\u0026#39; == 1 == true); // true console.log(\u0026#39;NaN与其他值比较:\u0026#39;); console.log(NaN == 0); // false console.log(NaN == \u0026#39;\u0026#39;); // false console.log(NaN == NaN); // false console.log(NaN == null); // false console.log(NaN == false); // false console.log(NaN == undefined); // false console.log(\u0026#39;null与其他值：\u0026#39;); console.log(null == null); // true console.log(null == undefined); // true console.log(null == 0); // false console.log(null == \u0026#39;\u0026#39;); // false console.log(null == NaN); // false console.log(null == false); // false console.log(\u0026#39;undefined与其他值比较:\u0026#39;); console.log(undefined == null); // true console.log(undefined == undefined); // true console.log(undefined == 0); // false console.log(undefined == \u0026#39;\u0026#39;); // false console.log(undefined == NaN); // false console.log(undefined == false); // false 4. 逻辑运算符 4.1 概述 逻辑与 \u0026amp;\u0026amp; 逻辑或 || 逻辑非 ! 4.2 逻辑中断（短路操作） 原理：多个表达式进行逻辑运算，当左边的表达式值可以确定最终结果时，不再继续运算右边其余的表达式。\n4.2.1 逻辑与 \u0026amp;\u0026amp; 语法：expr1 \u0026amp;\u0026amp; expr2 \u0026amp;\u0026amp; ... 若 expr1 为真，则返回 expr2 若 expr1 为假，则返回 expr1 1 2 3 4 console.log(123 \u0026amp;\u0026amp; 456); // 456 console.log(false \u0026amp;\u0026amp; 123); // false console.log(1 \u0026amp;\u0026amp; 2 \u0026amp;\u0026amp; 3); // 3 console.log(1 \u0026amp;\u0026amp; 1 \u0026amp;\u0026amp; false \u0026amp;\u0026amp; 2); // false 4.2.2 逻辑或 || 语法：expr1 || expr2 || ... 若 expr1 为假，则返回 expr2 若 expr1 为真，则返回 expr1 1 2 3 console.log(0 || 12); // 12 console.log(true || false || 2); // true console.log(0 || false || true || -2); // true 5. 赋值运算符 += -= *= /= 6. 拓展：JS特殊运算符 6.1 数字转化：单目运算符 + 单目运算符 + 作用于数字无效，结果不变。但是可以用来转化非数字类型为数字，等效于 Number()。\n1 2 3 4 5 6 let x = false; let y = \u0026#34;\u0026#34;; let z = \u0026#34;123.4\u0026#34;; console.log(+x); // 0 console.log(+y); // 0 console.log(+z); // 123.4 用于非数字型之间的数学运算，很简洁：\n1 2 3 let a = \u0026#34;12\u0026#34;; let b = \u0026#34;24\u0026#34;; console.log(+a + +b); // 36 6.2 逗号运算符 , 逗号运算符能让我们处理多个语句，使用 , 将它们分开。每个语句都运行了，但是只有最后的语句的结果会被返回。\n1 2 let a = (3 + 4, 5 + 6); console.log(a); // 11 6.3 布尔值转换符 !! 两个相邻的非逻辑运算符组成的 !!，可以将一个值转换为对应的布尔值。等效于 Boolean()。\n1 2 3 4 console.log(!!\u0026#34;0\u0026#34;); // true console.log(!!0); // false console.log(!!undefined); //false console.log(!!\u0026#34;aaa\u0026#34;); // true 6.4 空值合并运算符 ?? 我们将值既不是 null 也不是 undefined 的表达式定义为已定义的值（defined）。即：??。\na ?? b 结果为：\n若 a 已定义，则结果为 a 若 a 不是已定义的，则结果为 b 等价于：\n1 (a !== null \u0026amp;\u0026amp; a !== undefined) ? a : b; ","date":"2021-06-28T19:23:39+08:00","image":"https://blog.linsnow.cn/p/js-four/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-four/","title":"（四）JavaScript运算符"},{"content":"（三）数据类型 1. 数据类型概述 1.1 为什么需要数据类型 在计算机中，不同的数据所需占用的存储空间是不同的，为了便于把数据分成所需内存大小不同的数据，充分利用存储空间，于是定义了不同的数据类型。\n简单来说，数据类型就是数据的类别型号。比如姓名“张三” ，年龄18，这些数据的类型是不一样的。\n1.2 变量的数据类型 变量是用来存储值的所在处，它们有名字和数据类型。变量的数据类型决定了如何将代表这些值的位存储到计算机的内存中。==JavaScript是一种弱类型或者说动态语言==。这意味着不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。\n1 2 var age = 10; //这是一个数字型var arerouok =的； //这是一个字符串 在代码运行时，变量的数据类型是由JS引擎根据=右边变量值的数据类型来判断的，运行完毕之后，变量就确定了数据类型 JavaScript拥有动态类型，同时也意味着相同的变量可用作不同的类型：\n1 2 3 4 var x = 6; // x为数字 var x = \u0026#34;Bill\u0026#34;; // x为字符串 2. 简单数据类型 2.1 简单数据类型（基本数据类型） JavaScript中的简单数据类型及其说明如下：\n简单数据类型 说明 默认值 Number 数字型，包含整值和浮点值，如21、0.21 0 Boolean 布尔值类型，如true、 false，等价于1和0 false String 字符串类型，如“张三”注意js 里面，字符串都带引号 \u0026quot;\u0026quot; Undefined var a; 声明了变量a但是没有给值，此时a =undefinedNull undefined Null var a = null; 声明了变量a为空值 null 2.2 数字型 Number 1. 数字型进制 常见：二进制、八进制、十进制、十六进制\n0123: 0 开头表示八进制 0b11: 0b 开头表示二进制 0x11: 0x 开头表示十六进制 直接打印出来会转化为十进制 2. 数字型范围 1 2 console.log(Number.MAX_VALUE); console.log(Number.MIN_VALUE); 3. 特殊值 1 2 3 console.log(Infinity); console.log(-Infinity); console.log(NaN); Infinity：无穷大 -Infinity：无穷小 NaN：Not a number，代表一个非数值。 4. isNaN() isNaN 方法用来判断一个变量和或者一个值是数字类型，若不是数字类型则返回 true；否则返回 false。\n2.3 字符串型 String 1. 定义 字符长型可以是引号中的任意文本，其语法为双引号 \u0026quot;\u0026quot; 和单引号 ''。\n2. 字符串引号嵌套 JS可以用单引号嵌套双引号，或者用双引号嵌套单引号（外双内单，外单内双）\n1 2 var strmsg= \u0026#39;我是\u0026#34;高帅富\u0026#34;程序员\u0026#39;; var strmsg= \u0026#34;我是\u0026#39;高帅富\u0026#39;程序员\u0026#34;; 3. 字符串转义符 类似HTML里面的特殊字符，字符串中也有特殊字符，我们称之为转义符转义符都是\\开头的，常用的转义符及其说明如下：\n转义符 解释说明 \\n 换行符， n是 newline 的意思 \\\\ | \\' 单引号' \\\u0026quot; 双引号\u0026quot; \\t tab 缩进 \\b 空格，b 是 blank 的意思 4. 获取字符串长度 length 1 2 var str = \u0026#39;hello\u0026#39;; console.log(str.length); 4. 字符串拼接 多个字符串之间可以使用+进行拼接，其拼接方式为 ==字符串+任何类型=拼接之后的新字符串== 拼接前会把与字符串相加的任何类型转成字符串，再拼接成一个新的字符串\n5. 字符串拼接加强 将字符串和变量相加，以后要更新最终的结果字符串，只需更新变量的值。\n2.4 布尔型 Boolean 布尔型有两个值，true 和 false 布尔型（true，false）在参与加法时当作 1 和 0 使用 1 2 3 4 console.log(true+1); // 2 console.log(false+1); // 1 2.5 Undefined 1 2 3 4 5 console.log(undefined+1); // NaN console.log(undefined+NaN); // NaN console.log(undefined+true); // NaN console.log(undefined+\u0026#39;aaa\u0026#39;); // undefinedaaa console.log(undefined+undefined); // NaN 2.6 空值 Null 1 2 3 4 5 6 console.log(null+1); // 1 console.log(null+undefined); // NaN console.log(null+NaN); // NaN console.log(null+true); // 1 console.log(null+\u0026#39;aaa\u0026#39;); // nullaaa console.log(null+null); // 0 3. 获取变量数据类型 3.1 typeof 获取变量数据类型 typeof variable （typeof(variable)） 返回一个字符串，值为该变量的数据类型。\n1 2 3 4 5 6 7 8 console.log(typeof 1); // number console.log(typeof false); // boolean console.log(typeof \u0026#39;aaa\u0026#39;); // string console.log(typeof undefined);// undefined console.log(typeof NaN); // number console.log(typeof Infinity); // number console.log(typeof null); // object console.log(typeof typeof 1); // string 3.2 字面量 字面量是在源代码中一个固定的表示法，通俗来说，就是字面量如何表达这个值。\n数字字面量：1、0 字符串字面量：mphy、aaa 布尔字面量：true、false 4. 数据类型转换 4.1 什么是数据类型转换 使用表单、prompt获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。 通俗来说，就是把一种数据类型的变量转换成另外一种数据类型 我们通常会实现3种方式的转换：\n转换为字符串类型 转换为数字型 转换为布尔型 4.2 转换成字符串的三种方法 一般用第三种方式，隐式转换。\ntoString() 方法 String() 方法 加号 + 拼接字符串 1 2 3 4 var num = 12; console.log(num.toString()); console.log(String(num)); console.log(num + \u0026#39;\u0026#39;); 引申：数字字符长转数字\n1 2 var str = \u0026#39;123\u0026#39; console.log(str - \u0026#39;\u0026#39;); 4.3 转换为数字型 方式 说明 案例 parseInt(str) 函数 string-\u0026gt;整数型 parseInt(\u0026lsquo;10\u0026rsquo;) parseFloat() 函数 string-\u0026gt;浮点型 parseFloat(\u0026lsquo;3.14\u0026rsquo;) Number() 强转换函数 string-\u0026gt;数字型 Number(\u0026lsquo;12\u0026rsquo;) JS 隐式转换 算术运算符隐式转换为数字型 '12'- 0 或 '12' - '' 或 '12'*1 1 2 3 4 5 6 7 8 9 10 11 console.log(parseInt(\u0026#39;123\u0026#39;)); // 123 console.log(parseFloat(\u0026#39;3.14\u0026#39;)); // 3.14 console.log(\u0026#39;123\u0026#39; - 0); // 123 console.log(\u0026#39;123\u0026#39; - \u0026#39;\u0026#39;); // 123 console.log(parseFloat(\u0026#39;999\u0026#39;)); // 999 console.log(parseInt(\u0026#39;3.14159\u0026#39;)); // 3 console.log(parseInt(\u0026#39;120px\u0026#39;)); // 120 console.log(Number(\u0026#39;100\u0026#39;)); // 100 console.log(Number(\u0026#39;100.32\u0026#39;)); // 100.32 console.log(Number(\u0026#39;100px\u0026#39;)); // NaN console.log(\u0026#39;100px\u0026#39; - \u0026#39;\u0026#39;); // NaN 注意：\n数字字符串（'12.3'，12）之间进行加法运算实际上是字符串的拼接，结果还是字符串；而数字字符串之间的减法运算是算术运算，结果是数字型。 一个数字字符长和一个数字相乘，结果是算数运算结果，为数字型。 1 2 3 4 5 console.log(\u0026#39;10\u0026#39; + \u0026#39;2\u0026#39;); // 102 console.log(\u0026#39;10\u0026#39; - \u0026#39;2\u0026#39;); // 8 console.log(\u0026#39;10\u0026#39; + \u0026#39;3.2\u0026#39;); // 103.2 console.log(\u0026#39;10\u0026#39; - \u0026#39;3.2\u0026#39;); // 6.8 console.log(\u0026#39;12\u0026#39;*3); // 36 4.4 转换为布尔型 使用 Boolean() 函数转换。\n转换值为 false：'', 0, NaN, null, undefined（5个） 其他的转换值均为 true 1 2 3 4 5 6 console.log(Boolean(\u0026#39;\u0026#39;)); // false console.log(Boolean(0)); // false console.log(Boolean(NaN)); // false console.log(Boolean(null)); // false console.log(Boolean(undefined)); // false console.log(Boolean([])); // true 5. 标识符、关键字、保留字 5.1 标识符 标识（zhi）符：就是指开发人员为变量、属性、函数、参数取的名字。标识符不能是关键字或保留字。\n5.2 关键字 关键字：是指JS本身已经使用了的字，不能再用它们充当变量名、方法名。\n包括: break, case, catch, continue, default, delete, do, else, finally. for, function, if, in instanceof, new. return, switch, this, throw, try, typeof, var, void, while, with等。\n5.3 保留字 保留字：实际上就是预留的“关键字” ，意思是现在虽然还不是关键字，但是未来可能会成为关键字，同样不能使用它们当变量名或方法名。\n包括: boolean, byte, char, class, const, debugger, double, enum, export, extends fimal, float. goto, implements, import, int, interface, long, mative, package private, protected, public, short, static, super, synchronized, throws, transient volatile等。\n6. 拓展：8 种基本数据类型 8 种基本数据类型中，前 7 种为基本数据类型，最后 1 种为复杂数据类型（object）。\nnumber：用于任何类型的数字：整数或浮点数，在 $\\pm(2^{53}-1)$ 范围内的整数。 bigint：用于任意长的整数。 string：字符串，一个字符串可以包含 0 个或多个字符，没有单独的单字符类型。 boolean：值为 true 或 false null：未知的值，只有一个 null 值的独立类型。 undefined：未定义得值，只有一个 undefined 值的独立类型。 symbol：用于唯一的标识符。 object：用于更复杂的数据结构。 使用 typeof 运算符查看变量的数据类型：\n两种形式：typeof x 或 typeof(x) 以字符串的形式返回类型名称：例如 string typeof null 会返回 \u0026quot;object\u0026quot; —— 这是 JavaScript 编程语言的一个错误，实际上它并不是一个 object。 ","date":"2021-06-28T19:23:22+08:00","image":"https://blog.linsnow.cn/p/js-three/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-three/","title":"（三）JavaScript数据类型"},{"content":"（二）JavaScript变量 1. 变量的实质 变量是程序在内存中申请的一块用来存放数据的空间。\n2. 变量的声明 声明变量 赋值 2.1 声明变量 1 2 3 4 // 声明一个叫age的变量 var age; let name; const PI = 3.14; var 是一个JS关键字，用来声明变量（variable变量的意思），使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管 age 是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间 3. 变量的初始化 1 var age = 18; 初始化：声明并赋值\n4. 更新赋值 一个变量可以被重复赋值，变量值也会更新。\n1 2 var age = 18; age = 81; 5. 同时声明多个变量 1 2 3 var age = 18, url = \u0026#39;https://mphy.top\u0026#39;, myname = \u0026#39;MurphyChen\u0026#39; 6. 声明不赋值 1 2 3 4 var sex; console.log(sex); // undefined console.log(aaa); 7. 直接输出 1 2 console.log(tel); // 报错 8. 不声明直接赋值 1 2 3 qq = 12345; console.log(qq); // 12345 全局变量 9. 命名规范 由字母（A—Za—z）、数字（0—9）、下划线（）、美元符号（5）组成，如： usrAge， num01， name 严格区分大小写。var app；和var App；是两个变量 不能以数字开头。18age是错误的 不能是关键字、保留字。例如： var， for， while 变量名必须有意义。MMD BBD nl— age 遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。myFirstName推荐翻译网站：有道爱词霸 尽量不要使用 name 作为变量名 ","date":"2021-06-28T19:23:01+08:00","image":"https://blog.linsnow.cn/p/js-two/javascript_hu51e240a209599e33f736637c547cd908_22418_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/js-two/","title":"（二）JavaScript变量"},{"content":"（六）CSS 高级 1.1 精灵图 一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。\n因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了 CSS 精灵技术（也称 CSS Sprites. CSS 雪碧）。\n1.2 精灵图的使用 使用精灵图核心总结：\n精灵图主要针对于小的背景图片使用。 主要借助于背景位置来实现———background—position. 一般情况下精灵图都是负值。（千万注意网页中的坐标： x 轴右边走是正值，左边走是负值， y 轴同理。） 2.1 字体图标的产生 字体图标使用场景：主要用于显示网页中通用、常用的一些小图标精灵图是有诸多优点的，但是缺点很明显。\n图片文件还是比较大的。 图片本身放大和缩小会失真。 一旦图片制作完毕想要更换非常复杂。 此时，有一种技术的出现很好的解决了以上问题，就是==字体图标 iconfont== 字体图标可以为前端工程师提供一种方便高效的图标使用方式，==展示的是图标，本质属于字体。== 2.2 字体图标的优点 轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等\n兼容性：几乎支持所有的浏览器，请放心使用 注意：字体图标不能替代精灵技术，只是对工作中图标部分技术的提升和优化。\n总结：\n如果遇到一些结构和样式比较简单的小图标，就用字体图标。 如果遇到一些结构和样式复杂一点的小图片，就用精灵图。 2.3 字体图标的下载 推荐下载网站： icomoon 字库 http://icomoon.io\nIcoMoon 成立于 2011 年，推出了第一个自定义图标字体生成器，它允许用户选择所需要的图标，使它们成一字型。该字库内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。\n阿里 iconfont 字库 http://www.iconfont.cn 这个是阿里妈妈 M2UX 的一个 iconfont 字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用 Al 制作图标上传生成。重点是，免费！\n2.4 IconMoon 字体图标使用方法 选择字体并下载\n将下载文件中的 fonts 文件夹复制到项目根目录下\n字体声明，将 style.css 文件中的开头的字体声明代码赋值到 html 中\n给\n1 span 声明字体：\n1 2 3 span { font-family: \u0026#34;icomoon\u0026#34;; } 打开 demo.html，复制页面中的方框图标到 html 代码中即可。\n如何更新/添加字体图标？\n上传 selections.json，添加字体图标，重新生成。下载，更换 @font-face 内容。\n3. CSS 三角图形 1 2 3 4 5 6 7 8 9 .box1 { width: 0; height: 0; border: 10px solid transparent; border-left-color: black; /* 照顾兼容性 */ line-height: 0; font-size: 0; } 4. CSS 用户界面样式 4.1 鼠标样式 cursor 1 cursor: default | pointer | move | text | not-allowed; 4.2 取消表单轮廓和文本域缩放 1 2 3 4 5 6 7 input { outline: none; } textarea { outline: none; resize: none; } 5. vertical-align 的应用 vertical-align 指定行内/行内块元素的元素的垂直对齐方式。\n5.1 图片、表单和文字对齐 vertical-align 1 2 3 4 5 6 7 img { vertical-align: middle; } li { disaplay: inline-block; vertical-align: middle; } 5.2 解决图片底部默认空白缝隙问题 bug ：图片底侧会有一个空白缝隙，==原因是行内块元素会和文字的基线对齐。==主要解决方法有两种：\n给图片添加 vertical—align: middle topl bottom; 等。（提倡使用的） 把图片转换为块级元素 display: block； 6. 溢出的文字省略号显示 6.1 单行文本溢出显示省略号—必须满足三个条件 1 2 3 4 5 6 7 /*1·先强制一行内显示文本*/ white-space: nowrap; 默认normal 自动换行） /*2·超出的部分隐藏*/ overflow: hidden; /*3.文字用省略号替代超出的部分*/ text-overflow: ellipsis; 7. margin 负值巧妙利用 解决并排盒子之间的边框宽度加倍问题。 原理：让每个盒子压住前面的盒子，边框叠加。 鼠标移动边框颜色变化效果。 1 2 3 4 5 6 7 8 9 10 /*如果盒子没有定位，则鼠标经过添加相对定位即可*/ ul li:hover { position: relative; border: 1px solid orange; } /*若li都有定位，则使用 z-index 提高层级*/ ul li { z-index: 1; border: 1px solid orange; } 8. 文字围绕浮动元素巧妙运用 原理：浮动元素不会遮住文字。\n1 2 3 div { float: left; } 9. 行内块元素巧妙运用 行内块元素布局当前页码和 pre，next盒子，使用 text-align: center 居中。\n10. CSS 初始化 不同浏览器对有些标签的默认值是不同的，为了消除不同浏览器对 HTML 文本呈现的差异，照顾浏览器的兼容，我们需要对 CSS 初始化\n简单理解： CSS 初始化是指重设浏览器的样式。（也称为 CSS reset ）每个网页都必须首先进行 CSS 初始化。 这里我们以京东 css 初始化代码为例。\nUnicode 编码字体： 把中文字体的名称用相应的 Unicode 编码来代替，这样就可以有效的避免浏览器解释 CSS 代码时候出现乱码的问题。\n比如： 黑体：\\9ED1\\4F53 宋体：\\5B8B\\4F53 微软雅黑：\\5FAE\\8F6F196C519ED1\n","date":"2021-06-28T18:13:35+08:00","image":"https://blog.linsnow.cn/p/css-six/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-six/","title":"（六）CSS高级"},{"content":"（五）定位 1. 为什么需要定位 一些固定盒子的效果，标准流或浮动都无法快速实现，此时需要定位来实现。所以：\n浮动可以让多个块级盒子一行没有缝隙排列显示，经常用于横向排列盒子 定位则是可以让盒子自由的在某个盒子内移动位置或者固定屏幕中某个位置，并且可以压住其他盒子。 2. 定位组成 定位：将盒子定在某一个位置，所以定位也是在摆放盒子，按照定位的方式移动盒子。定位=定位模式+边偏移。\n定位模式用于指定一个元素在文档中的定位方式。边偏移则决定了该元素的最终位置。\n2.1 定位模式 定位模式决定元素的定位方式，它通过 CSS 的 position 属性来设置，其值可以分为四个值：\n值 语义 static 静态定位 relative 相对定位 absolute 绝对定位 fixed 固定定位 2.2 边偏移 边偏移就是定位的盒子移动到最终位置。有 top， bottom， left 和 right 4 个属性\n边偏移属性 示例 描述 top top:80px 顶端偏移量，定义元素相对于其父元素上边线的距离。 bottom bottom: 80px 底部偏移量，定义元素相对于其父元素下边线的距离。 left left： 80px 左侧偏移量，定义元素相对于其父元素左边线的距离。 right right: 80px 右侧偏移量，定义元素相对于其父元素右边线的距离。 3. 静态定位 static (了解) 静态定位是元素的默认定位方式，无定位的意思。语法：\n1 2 3 选择器 { position: static; } 静态定位按照标准流特性摆放位置，它没有边偏移静态定位在布局时很少用到。\n4. 相对定位 relative（重要） 相对定位是元素在移动位置的时候，是相对于它原来的位置来说的（自恋型）。\n语法：\n1 2 3 选择器 { position: relative; } 相对定位的特点：（务必记住）\n它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。 原来在标准流的位置继续占有，后面的盒子仍然以标准流的方式对待它。（不脱标，继续保留原来位置因此，相对定位并没有脱标。它最典型的应用是给绝对定位当爹的。 5. 绝对定位 absolute （重要） 绝对定位是元素在移动位置的时候，是相对于它祖先元素来说的（拼爹型）。\n语法：\n1 2 3 选择器 { position: absolute; } 绝对定位的特点： （务必记住）\n如果 没有祖先元素 或者 祖先元素没有定位，则以 浏览器 为准定位（ Document 文档）。 如果祖先元素有定位（相对、绝对、固定定位） ，则以最近一级的有定位祖先元素为参考点移动位置。 绝对定位不再占有原先的位置。（脱标） 6. 子绝父相的由来 弄清楚这个口诀，就明白了绝对定位和相对定位的使用场景。\n这个“子绝父相”太重要了，是我们学习定位的口诀，是定位中最常用的一种方式这句话的意思是：==子级是绝对定位的话，父级要用相对定位==\n子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。\n父盒子需要加定位限制子盒子在父盒子内显示。\n父盒子布局时，需要占有位置，因此父亲只能是相对定位。\n这就是子绝父相的由来，==所以相对定位经常用来作为绝对定位的父级。== 总结：==因为父级需要占有位置，因此是相对定位，子盒子不需要占有位置，则是绝对定位==\n7. 固定定位 fixed （重要） ==固定定位是元素固定于浏览器可视区的位置==。主要使用场景：可以在浏览器页面滚动时元素的位置不会改变。\n语法：\n1 2 3 选择器 { position: fixed; } 固定定位的特点： （务必记住）\n以浏览器的可视窗口为参照点移动元素。 跟父元素没有任何关系 不随滚动条滚动 固定定位不 ==占有原先的位置==。 固定定位也是脱标的，其实固定定位也可以看做是一种特殊的绝对定位。 ==固定定位小技巧：固定在版心右侧位置。==\n让固定定位的盒子 left： 50%，走到浏览器可视区（也可以看做版心）的一半位置。 让固定定位的盒子 margin—left）板心宽度的一半距离。多走版心宽度的一半位置就可以让固定定位的盒子贴着版心右侧对弃了 8. 粘性定位 sticky (了解) 粘性定位可以被认为是相对定位和固定定位的混合。Sticky 粘性的 语法：\n1 2 3 4 选择器 { position: sticky; top: 10px; } 粘性定位的特点：\n以浏览器的可视窗口为参照点移动元素（固定定位特点） 粘性定位占有原先的位置（相对定位特点） 必须添加 top， left， right， bottom 其中一个才有效跟页面滚动搭配使用。兼容性较差， IE 不支持。 9. 定位叠放次序 z-index 在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用 z—index 来控制盒子的前后次序（z 轴）\n语法：\n1 2 3 选择器 { z-index: 1; } 数值可以是正整数、负整数或 0，默认是 auto ，数值越大，盒子越靠上 如果属性值相同，则按照书写顺序，后来居上 数字后面不能加单位 只有定位的盒子才有 z—index 属性 10. 定位的拓展 10.1 绝对定位的盒子居中 ==加了绝对定位的盒子不能通过 margin：0auto 水平居中==，但是可以通过以下计算方法实现水平和垂直居中。\nleft： 50% ：让盒子的左侧移动到父级元素的水平中心位置。 margin—left：—100px； ：让盒子向左移动自身宽度的一半。 10.2 定位特殊特性 绝对定位和固定定位也和浮动类似。\n行内元素添加绝对或者固定定位，可以直接设置高度和完度。 块级元素添加绝对或者固定定位，如果不给宽度或者高度，默认大小是内容的大小。 10.3 脱标的盒子不会触发外边距塌陷 浮动元素、绝对定位（固定定位）元素的都不会触发外边距合并的问题。\n10.4 绝对定位（固定定位）会完全压住盒子 浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）但是绝对定位（固定定位）会压住下面标准流所有的内容。\n浮动之所以不会压住文字，因为浮动产生的目的最初是为了做文字环绕效果的。文字会围绕浮动元素\n11. 网页布局总结 通过盒子模型, 清楚知道大部分 html 标签是一个盒子。 通过 CSS 浮动、定位可以让每个盒子排列成为网页。 一个完整的网页, 是标准流、浮动、定位一起完成布局的, 每个都有自己的专门用法。\n标准流 可以让盒子上下排列或者左右排列, ==垂直的块级盒子显示就用标准流布局。== 浮动 可以让多个块级元素一行显示或者左右对齐盒子, ==多个块级盒子水平显示就用浮动布局。== 定位 定位最大的特点是有层叠的概念, 就是可以让多个盒子前后暑压来显示。==如果元素自由在某个盒子内移动就用定位布局。== 4. 元素的显示与隐藏 类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！本质：让一个元素在页面中隐藏或者显示出来。\n4.1 display 属性 display 属性用于设置一个元素应如何显示。 display： none; 隐藏对象 display ： block; 除了转换为块级元素之外，同时还有显示元素的意思 ==display 隐藏元素后，不再占有原来的位置。== 后面应用及其广泛，搭配 JS 可以做很多的网页特效。\n4.2 visibility 可见性 visibility 属性用于指定一个元素应可见还是隐藏。- - visibility : visible;元素可视 visibility : hidden;元素隐藏 visibility 隐藏元素后，继续占有原来的位置 如果隐藏元素想要原来位置，就用 visibility ： hidden 如果隐藏元素不想要原来位置，就用 display ： none （用处更多重点）\n4.3 overflow 溢出 overflow 属性指定了如果内容溢出一个元素的框（超过其指定高度及宽度）时，会发生什么。 |属性值|描述| |-|-| |visible|不剪切内容也不添加滚动条| |hidden|不显示超过对象尺寸的内容| |scroll|超出的部分隐藏掉不管超出内容否，总是显示滚动条| |auto|超出自动显示滚动条，不超出不显示滚动条|\n一般情况下，我们都不想让溢出的内容显示出来，因为溢出的部分会影响布局。但是如果有定位的盒子，请慎用overflowhidden 因为它会隐藏多余的部分。\n","date":"2021-06-28T18:11:19+08:00","image":"https://blog.linsnow.cn/p/css-five/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-five/","title":"（五）CSS定位"},{"content":"（四）CSS 浮动 1. 浮动（float） 1.1 传统网页布局方式 网页布局的本质——用 CSS 来摆放盒子，把盒子放到相应位置。\nCSS 提供了三种传统布局方式：\n普通流 浮动 定位 1.2 标准流（普通流/文档流） ==所谓的标准流，就是标签按照规定好的默认方式排列。==\n块级元素会独占一行，从上到下顺序排列 常用元素：div、hr、p、h1-h6、ul、ol、dl、form、table 行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。 常用元素：span、a、i、em 标准流是最基本的布局方式。\n以上三种方式都是来摆放盒子的，盒子摆到合适位置，布局自然就完成了。\n实际开发中，一个页面基本包含三种布局方式。\n1.3 为什么需要浮动？ 很多布局效果，标准流没办法完成，此时就可以利用浮动完成布局。浮动可以改变元素标签默认排列方式。\n浮动最典型应用：让多个块级元素一行显示。\n==网页布局第一准则：多个块级元素纵向排列找标准流，多个块级元素找浮动。==\n==网页布局第二准则：先设置盒子大小，再设置盒子位置。==\n1.4 什么是浮动？ float 属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘及包含块或另一个浮动框的边缘。\n语法\n1 选择器 { float: 属性值; }Copy to clipboardErrorCopied 属性值 描述 none 元素不浮动 left 元素向左浮动 right 元素向右浮动 1.5 浮动特性（重点） 加了浮动之后的元素，会具有一些特性。\n浮动元素会脱离标准流 浮动元素会一行内显示并且元素顶部对齐 浮动的元素会具有行内块元素的特性 重要特性\n脱离文档流的控制（浮）移动到指定位置（动），脱标 脱离文档流的盒子，会漂浮在文档流的盒子上面，不占位置。 如果多个盒子都设置了浮动，则它们会按照属性值一行显示并且顶端对齐排列。 浮动的元素是相互贴在一起的（没有间隙），若父级宽度放不下盒子，多出的盒子会另起一行对齐。 ==浮动元素具有行内块元素特性。== 任何元素都可以浮动，设置了后元素都具有行内块元素性质。 若块级元素没有设置宽度，则默认和父级一样宽 浮动盒子中间无间隙，紧挨着 行内块元素同理 1.6 浮动元素经常和标准流父级元素搭配使用 为了约束元素位置，一般采取：\n==先用标准流父元素上下排列位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则。==\n2. 常见网页布局 浮动和标准流的父盒子搭配\n==先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置。==\n一个元素浮动了，理论上其余兄弟元素也要浮动\n一个盒子里有多个盒子，其中一个盒子浮动，其他兄弟也应该浮动，防止引起问题。\n==浮动的盒子只会影响浮动盒子后面的标准流，不会引起前面的标准流。==\n3. 清除浮动 3.1 为什么需要清除浮动 由于父级盒子很多情况下，不方便给高度，当时盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的盒子，对后面元素排版产生影响。\n3.2 清除浮动的本质 清除浮动的本质是清除浮动元素造成的影响 如果父盒子本身具有高度，则不需要清除浮动 清除浮动之后，父级会根据浮动的子盒子自动检测高度，父级有了高度，就不会影响下面的标准流了。 3.3 清除浮动 语法：\n1 2 3 选择器: { clear: 属性值; } 属性值 描述 left 不允许左侧有浮动元素 right 不允许右侧有浮动元素 both 同时清除左右两侧浮动 ==清除浮动策略：闭合浮动==\n方法：\n额外标签法（隔墙法），是 W3C 推荐的方法 ==父级添加 overflow 属性== ==父级添加 after 伪元素== ==父级添加双伪元素== 3.4 清除浮动（1）——额外标签法 也成为隔墙法，是 W3C 推荐的方法。\n==额外标签法是在最后一个浮动元素末尾添加一个 空块级元素，==给其赋以属性 clear:both;。\n1 2 3 4 \u0026lt;style\u0026gt; clear: both; \u0026lt;/style\u0026gt; \u0026lt;div class=\u0026#34;clear\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 优点：通俗易懂，书写方便 缺点：添加许多无意义的标签，结构化差 总结\n清除浮动的本质\n清除浮动的本质是清除浮动元素脱离标准流造成的影响\n清除浮动的策略\n闭合浮动，只让浮动在父盒子内部影响，不影响父盒子外面的其他盒子。\n使用场景\n实际开发中可能会遇到，但是不常用。\n3.5 清除浮动（2）——父级添加 overflow 可以给父级添加 overflow 属性，将其属性设置为 hidden、auto或scroll。\n注意是给父元素添加代码：\n优点：代码简洁 缺点：无法显示溢出部分 3.6 清除浮动（3）——:after 伪元素法 实际上也是额外标签法的一种。\n1 2 3 4 5 6 7 8 9 10 11 .clearfix { content: \u0026#34;\u0026#34;; display: block; height: 0; clear: both; visibility: hidden; } .clearfix { /*IE6、7专有*/ *zoom: 1; } 3.7 清除浮动（4）——双伪元素法 语法\n1 2 3 4 5 6 7 8 9 10 11 .clearfix::before, .clearfix::after { content: \u0026#34;\u0026#34;; display: table; } .clearfix::after { clear: both; } .clearfix { *zoom: 1; } 优点：代码更简洁 缺点：照顾低版本浏览器 代表网站：小米、腾讯 3.8 清除浮动总结 为什么需要清除浮动？\n父级没高度 子盒子浮动了 影响下面布局了，应该清除浮动。 4. PS 切图 4.1 常见的图片格式 JS 图像格式：JPEG（JPG）对色彩的信息保留较好，高清，颜色较多，==产品类的图片经常用到 jpg 格式的==。 gif 图像格式，GIF 格式最多只能存储 256 色，所以通常用来显示简单图形及字体，但是可以保存透明背景和动画效果，==实际上经常用于一些图片小动画效果。== png 图像格式是一种新兴的网络图形格式，结合了 GIF 和 JPEG 的特点，具有存储形式的特点，能够保存透明背景。==如果想要切成背景透明的图片，请先择 png 格式。== PSD 图像格式是 Photoshop 的专用格式，里面可以存放图层、通道、遮罩等多种设计稿。==对我们前端人员来说，最大的优点是我们可以上面复制文字，获得图片，还可以测量大小和距离。== 4.2 图层切图 最简单的切图方式：鼠标点击设置为移动工具-\u0026gt;点击图层-\u0026gt;快速导出为 PNG。\n4.3 合并图层 但是很多情况下，需要合并图层并导出：\n按住 shift 选中需要合并的图层：图层菜单-\u0026gt;合并图层（Ctrl+E） 右击-\u0026gt;快速导出为 PNG 最好的方法是：与美工设计沟通。\n4.4 切片切图 利用切片工具手动划出切片范围\n若要切出透明 logo.png，则需要将图层下拉至最下面，然后点击小眼睛使背景消失。\n文件菜单-\u0026gt;导出-\u0026gt;存储为 web 设备所用格式-\u0026gt;选择我们要的图片格式-\u0026gt;存储。\n4.5 PS Cutterman 插件切图 Cutterman 是一款在 PS 中的插件，能够自动将你需要的图层进行输出，以替代传统的手动“导出为 web 所用格式”以及使用切片工具进行挨个切图的繁琐流程。\n5. 学成在线案例 5.1 准备素材和工具 5.2 结构与样式分离 5.3 CSS 属性书写顺序（重点） 布局定位属性 自身属性 文本属性 其他属性 5.4 开始 1.定版心\n1 2 3 .w { margin: 1200px auto; } 2.导航栏注意点：\n实际开发中，不会直接用链接 a 而是用 li 包含链接（li+a）的做法。\nli+a 语义更清晰，一看就是有条理的列表型内容。 如果直接用 a，搜索引擎容易辨别为有堆砌关键字嫌疑（故意堆砌关键字容易被搜索引擎有降权的风险），从而影响网站排名。 让导航栏一行显示，给 li 加浮动，因为 li 是块级元素，需要一行显示。 这个 nav 导航栏可以不给宽度，将来可以继续添加其余文字。 因为导航栏里面文字不一样多，所以最好给链接 a 左右 padding 撑开盒子，而不是指定宽度。 浮动的盒子不会有外边距合并的问题. ","date":"2021-06-28T18:04:13+08:00","image":"https://blog.linsnow.cn/p/css-four/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-four/","title":"（四）CSS浮动"},{"content":"（三）盒子模型 1. 盒子模型 1.1 看透网页本质 网页布局过程：\n准备网页元素，网页元素基本都是盒子 box ==利用 CSS 设置好盒子样式，然后摆放到相应位置。== 往盒子里放东西。 本质：利用 CSS 摆盒子。\n1.2 盒子模型（Box Model）组成 CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，包括：边框、外边距、内边距和实际内容。\n1.3 边框（border） border 可以设置元素边框。边框有三个组成：border-width、border-style、border-color\n语法\n1 2 /*属性可连写*/ border: border-width || border-style || border-color; 属性 作用 border-width 定义边框粗细，单位 px border-style 边框样式 border-color 边框颜色 边框属性简写\n1 2 /*习惯顺序*/ border: 5px solid pink; 边框属性分写\n1 2 /*注意层叠性*/ border-top: 1px solid red; 1.4 表格的细线边框 border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。\n语法\n1 border-collapse: collapse; collapse 是合并的意思 border-collapse:collapse; 表示将相邻边框合并在一起 1.5 边框会影响盒子实际大小 边框会额外增加盒子的实际大小，因此有两种方案解决。\n测量盒子大小的时候，不测边框。 若测量的时候包含了边框，则需要 width/height-边框宽度。 1.6 内边距 padding padding 属性设置内边距，即边框与内容之间的距离。\npadding-left: 左内边距 padding-right: 右内边距 padding-top: 上内边距 padding-bottotm: 下内边距 padding 属性简写\npadding 的值的个数：\n1 个值：上下左右 2 个值：上下，左右 3 个值：上，左右，下 4 个值：上，右，下，左，顺时针 padding 会影响盒子实际大小\n当给盒子指定了 padding 值以后，发生了两件事情：\n内容和边框有了距离，增加内边距 padding 值影响了盒子实际大小 也就是说，当盒子已经有了宽度和高度，再指定内边距，会撑大盒子。\n要保证盒子和效果图一样大，则让 width/height-多出来的内边距大小即可。\n1.7 box-sizing 属性解决方案 CSS 中的 box-sizing 属性定义了 user agent 应该如何计算一个元素的总宽度和总高度。\n在设置了一个盒子的 width/height 后，再设置其 border/padding 会影响盒子实际大小。当进行响应式布局时，这个尤其烦人。\nbox-sizing 属性可以被用来调整这些表现。\n1 content-box 是默认值。如果你设置一个元素的宽为\n1 100px ，那么这个元素的内容区会有\n1 100px 宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。\n1 box-sizing: content-box; 1 border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在\n1 width 内的。也就是说，如果你将一个元素的\n1 width 设为\n1 100px ，那么这 100px 会包含它的\n1 border 和\n1 padding ，内容区的实际宽度是\n1 width 减去\n1 (border + padding) 的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。\n1 box-sizing: border-box; 尺寸计算公式：\n1 width = border + padding + 内容的宽度 1 height = border + padding + 内容的高度 若盒子没有指定 width/height 属性，则此时 padding 不会撑开盒子大小。\n1.8 外边距 margin 属性用于设置外边距，即控制盒子与盒子之间的距离。\nmargin-left: 左外边距 margin-right: 右外边距 margin-top: 上外边距 margin-bottotm: 下外边距 margin 简写方式与 padding 一致。\n1.9 外边距典型应用 外边距可以让块级盒子 水平居中，但是必须满足两个条件：\n盒子必须指定宽度（width） 盒子左右的外边距都设置为 auto 1 2 3 4 .header { width: 960px; margin: 0 auto; } 使行内元素或行内块元素水平居中\n1 text-align: center; 1.10 外边距合并 1. 相邻元素垂直外边距的合并 当上下相邻块元素相遇时，若上面的元素有下外边距，下面的元素有上外边距，则他们之间的垂直间距不是 margin-bottotm 与 margin-top 之和。==取两个值中的较大者这种现象被称为相邻元素垂直外边距的合并。==\n2. 嵌套块元素垂直外边距的塌陷 对于两个嵌套关系的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。\n解决方案\n为父元素定义上边框 为父元素定义上内边距 为父元素添加 overflow:hidden 1.11 清除内外边距 网页元素很多都带有默认内外边距，而且不同浏览器默认的也不一致，因此在布局前，要先清除网页元素的内外边距。\n语法\n1 2 3 4 * { margin: 0; padding: 0; } ==注意：行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以设置。==\n2. PS 基本操作 文件-\u0026gt;打开：打开测量的图片 Ctrl+r ：打开标尺，或者视图-\u0026gt;标尺 鼠标拖动标尺可将标尺移动到PS图片上 右击标尺，将单位改为像素 Ctrl+-：放大/缩小视图 按住空格键，鼠标可以拖动PS视图 用选区拖动，可以测量大小 Ctrl+D 可以取消选区，或者在旁边空白处点击一下也可以取消选区 3. 圆角边框 CSS3 新增 圆角边框 属性，盒子可以变成圆角。\nborder-radius 属性用于设置元素的外边框圆角。\n语法\n1 border-radius: length; 原理\n（椭）圆与边框的交集形成的圆角效果。\n参数\n参数值可以为数值或百分比的形式 ==若是正方形，想要设置一个圆，则将数值修改为高度或者宽度的一般即可，或者直接写为 50%== ==若是矩形，设置为 height 的一半就可以做 ==简写属性，跟四个值，分别代表左上角、右上角、右下角、左下角== 分开来写：border-top-left-radius、border-top-right-radius、border-bottom-right-radius、border-bottom-left-radius 4. 盒子阴影 CSS3 新增盒子阴影，使用 box-shadow 属性。\n语法\n1 bxo-shadow: h-shadow v-shadow blur spread color inset; 值 描述 h-shadow 必需，水平阴影的位置，允许负值 v-shadow 必需，垂直阴影的位置，允许负值 blur 可选，模糊距离 spread 可选，阴影的尺寸 color 可选，阴影的颜色 inset 可选，将外部阴影改为内部阴影（默认是外部阴影） 注意：\n默认是外阴影，但是不可以写这个单词（outset） 盒子阴影不占空间，不会影响其他盒子排列 5. 文字阴影 CSS3 中，使用 text-shadow 属性设置文本阴影。\n值 描述 h-shadow 必需，水平阴影位置。允许负值。 v-shadow 必须，垂直阴影。允许负值。 blur 可选，模糊距离。 color 可选，阴影颜色。 ","date":"2021-06-28T17:53:24+08:00","image":"https://blog.linsnow.cn/p/css-three/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-three/","title":"（三）CSS之盒子模型"},{"content":"（二）CSS 复合选择器与特性 1. Emmet 语法 快速生成 HTML 结构代码 快速生成 CSS 样式代码 2. 复合选择器 由基础选择器组合而成。\n后代选择器 子选择器 并集选择器 伪类选择器 2.1 后代选择器（重要） 后代选择器又称为包含选择器，可以选择父元素里的子元素。==写法是将外层标签写在前面，内层标签写在后面，中间空格分开。== 语法\n1 元素1 元素2 { 样式声明; } ==上述语法表示选择元素 1 里面所有的元素 2== 可以连续嵌套，比如可以是孙子等 元素 1、2 可以是任何基础标签 2.2 子选择器（重要） ==子元素选择器（子选择器）只能选择作为元素作为元素的最近一级子元素==。简单理解就是选亲儿子。\n语法\n1 元素1 \u0026gt; 元素2 { 样式声明; } 元素之间用大于号 \u0026gt; 隔开 1 为父级。二为子级，最终选择的是元素 2 元素 2 必须是亲儿子。 2.3 并集选择器 ==并集选择器可以选择多组标签，同时为他们定义相同的样式。通常用于集体声明。==\n并集选择器是各选择器通过英文逗号 , 连接而成，任何形式的选择器都可以作为并集选择器的一部分。\n语法\n1 元素1, 元素2 { 样式声明; } 2.4 伪类选k择器 ==伪类选择器用于向某些选择器添加特殊的效果。== ==伪类选择器书写最大特点是用冒号 : 表示。== 伪类选择器种类多，比如链接伪类选择器、结构选择器等。\n2.4.1 链接伪类选择器 1 2 3 4 a:link /*选择所有未被访问的链接*/ a:visited /*选择所有已被访问的链接*/ a:hover /*选择鼠标指针位于其上的链接*/ a:active /*选择活动链接（鼠标按下未弹起的链接）*/ 注意事项\n==确保样式生效，要按照 LVHA 的顺序声明：link,visited,hover, active。== a 链接在浏览器中有默认样式，所以实际开发都需要给链接单独指定样式。 开发中实际写法\n1 2 3 4 5 6 7 8 a { color: gray; text-decoration: none; } a:hover { color: #369; text-decoration: underline; } 2.4.2 focus 伪类选择器 :focus 伪类选择器用于获取焦点的表单元素。 焦点就是光标，一般情况 \u0026lt;input\u0026gt; 类表单元素才能获取，==因此这个选择器也主要针对表单元素来说。==\n1 2 3 input:focus { background-color: yellow; } 2.4.3 其他标准伪类选择器 1.first-child\n:first-child 是 CSS 伪类，表示父元素的第一个子元素。\n\\2. last-child\n:last-child CSS 伪类 代表父元素的最后一个子元素。\n\\3. nth-child(n)\n1 :nth-child(an+b)` ==这个 CSS 伪类首先找到所有当前元素的兄弟元素==，然后按照位置先后顺序从 1 开始排序，选择的结果为 CSS 伪类 `:nth-child`括号中表达式 `(an+b)` 匹配到的元素集合 `(n=0，1，2，3...) \\4. :not(p)\n:not() 用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类（negation pseudo-class）。\n\\5. ::after (:after)\nCSS 伪元素 ::after 用来创建一个伪元素，作为已选中元素的最后一个子元素。通常会配合 content 属性来为该元素添加装饰内容。这个虚拟元素默认是行内元素。\n1 2 3 4 .exciting-text::after { content: \u0026#34;\u0026lt;- 让人兴兴兴奋!\u0026#34;; color: green; } 我们几乎可以用想要的任何方法给 content 属性里的文字和图片的加上样式.\n\\6. ::before (:before)\nCSS 中，::before 创建一个伪元素，其将成为匹配选中的元素的第一个子元素。常通过 content 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。 使用 ::before 伪元素的一个简单示例就是用于加入引号。\nHTML\n1 \u0026lt;q\u0026gt;一些引用\u0026lt;/q\u0026gt;, 他说, \u0026lt;q\u0026gt;比没有好。\u0026lt;/q\u0026gt;. CSS\n1 2 3 4 5 6 7 8 q::before { content: \u0026#34;«\u0026#34;; color: blue; } q::after { content: \u0026#34;»\u0026#34;; color: red; } 2.5 复合选择器总结 选择器 作用 特征 使用情况 隔开符号及用法 后代选择器 用来选择后代元素 可以是子孙后代 较多 符号是空格 .nav a 子代选择器 选择最近一级元素 只能选亲儿子 较少 符号是大于 .nav\u0026gt;p 并集选择器 选择某些相同样式的元素 可以用于集体声明 较多 符号是逗号，.nav, a 链接伪类选择器 选择不同状态的链接 跟链接相关 较多 重点记住a{}和a:hover{} :focus 选择器 选择获得光标的表单 跟表单相关 较少 记住input:focus用法 3. 元素显示模式 3.1 什么是元素显示模式 作用：网页的标签非常多，不同地方使用不同，了解其特点可以更好布局。\n==HTML 元素分为块元素和行内元素。==\n3.2 块元素 常见的块元素有 h1-h6、p、div、ul、ol、li等。 块级元素的特点：\n独占一行。 ==高度、宽度、外边距以及内边距都可以控制。== 宽度默认是容器（父级宽度）的 100%。 是一个容器及盒子，里面可以方行内或块级元素。 注意：\n文字类的标签内不能放块级元素。 文字类元素有 p，h1-h6，尤其不能放 div 元素。 3.3 行内元素 常见行内元素：a、strong、b、em、i、del、s、ins、u、span，典型行内元素是 span，行内元素也叫内联元素。\n行内元素的特点：\n相邻行内元素在一行上，一行可以显示多个。 ==高、宽直接设置是无效的。== 默认宽度就是它本身内容宽度。 ==行内元素只能容纳文本或其他行内元素。== 注意\n==a 链接里面不能放链接== ==特殊情况链接 a 里面可以放块级元素，但是给 a 转换一下块级模式最安全。== 3.4 行内块元素 在行内元素中有几个特殊标签——img, input、td，它们同时具有块元素和行内元素的特点。\n有些资料称为行内块元素。\n行内块元素的特点：\n和相邻元素（行内块）在一行上，之间存在空白缝隙，一行可以显示多个。 默认宽度是本身内容宽度。 高度、行高、外边距、内边距都可以控制（块级元素特点）。 3.5 元素显示模式总结 | 元素模式 | 元素排列 | 设置样式 | 默认宽度 | 包含 | | \u0026mdash;\u0026mdash;\u0026mdash;- | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash; | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash; | \u0026mdash; | | 块级元素 | 一行只能放一个块级元素 | 可以设置高度宽度 | 容器的 100% | 可以包含任何标签 | | 行内元素 | 一行可以放多个行内元素 | 不可以设置宽度高度 | 本身内容宽度 | 容纳文本或者其他行内元素 | | 行内块元素 | 一行可以放置多个行内块元素 | 可以设置高度宽度 | 本身内容宽度 | | a |\n3.6 元素模式转换 特殊情况下，需要将一个元素的模式转换为另外一宗模式，使其具有另外一种模式的特性。 比如想要增加链接 a 的触发范围。\n行内元素可以转换为块元素，块元素也能转换为行内元素。\n行内-\u0026gt;块级\n1 2 3 a { display: block; } 块级-\u0026gt;行内\n1 2 3 div { display: inline; } 行内/块级-\u0026gt; 行内块元素\n1 2 3 span { display: inline-block; } 3.7 一个小技巧——单行文字垂直居中 解决方案：==让文字的行高等于盒子的高度。==\n原理分析：行高=文字本身高度+上空隙+下空隙=盒子高度\n当行高小于盒子高度，则文字偏上；当行高大于盒子高度，文字偏下。\n4. CSS 的背景 CSS 背景属性可以给元素添加背景样式。\n背景属性可以设置==背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。==\n4.1 背景颜色 background-color 定义了元素的背景颜色。\n1 background-color: 颜色值; 一般而言，颜色默认值是 transparent（透明），我们也可以指定背景颜色为透明色或其他色。\n4.2 背景图片 ==background-image 属性描述了元素的背景图像，实际开发用于 logo 或者一些装饰性开发的小图片或者是超大的背景图片，优点是便于控制位置。（也用于精灵图）==\n1 background-image: none|url(图片url); 4.3 背景平铺 若需要在 HTML 页面上对背景图进行平铺，可以使用 background-repeat 属性。\n1 background-repeat: repeat(默认) | no-repeat | repeat-x | repeat-y; 页面元素·既可以添加背景图片，也可以添加背景颜色，图片会覆盖颜色。\n4.4 背景图片位置 background-position 可以改变图片在背景中的位置。\n1 background-position: x y; 参数 x 和 y 指 x 左边和 y 坐标，可以使用方位名词或者精确定位。\n参数值 说明 length 百分数 / 由浮点数字和单位字符组成的长度值 position top / center / bottom / left / center / right 方位名词 1.参数是方位名词\n若两个值都是方位名词，则两个值前后顺序无关，比如left top和top left 效果一致。 若只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐。 2.参数是精确单位\n第一个必定是 x 坐标。第二个是 y 坐标 若只指定一个数值，则另一个必定是 y 轴居中 3.参数是混合单位\n若是混合单位，则第一个值是 x 坐标，第二个值是 y 坐标。 4.5 背景图像固定 background-attachment 属性设置背景图像是否随着页面其余部分滚动。\nbackground-attachment 后期可以制作视差滚动效果。\n1 background-attachment: scroll | fixed; 参数 作用 scroll 背景图像随着对象内容滚动 fixed 背景图像固定 4.6 背景属性复合写法 简化代码，将属性写在同一个属性 background 下。 一般按照约定顺序编写。\n== background 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置==\n1 background: transparent url(image.jpg) repeat-y fixed top; 4.7 背景颜色半透明 CSS3 提供 background: rgba(r,g,b,a) 属性设置图片透明度。\n1 background: rgba(0, 0, 0, 0.3); CSS3 新增属性，IE9+支持 5. CSS 的三大特性 CSS 有三个非常重要的特性：层叠性、继承性、优先级。\n5.1 层叠性 相同选择器设置相同的样式，此时一个样式就会覆盖另一个冲突的样式。层叠性主要解决样式冲突的问题。\n层叠性原则：\n样式冲突：遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式 样式不冲突，不会层叠 5.2 继承性 CSS 中子标签会继承父标签的某些样式，如文本颜色和字号。\n恰当使用继承可以简化代码，降低 CSS 的复杂性 子元素可以继承父元素的样式（text-, font-, line-这些元素开头的可以继承，以及 color 属性） 5.2.1 行高的继承性 1 2 3 body { font: 12px/1.5 Microsoft Yahei; } 行高可以跟单位也可以不跟 如果子元素没有设置行高，则会继承父元素的行高为 1.5 此时子元素的行高是：当前子元素的文字大小*1.5 body 行高 1.5 这样写法最大优势就是里面的子元素可以根据文字大小自动调整行高 5.3 优先级 当一个元素指定多个选择器时，就会有有优先级的产生。\n选择器相同，则执行层叠性 选择器不同，则根据选择器权重执行 ==选择器权重如下所示。==\n选择器 选择器权重 继承或者* 0,0,0,0 元素选择器 0,0,0,1 类选择器，伪类选择器 0,0,1,0 ID 选择器 0,1,0,0 行内样式 style=\u0026quot;\u0026quot; 1,0,0,0 !important ∞ 无穷大 1 2 3 p { color: pink !important; } 注意\n==继承的权重为 0，即使加了 important 权重也还是 0。== a 链接，浏览器默认指定了一个样式，蓝色，下划线，不会继承父级样式 复合选择器权重的叠加\n权重可以叠加，需要计算权重，但是没有进位。\n","date":"2021-06-28T17:48:55+08:00","image":"https://blog.linsnow.cn/p/css-two/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-two/","title":"（二）CSS复合选择器与特性"},{"content":"（一）CSS 简介与基础选择器 1. CSS 简介 1.1 HTML 的局限性 HTML 是网友的骨架，只关注内容的语义。例如\u0026lt;h1\u0026gt;表示大标题，\u0026lt;p\u0026gt;表示段落。\n早期的时候，HTML 只能做一些简单的样式，网页非常丑，而且使 HTML 代码臃肿。\n1.2 CSS-网页的美容师 CSS 是 层叠样式表（Cascading Style Sheets）的简称。\nCSS 也是一种标记语言。\nCSS 主要用于设置 HTML 页面中的文本内容（字体、大小、对齐方式）、图片的外形（宽高、边框样式、边距等）以及版面的布局和外观显示样式。·\nHTML 呈现结构，CSS 决定样式，结构与样式分离。\n1.2 CSS 语法规范 CSS 规则由两个部分组成：选择器和一条或多条声明。\n1.3 CSS 代码风格 展开式 选择器，属性名，属性关键字全部小写 空格规范 2. CSS 基础选择器 2.1 选择器的作用 选择器就是根据不同需求把不同标签选择出来。\n2.2 选择器分类 选择器分为基础选择器和复合选择器两大类。\n基础选择器由单个选择器组成 基础选择器包括：标签选择器、类选择器、id 选择器和通配符选择器 2.3 标签选择器 直接用 HTML 标签名作为选择器，按标签名称分类，为页面某一类标签指定统一的 CSS 样式。\n语法\n1 2 3 4 5 标签名 { 属性1： 属性值1; 属性2： 属性值2; 属性3： 属性值3; } 优点 标签选择器可以把某一标签全部选择出来，快速为同类型标签设置统一样式。\n缺点 不能设置差异化样式，只能选择全部当前标签。\n2.4 类选择器 差异化选择不同标签，单独选一个或者某个标签。\n语法\n使用 class 属性来调用 class 类，样式点定义，结构类调用，一个或多个，开发最常用。\n类选择器用 . 号显示。\n注意\n类选择器用 . 标识，紧跟类名。 小写，使用 - 连接单词。 不要用纯数字、中文。 命名有意义。 2.4.1 类选择器-多类名 类名间用空格分开\n1 \u0026lt;p class=\u0026#34;class-name1 class-name2\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; 2.5 id 选择器 id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。\nHTML 元素以 id 属性来设置 id 选择器，用 # 来定义。\n1 2 3 4 #id名 { 属性1: 属性值1; ... } 样式 # 定义，结构 id 调用，别人切勿使用。\nid 选择器与类选择器的区别\n类选择器可以被多个元素调用。 id 选择器只能允许一个标签调用。 类选择器使用的较多，id 选择器用于唯一特性的标签。 2.6 通配符选择器 语法\n1 2 3 4 * { 属性1: 属性值1; ... } 用 * 定义通配符选择器，选取页面中所有标签。 不需要调用，自动给所有标签。 特殊情况使用 1 2 3 4 * { margin: 0; padding: 0; } 2.7 基础选择器总结 基础选择器 作用 特点 使用情况 用法 标签选择器 选中所有相同标签 不能差异化选择 较多 p{color:red;} 类选择器 选出一个或多个标签 可以根据需求选择 较多 .nav {color: red;} id 选择器 一次只能选出一个标签 一个 id 属性在页面中只能出现一次 一般配合 js 使用 #nav {color: red;} 通配符选择器 选择所有标签元素 选择的太多，有部分不需要 特殊情况使用 * {color: red; } 每个选择器都有自己的使用场景，都要掌握。 如果是修改样式，类选择器是使用最多的。 3. CSS 字体属性 3.1 字体系列 CSS 使用 font-family 属性定义文本字体系列。 尽量使用默认字体，保证不同浏览器的兼容性。\n1 2 3 body { font-family: \u0026#34;微软雅黑\u0026#34;, Arial, Helvetica, sans-serif; } 3.2 字体大小 CSS 使用 font-size 属性定义字体大小。\n1 2 3 body { font-size: 16px; } px 大小是我们网页常用单位 谷歌浏览器默认是 16px 可以给 body 指定整个页面文字大小 3.3 字体粗细 CSS 使用 font-weight 属性设置字体粗细\n1 2 3 p { font-weight: 700; } 实际开发中，更常用数字来表示加粗或变细。400为normal，700 为 bold。 |属性值|描述| |-|-| |normal|默认值| |bold|定义粗体| |100-900|400 等价于 normal，700 等价于 bold，无单位|\n3.4 文字样式 CSS 使用 font-style 属性设置文本风格。\n1 p { font-style: italic; }Copy to clipboardErrorCopied 属性值 描述 normal 正常显示 italic 斜体 注意：平常很少给字体加斜体，而是给斜体标签（em,i）给位不倾斜字体。\n3.5 字体复合属性写法 将各种字体属性写在同一选择器下，节约代码。\n规则\n严格遵守顺序，且 font-sieze 和 font-family 必须有。\n1 2 3 body { font: font-style font-weight font-size/line-hight font-family; } 3.6 字体属性总结 字体属性 表示 注意 font-size 字号 单位是 px font-family 字体 按照团队约定来写 font-weight 字体粗细 400=normal，700=bold font-style 字体样式 italic，normal，常用 normal font 属性连写 顺序不能变，==字体和字号属性必须有== 4. CSS 文本属性 CSS Text（文本）属性定义文本外观，比如颜色、对齐、装饰、缩进、行间距等。\n4.1 文本颜色 color 属性定义文本颜色。\n1 2 3 div { color: red; } 属性值 |表示颜色|属性值| |-|-| |预定义的颜色值|red,green,pink| |十六进制|#FF0000，#FF6600| |RGB 代码|rgb(255,0,0)|\n实际开发中，最常用的是十六进制。\n4.2 对齐文本 text-align 属性用于设置元素文本内容的对齐方式。\n1 2 3 div { text-align: center; } 属性值 解释 left 左对齐（默认） right 右对齐 center 居中对齐 4.3 装饰文本 text-decoration 属性规定添加到文本的修饰。可以给文本添加下划线、删除线、上划线等。\n1 text-decoration: underline; 属性值 描述 none ==默认，无装饰（最常用）== underline ==下划线，a 标签自带（常用）== overline 上划线。（几乎不用） line-through 删除线。（不常用） 4.4 文本缩进 text-indent定义段落首行缩进。\n1 2 3 p { text-indet: 5px; } em 是一个相对单位，1em 就是一个字符所占大小。当 text-indent=2em，则恰好缩进两个文字。\n4.5 行间距 line-height 设置行间的距离，行间距=文本高度+上间距+下间距\n4.6 文本属性总结 属性 表示 注意 color 文本颜色 通常十六进制缩写 text-align 文本对齐 text-indent 文本缩进 记住 text-indent: 2em; text-decoration 文本装饰 记住下划线和去除下划线 line-height 行高 5. CSS 引用方式 按照 CSS 书写的位置不同，CSS 样式表可以分为三大类：\n行内样式表（行内式） 内部样式表（嵌入式） 外部样式表（链接式） 5.1 内部样式表 将 CSS 代码写在 HTML 页面内部，单独放在一个 \u0026lt;style\u0026gt; 标签中。\n\u0026lt;style\u0026gt; 理论上可以放在 HTML 文档中任何一个地方，一般放在 \u0026lt;head\u0026gt; 标签中。 方便控制整个页面中的元素样式。 ==练习时使用，实际开发不用。==\n5.2 行内样式表 ==行内样式表（内联样式表）是在元素标签内部的 style 属性中设定 CSS 样式，适合修改简单样式。==\n1 \u0026lt;div style=\u0026#34;color: red; font-size: 12px\u0026#34;\u0026gt;行内样式表\u0026lt;/div\u0026gt; 设置当前标签样式 ==书写繁琐，不推荐大量使用。== 5.3 外部样式表 实际开发中都是外部样式表，适用于样式比较多的情况。 核心：样式单独写到 CSS 文件中，再将 CSS 文件引入到 HTML 页面中。\n引入格式\n1 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css文件路径\u0026#34; /\u0026gt; ","date":"2021-06-28T17:40:25+08:00","image":"https://blog.linsnow.cn/p/css-one/css_hu19bf36480724bf850c7b8208b65febaf_13270_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/css-one/","title":"（一）CSS简介与基础选择器"},{"content":"(二)Html之SEO优化 1. TDK 标签 SEO 优化 SEO（Search Engine Optimization），即搜索引擎优化，是一种利用搜索引擎的规则提高网站在有关搜索引擎内自然排名的方式。\nSEO 的目的是对网站进行深度优化，从而帮助网站获得免费流量，进而在搜索引擎上提升网站排名，提高网站知名度。\n页面必须有三个标签用来进行 SEO 优化。\ntitle description keyword 1 2 3 4 5 6 \u0026lt;!-- 网站标题 --\u0026gt; \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; \u0026lt;!-- 网站说明 --\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; \u0026lt;!-- 网站关键词 --\u0026gt; \u0026lt;meta name=\u0026#34;keywords\u0026#34; content=\u0026#34;\u0026#34;\u0026gt; 1.1 title 网站标题 title 具有不可替代性，是我们内页的第一个重要标签，是搜索引擎了解网页的入口和对网页主题归属的最佳判断点。\n建议：网站名（产品名）- 网站的介绍（尽量不要超过30个汉字）\n例如：\n京东(JD.COM) - 综合网购首选-正品低价、品质保障、配送及时、轻松购物！ 小米商城 - 小米5s、红米Note 4、小米MIX、小米笔记本官方网站 1.2 description 网站说明 简要说明我们网站主要是做什么的。\n我们提倡，description 作为网站的总体业务和主题概括，多采用“我们是…”、“我们提供…”、“×××网作为…”、“电话：010…”之类语句。\n例如：\n1 2 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;京东JD.COM-专业的综合网上购物商城,销售家电、数码通讯、电脑、家居百货、服装服饰、母婴、图书、食品等数万个品牌优质商品.便捷、诚信的服务，为您提供愉悦的网上购物 体验!\u0026#34; /\u0026gt; 1.3 keywords 关键字 keywords 是页面关键词，是搜索引擎的关注点之一。 keywords 最好限制为6～8 个关键词，关键词之间用英文逗号隔开，采用关键词1,关键词2 的形式。 例如：\n1 2 \u0026lt;meta name= \u0026#34; keywords\u0026#34; content=\u0026#34;网上购物,网上商城,手机,笔记本,电脑,MP3,CD,VCD,DV,相机,数码,配 件,手表,存储卡,京东\u0026#34; /\u0026gt; 2. LOGO SEO 优化 logo 里面首先放一个h1 标签，目的是为了提权，告诉搜索引擎，这个地方很重要。 h1 里面再放一个链接，可以返回首页的，把logo 的背景图片给链接即可。 为了搜索引擎收录我们，我们链接里面要放文字（网站名称），但是文字不要显示出来。 方法1：text-indent 移到盒子外面（text-indent: -9999px) ，然后overflow:hidden ，淘宝的做法。 方法2：直接给font-size: 0; 就看不到文字了，京东的做法。 最后给链接一个title 属性，这样鼠标放到 logo 上就可以看到提示文字了。 ","date":"2021-06-28T17:22:23+08:00","image":"https://blog.linsnow.cn/p/html-seo/html_hu6dd5a696928fc4239dcae5e7be2a4e26_49460_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html-seo/","title":"(二)Html之SEO优化"},{"content":"（二）HTML 标签（下） 1. 表格标签 1.1 表格的主要作用 表格主要用于显示、展示数据，因为可以让数据显示非常规整，可读性好。 表格不是来布局的，而是来展示数据的。\n1.2 表格基本语法 \u0026lt;table\u0026gt;\u0026lt;/table\u0026gt; 用于定义表格的标签。 \u0026lt;tr\u0026gt;\u0026lt;/tr\u0026gt; 标签用于定义表格中的行，必须嵌套在 \u0026lt;table\u0026gt;\u0026lt;/table\u0026gt;中。 \u0026lt;td\u0026gt;\u0026lt;/td\u0026gt; 用于定义表格中的单元格，必须嵌套在 \u0026lt;tr\u0026gt;\u0026lt;/tr\u0026gt; 中。 字母 td 指表格数据（table data），即单元格的内容。 1.3 表头单元格标签 th 一般单元格位于表格的第一行或第一列，表格单元格里面的文本内容 加粗显示。 \u0026lt;th\u0026gt; 标签表示 HTML 表格的表头部分（table head 的缩写） 表头单元格(\u0026lt;th\u0026gt;)也是单元格，常用于表格第一行，突出重要性，表头单元格里面的文字会加粗居中显示。\n1.4 表格属性 只作了解，后期通过 CSS 来设置。 这些属性都要写到 \u0026lt;table\u0026gt;\u0026lt;/table\u0026gt; 标签中\n属性名 属性值 描述 align left、center、right 表格元素对齐方式 border 1 或\u0026quot;\u0026quot; 规定是否有边框，默认为\u0026quot;\u0026quot;，表示没有边框 cellpadding 像素值 规定单元边沿与其内容之间空白，默认 1px cellspacing 像素值 规定单元格之间的空白，默认为 2px width 像素值或百分比 规定表格宽度 hight 像素 表格高度 1.5 表格结构标签 场景：表格可能很长，将表格分割为表格头部和表格主题两大部分。\n加强语义化：\u0026lt;thead\u0026gt; 表示头部区域，\u0026lt;tbody\u0026gt; 表示主体区域，更好区分表格结构。\n注意：\n\u0026lt;thead\u0026gt;\u0026lt;/thead\u0026gt;：定义表格头部，且内部必须有\u0026lt;tr\u0026gt;标签。 \u0026lt;tbody\u0026gt;\u0026lt;/tbody\u0026gt;：定义表格主体，存放数据。 以上标签都放在 \u0026lt;table\u0026gt;\u0026lt;/table\u0026gt; 里面。 1.6 合并单元格 合并单元格方式：\n跨行合并：rowspan=\u0026ldquo;合并单元格个数\u0026rdquo; 跨列合并：colspan=\u0026ldquo;合并单元格个数\u0026rdquo; 合并三部曲：\n确定跨行 or 跨列。 找到目标单元格：跨行取最上面为目标单元格，跨列取最左边为目标单元格。\u0026lt;td colspan=\u0026quot;2\u0026quot;\u0026gt;\u0026lt;/td\u0026gt; 删除多余单元格。 2. 列表标签 表格展示数据，列表则用来布局。 列表特点是整齐、整洁、有序，作为布局更方便自由。 根据使用场景不同，列表分为三大类：\n无序列表 有序列表 自定义列表。 2.1 无序列表（重要） \u0026lt;ul\u0026gt; 标签标识 HTML 页面项目中的无序列表，一般以项目符号呈现列表项。\n语法格式:\n1 2 3 4 5 \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;列表项1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;列表项2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;列表项3\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; 注意:\n各个列表项之间无需，并列关系。 \u0026lt;ul\u0026gt;\u0026lt;/ul\u0026gt;中只能包含\u0026lt;li\u0026gt;\u0026lt;/li\u0026gt;，写入其他标签或文字是不允许的。 无序列表带有自己的属性，可用 CSS 修改样式属性。 2.2 有序列表（理解） 使用 \u0026lt;ol\u0026gt; 标签来定义有序列表，\u0026lt;li\u0026gt; 来定义列表项。\n1 2 3 4 5 \u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;列表项1\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;列表项2\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;列表项3\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; 与无需列表类似，有自己的样式属性，通过 CSS 设置。\n2.3 自定义列表（重点） \u0026lt;dl\u0026gt; 定义描述列表，与 \u0026lt;dt\u0026gt; 和 \u0026lt;dd\u0026gt; 标签配合使用。\n基本语法：\n1 2 3 4 5 \u0026lt;dl\u0026gt; \u0026lt;dt\u0026gt;名词1\u0026lt;/dt\u0026gt; \u0026lt;dd\u0026gt;名词1解释1\u0026lt;/dd\u0026gt; \u0026lt;dd\u0026gt;名词1解释2\u0026lt;/dd\u0026gt; \u0026lt;/dl\u0026gt; 注意\ndl 里面只能包含 dt 和 dd。 3. 表头标签 3.1 为什么需要表达 收集用户信息。 和用户进行交互，收集用户资料。\n3.2 表达组成 表单域 表单控件（元素） 提示信息 3.3 表单域 表单域是一个包含表单元素的区域。 使用 \u0026lt;form\u0026gt; 标签用于定义表单域，手机和传递用户信息。 form 标签会将它范围内的表单元素信息提交给服务器。\n目前而言，暂时不需要用表单域提交数据，只需要写上 form 标签即可。\n语法格式\n1 2 3 \u0026lt;form action=\u0026#34;url地址\u0026#34; method=\u0026#34;提交方式\u0026#34; name=\u0026#34;表单域名称\u0026#34;\u0026gt; 各种表单元素控件 \u0026lt;/form\u0026gt; 常用属性：\n属性 属性值 作用 action url 地址 指定接受并处理表单数据的服务器的 url 地址 method get/post 设置表单数据的提交方式 name 名称 用于指定表单名称，区分同一个页面中的多个表单域 注意：\n写表单元素之前需要有表单域将其包含。 表单域是 form 标签。 3.4 表单控件（表单元素） 在表单域中定义各种表单元素，允许用户在表单中输入或选择的内容控件。\n3.4.1 表单元素 \u0026lt;input\u0026gt; 标签用于收集用户信息。\ninput 标签包含 type 属性，决定了输入字段的不同形式：文本字段、复选框、掩码后的文本控件、单选按钮、按钮等。\n1 \u0026lt;input type=\u0026#34;属性值\u0026#34; /\u0026gt; input 标签为单标签 type 属性设置不同属性值来指定不同控件类型 type 常用属性值\n属性值 描述 button 定义可点击按钮 chekbox 复选框 file 定义输入字段和“浏览”按钮，供文件上传 hidden 定义隐藏的输入字段 image 定义图像形式的提交按钮 password 定义密码字段。字符被掩码。 radio 定义单选按钮 reset 定义重置按钮，清除表单所有数据。 submit 定义提交按钮。重置按钮会清除表单所有数据。 text 定义输入字段。用户可输入文本，默认宽度为 20 个字符。 input 的其他属性\n属性 属性值 描述 name 自定义 定义 input 元素名称 value 自定义 规定 input 元素的值 checked checked 规定此 input 元素首次加载时应当被选中 maxlength 正整数 规定输入字段字符的最大长度 注意\n对于 radio 单选框，必须使 input 的 name 具有相同的属性值，才能实现多选一。 同理，复选框也要有相同的name值。 单选框和复选框可以设置 checked 属性，页面打开默认选择按钮。 设置 type 的值为 submit，点击按钮后可以把表单域 form 里面的表单元素里面的值提交给后台。 设置 type=\u0026quot;button\u0026quot;，普通按钮，后期结合 js 使用 3.4.2 label 标签 \u0026lt;label\u0026gt; 标签为 input 元素定义标注。 \u0026lt;label\u0026gt; 标签用于绑定一个表单源深路，当点击 label 标签内的文本时，浏览器自动将焦点转到或者选择对应的表单元素上，提升用户体验。 语法：\n1 \u0026lt;label for=\u0026#34;sex\u0026#34;\u0026gt;男\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;sex\u0026#34; id==\u0026#34;sex\u0026#34; /\u0026gt; 核心： \u0026lt;lable\u0026gt;标签的 for 属性与相关元素的 id 属性相同。\n3.4.3 select 下拉表单元素 select 标签设置多个选项让用户选择，节约页面空间。 语法\n1 2 3 4 5 \u0026lt;select\u0026gt; \u0026lt;option\u0026gt;选项1\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;选项2\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;选项3\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; 注意\nselect 中至少包含一对 option。 在 option 中定义属性selected=selected，当前项即为默认选项。 3.4.4 textarea 文本域表单元素 场景：输入内容较多时。\n语法：\n1 2 3 \u0026lt;textarea rows=\u0026#34;3\u0026#34; cols=\u0026#34;20\u0026#34;\u0026gt; 文本内容 \u0026lt;/textarea\u0026gt; 注意\ncols=\u0026ldquo;每行字符数\u0026rdquo;，rows=\u0026ldquo;显示的行数\u0026rdquo; ","date":"2021-06-28T17:00:01+08:00","image":"https://blog.linsnow.cn/p/html-biaoqian-next/html_hu6dd5a696928fc4239dcae5e7be2a4e26_49460_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html-biaoqian-next/","title":"(二)HTML标签（下）"},{"content":"（二）HTML 标签（上） 1. HTML 语法规范 1.1 基本语法规范 HTML 标签是由尖括号包围的关键词，例如\u0026lt;html\u0026gt;。 HTML 标签通常是成对出现的，例如\u0026lt;html\u0026gt;和\u0026lt;html/\u0026gt;，称为双标签。第一个是开始标签，第二个是结束标签。 有些特殊标签必须是单个标签（极少情况），例如\u0026lt;br/\u0026gt;，我们称之为单标签。 1.2 标签关系 标签关系可以分为两类：包含关系和并列关系\n2. HTML 基本结构标签 每个网页都会有一个基本的结构标签，页面内容都是在这些基本标签上书写。 HTML 页面也叫 HTML 文档。\n3. 开发工具 3.1 文档类型声明标签 !\u0026lt;DOCTYPE\u0026gt; 文档类型声明，告诉浏览器使用何种 HTML 版本来显示网页。\n1 \u0026lt;!DOCTYPE html\u0026gt; 这句话的意思是：当前页面采用的是 HTML5 版本来显示网页。 注意：\n\u0026lt;!DOCTYPE\u0026gt; 声明位于文档最前面的位置，处于\u0026lt;html\u0026gt;标签之前。 \u0026lt;!DOCTYPE\u0026gt; 不是一个 HTML 标签，他就是文档类型声明标签。 3.2 lang 语言种类 用来显示当前文档显示的语言。\n1 2 3 \u0026lt;html lang=\u0026#34;zh-CN\u0026#34;\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt;\u0026lt;/html\u0026gt; \u0026lt;/html\u0026gt; en 定义语言为英文。 zh-CN 定义语言为中文。 这个属性对浏览器和搜索引擎（谷歌/百度）还是有作用的。\n3.3 charset 字符集 1 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34; /\u0026gt; 字符集（character set）是多个字符的集合，以便计算机能够识别和存储各种文字。\n在\u0026lt;head\u0026gt;标签内，可以通过\u0026lt;meta\u0026gt;标签的charset 属性来设置文档使用何种字符编码。\ncharset常用的值有：GBK、UTF-8，其中UTF-8被称为万国码，基本包含了全世界所有国家需要用到的字符。\n4. HTML 常用标签 4.1 标签语义 标签语义就是标签的含义。\n根据标签的语义，再合适的地方给一个最合理的标签，可以让页面结构更清晰。\n4.2 标题标签 h1-h6（重要） 为了使网页具有语义化，经常使用标题标签，HTML 提供 6 个等级的网页标题标签即 \u0026lt;h1\u0026gt;-\u0026lt;h6\u0026gt;。\n1 2 3 4 5 6 7 \u0026lt;h1\u0026gt;标题标签\u0026lt;/h1\u0026gt; \u0026lt;h1\u0026gt;标题一共六级选,\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;文字加粗一行显。\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;由大到小依次减，\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;从重到轻随之变。\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;语法规范书写后，\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;具体效果刷新见。\u0026lt;/h6\u0026gt; 单词为 head 简写，从 h1-h6 依据重要性递减。\n4.3 段落和换行标签（重要） p 指paragraph，意为段落。把文字有条理的显示出来就需要将文字分段显示。在 html 中，\u0026lt;p\u0026gt; 标签用于定义段落，将整个网页分成若干个段落。\n1 \u0026lt;p\u0026gt;我是一个段落标签\u0026lt;/p\u0026gt; 标签语义: 把 HTML 文档分割为若干段落。\n特点：\n文本在一个段落中会根据浏览器窗口的大小自动换行。 段落和段落之间保有空隙。 \u0026lt;br/\u0026gt; 是 break 缩写，意为打断、换行。\n标签语义： 强制换行\n特点：\n\u0026lt;br/\u0026gt; 是个单标签。 \u0026lt;br/\u0026gt; 标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。 课堂案例\n体育新闻显示页面——基本标签的使用\n4.4 文本格式化标签 在网页中，有时候需要为文字设置粗体、斜体或下划线等效果，需要使用 HTML 中的文本格式化标签，使文字以特殊方式显示。\n标签语义： 突出重要性，比普通文字重要。\n语义 标签 说明 加粗 \u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt;或\u0026lt;b\u0026gt;\u0026lt;/b\u0026gt; 更推荐\u0026lt;strong\u0026gt;，语义更强烈 斜体 \u0026lt;em\u0026gt;\u0026lt;/em\u0026gt;或\u0026lt;i\u0026gt;\u0026lt;/i\u0026gt; 更推荐使用\u0026lt;em\u0026gt;，语义更强烈 删除线 \u0026lt;del\u0026gt;\u0026lt;/del\u0026gt;或\u0026lt;s\u0026gt;\u0026lt;s/\u0026gt; 更推荐使用\u0026lt;del\u0026gt;，语义更强烈 下划线 \u0026lt;ins\u0026gt;\u0026lt;/ins\u0026gt;或\u0026lt;u\u0026gt;\u0026lt;/u\u0026gt; 更推荐使用\u0026lt;ins\u0026gt;，语义更强烈 4.5 div 和 span 标签 和 是没有语义的，它们是一个盒子，用来装内容的。 1 2 \u0026lt;div\u0026gt;这是头部\u0026lt;/div\u0026gt; \u0026lt;span\u0026gt;今日价格\u0026lt;/span\u0026gt; div 是 division 的缩写，表示分割、分区。span 意思是跨度、跨距。\n特点：\ndiv 标签用来布局，但是现在一行只能放一个 div，大盒子。 span 标签用来布局，一行可以多个 span，小盒子。 4.6 图像标签和路径（重点） 4.6.1 图像标签 在 HTML 标签中，\u0026lt;img /\u0026gt; 标签用于定义 HTML 标签页面中的图像。\n1 \u0026lt;img src=\u0026#34;图像url\u0026#34; /\u0026gt; 单词 image 的缩写，意为图像。\nsrc 是标签的 必须属性，用于指定图像文件的路径和文件名。\n属性： 属于这个图像标签的特性。\n图像标签的其他属性\n属性 属性值 说明 src 图片路径 必须属性 alt 文本 替换文本，当图片不显示时显示文字 title 文本 提示文本。鼠标放到图像上显示文字 width 像素 图像宽度 height 像素 图像高度 border 像素 图像边框粗细 4.6.2 路径 相对路径 绝对路径 1. 相对路径 相对路径： 以引用文件位置为参考基础，而建立出来的目录路径。是相对于 HTML 页面的位置。\n分类 符号 说明 同级路径 同一级 下一级路径 / 位于 HTML 文件上一级 上一级路径 ../ 位于 HTML 文件下一级 2. 绝对路径 绝对路径： 是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径或者完整的网络地址。\n4.7 超链接标签 在 HTML 标签中，\u0026lt;a/\u0026gt; 标签用于从一个页面链接到另一个页面。\n4.7.1 链接的语法格式 a 是单词 anchor 的简写，是锚的意思。\n1 \u0026lt;a href=\u0026#34;跳转目标\u0026#34; target=\u0026#34;目标窗口的弹出方式\u0026#34;\u0026gt;文本或图像\u0026lt;/a\u0026gt; 属性\n属性 作用 href 指定链接地址 url，为必须属性。 target 指定页面打开方式，_self为默认值，_blank为在新窗口中打开 4.7.2 超链接分类 外部链接\n内部链接：网站内部页面之间的相互链接。\n空链接: #\n下载链接：地址链接的是文件.exe、压缩包.zip 等。\n网页元素链接：在网页中的各种网页元素。如文本、图像、表格、音频、视频等。\n锚点链接：\n点击链接，可以快速定位到页面中的某个位置。\n在链接文本的href属性中，设置属性为 #名字的形式 找到目标位置标签，里面添加一个 id 属性 = 名字 5. HTML 中的注释和特殊字符号 注释: \u0026lt;!--注释--\u0026gt; VSCode 中快捷键：Ctrk + / 字符实体 字符 显示 空格 \u0026lt; ＜ \u0026gt; ＞ ©]\\ © ","date":"2021-06-28T16:59:44+08:00","image":"https://blog.linsnow.cn/p/html-biaoqian-first/html_hu6dd5a696928fc4239dcae5e7be2a4e26_49460_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html-biaoqian-first/","title":"（二）HTML标签（上）"},{"content":"（三）HTML常用标签之综合案例 Html常用标签综合案例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 HTML \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=\u0026lt;\u0026gt;, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h4\u0026gt;青春不常在，抓紧谈恋爱\u0026lt;/h4\u0026gt;\u0026lt;br\u0026gt; \u0026lt;table width=\u0026#34;500\u0026#34;\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; 性别:\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;sex\u0026#34; id=\u0026#34;man\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;images/男.png\u0026#34; width=\u0026#34;16\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;man\u0026#34;\u0026gt;男\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;sex\u0026#34; id=\u0026#34;woman\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;images/女.png\u0026#34; width=\u0026#34;16\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;woman\u0026#34;\u0026gt;女\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;td\u0026gt; 生日: \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;select\u0026gt; \u0026lt;option\u0026gt;1985\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;1986\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;1987\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;1988\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;1989\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;1990\u0026lt;/option\u0026gt; \u0026lt;option selected=\u0026#34;selected\u0026#34;\u0026gt;-请选择年-\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;select\u0026gt; \u0026lt;option\u0026gt;01\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;02\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;03\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;04\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;05\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;06\u0026lt;/option\u0026gt; \u0026lt;option selected=\u0026#34;selected\u0026#34;\u0026gt;-请选择月-\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt; \u0026lt;select\u0026gt; \u0026lt;option\u0026gt;01\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;02\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;03\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;04\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;05\u0026lt;/option\u0026gt; \u0026lt;option\u0026gt;06\u0026lt;/option\u0026gt; \u0026lt;option selected=\u0026#34;selected\u0026#34;\u0026gt;-请选择日-\u0026lt;/option\u0026gt; \u0026lt;/select\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- 第三行 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;label for=\u0026#34;dq\u0026#34;\u0026gt;所在地区:\u0026lt;/label\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;adress\u0026#34; id=\u0026#34;dq\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- 第四行 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; 婚姻状况 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;marry\u0026#34; id=\u0026#34;m\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;m\u0026#34;\u0026gt;未婚\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;marry\u0026#34; id=\u0026#34;li\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;li\u0026#34;\u0026gt;离婚\u0026lt;/label\u0026gt;\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- 第五行 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; \u0026lt;label for=\u0026#34;degree\u0026#34;\u0026gt;学历\u0026lt;/label\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;de\u0026#34; id=\u0026#34;degree\u0026#34;\u0026gt;\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;!-- 第六行 --\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; 喜欢的类型 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;k\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;k\u0026#34;\u0026gt;可爱的\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;k\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;k\u0026#34;\u0026gt;可爱的\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;ki\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;ki\u0026#34;\u0026gt;妩媚的\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;xiao\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;xiao\u0026#34;\u0026gt;小鲜肉\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;lao\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;lao\u0026#34;\u0026gt;老腊肉\u0026lt;/label\u0026gt; \u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;kind\u0026#34; id=\u0026#34;all\u0026#34;\u0026gt;\u0026lt;label for=\u0026#34;all\u0026#34;\u0026gt;都喜欢\u0026lt;/label\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt; 自我介绍 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;textarea cols=\u0026#34;50\u0026#34; rows=\u0026#34;5\u0026#34;\u0026gt; 自我介绍 \u0026lt;/textarea\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;submit\u0026#34; value=\u0026#34;免费注册\u0026#34;\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;input type=\u0026#34;checkbox\u0026#34; checked=\u0026#34;checked\u0026#34; \u0026gt;我同意服务条款\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;我是会员，立即登录\u0026lt;/a\u0026gt;\u0026lt;br\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; \u0026lt;h4\u0026gt;我承诺\u0026lt;/h4\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;年满18，单身\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;抱着严肃的态度\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;真诚寻找另一半\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;form \u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; ","date":"2021-06-28T16:44:57+08:00","image":"https://blog.linsnow.cn/p/html-all-example/html_hu6dd5a696928fc4239dcae5e7be2a4e26_49460_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html-all-example/","title":"（三）HTML常用标签之综合案例"},{"content":"（一）HTML简介 网页 什么是网页 网页是根据因特网上一定的规则，使用html等制作的用于展示特定内容的网页集合。\n网页是构成网站的基本元素。\n网页是图片、链接、文字、声音、视频等源深路组成，其实就是一个html文件。\n什么是HTML HTML指的是超文本标记语言（Hyper Text Markup Language）,它是用来描述网页的一种语言。\nHTML不是一种编程语言，而是一种标记语言（markup language）。 标记语言是一套标记标签（markup tag）。\n超文本的含义：\n它可以加入图片、声音、动画、多媒体等内容（超越文本限制）。 它可以从一个文件跳转到另一个文件，于世界各地主机的文件连接（超级链接文本）。 网页的形成 网页由网页元素组成，这些元素通过html标签描述出来，然后通过浏览器解析并显示出来。\n常用浏览器及其内核 常用浏览器 浏览器是网页显示、运行的平台。\n五大浏览器有 IE、Firefox、Chrome、Safari 和 Opera。\n四大内核：Trident, Gecko, Webkit, Blink\n浏览器内核 浏览器内核（渲染引擎）：负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。\n浏览器 内核 备注 IE Trident IE、猎豹安全、360、百度浏览器 firefox Gecko 火狐浏览器内核 Safari Webkit 苹果浏览器内核 Chrome/Opera Blink chrome/opera 浏览器内核 Web标准 Web标准是由W3C组织和其他标准化组织制定的一系列标准的集合。\n为什么需要Web标准 浏览器不同，它们显示的页面或者排版有些许差异。\n遵循Web标准除了可以让不同的开发人员写出的页面更标准、更统一外，还有以下优点：\n让Web标准发展前景更为广阔 内容能被更广泛的设备访问。 更容易被搜索引擎了搜索。 降低网站流量费用。 易于维护。 提高页面浏览速度。 Web标准的构成 标准 说明 结构 结构对网页元素进行整理和分类，现阶段主要是HTML 表现 表现用于设置网页元素的版式、颜色、大小等外观样式，主要是指CSS 行为 行为是指网页模型的定义以及交互的编写，现阶段主要是JS Web标准提出的最佳体验方案：结构、表现、行为相分离。\n","date":"2021-06-28T16:28:10+08:00","image":"https://blog.linsnow.cn/p/html-biaoqian/html_hu6dd5a696928fc4239dcae5e7be2a4e26_49460_120x120_fill_box_smart1_3.png","permalink":"https://blog.linsnow.cn/p/html-biaoqian/","title":"（一）HTML简介"}]